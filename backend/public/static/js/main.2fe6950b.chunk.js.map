{"version":3,"sources":["assets/loginPage.svg","utility/utils.js","components/Login.js","assets/passwordRenew.svg","components/ResetPassword.jsx","components/PrivateRoute.js","components/AuthRenew/AuthRenewRoute.js","assets/logo.svg","components/Navbar.jsx","components/Sprint/SubTaskForm.jsx","components/NotFound.jsx","assets/noactivesprint.svg","components/utilitycomponents/Editor.js","assets/gitBranch.svg","assets/pullrequest.svg","components/Sprint/UserStoryTab.jsx","components/Sprint/SprintTable.jsx","assets/createTicket.svg","assets/sprint.svg","assets/nobacklog.svg","components/Sprint/Backlog.jsx","components/Sprint/SprintHistory.jsx","components/Sprint/UserStoryForm.jsx","components/Sprint/SprintForm.jsx","assets/sprintHome.svg","components/Sprint/sprintHome.jsx","components/Sprint/ProjectBoard.jsx","assets/teamsHome.svg","components/Projects.jsx","assets/bio.svg","assets/git.svg","assets/organization.svg","components/AuthRenew/AuthRenewPage.jsx","assets/imagePlaceHolder.svg","components/Profile.jsx","components/Admin/UsersTable.jsx","assets/admin.svg","components/Admin/adminPage.js","App.js","reportWebVitals.js","index.js"],"names":["ADDRESS","FETCH_DATA","api","a","token","sessionStorage","getItem","requestOptions","method","headers","Authorization","fetch","response","json","data","ok","Notification","error","title","msg","description","style","width","rows","placement","status","POST_DATA","body","message","JSON","stringify","success","PUT_DATA","DELETE_DATA","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","StringType","Schema","Types","loginModel","Model","email","isRequired","password","TextField","props","name","label","accepter","type","rest","FormGroup","ControlLabel","FormControl","withRouter","useReducer","state","newState","login","users","userLogin","userPass","firstname","resetEmail","show","lastname","setState","setItem","access_token","user","userRole","organization","from","pathname","firstLogin","validGitToken","open","resetPassword","emailRegex","match","join","test","String","toLowerCase","util","useEffect","newUrl","origin","history","pushState","decodeURI","className","display","justifyContent","height","alignContent","alignItems","maxWidth","src","Homeimg","alt","fontSize","fontWeight","lineHeight","marginBottom","color","marginRight","Form","model","onSubmit","onChange","value","Button","appearance","textAlign","textDecoration","cursor","marginTop","marginLeft","onClick","Modal","backdrop","size","onHide","Header","Title","Divider","Body","Input","Footer","disabled","trim","ResetPasswordPage","useState","newpassword","setnewpassword","setconfirmPassword","loading","setloading","changePassword","new_password","authorizeURL","margin","Panel","PasswordRenewSvg","flex","newPassword","addRule","confirmPassword","background","minWidth","PrivateRoute","Component","component","Validated","setValidated","renewAuth","setrenewAuth","isAuthorized","setIsAuthorized","fetchData","render","to","isAuthenticated","setisAuthenticated","CustomNav","active","onSelect","Nav","activeKey","Item","Logo","eventKey","Dropdown","float","removeItem","Navbar","handleSelect","bind","route","this","React","SubTaskForm","selectedCollaborator","setselectedCollaborator","estimatedHours","setestimatedHours","estimatedMinutes","setestimatedMinutes","settitle","setdescription","createUserStory","project_id","acitveSprint","_id","parentId","close","InputPicker","collaborators","map","c","placeholder","InputNumber","postfix","min","max","val","NotFound","FlexboxGrid","colspan","image","Editor","RichTextEditor","createEmptyValue","setvalue","createValueFromString","setText","toString","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","UserStoryTab","activetab","setactivetab","userStory","identifier","newBranchName","setnewBranchName","branchFrom","setbranchFrom","comments","setcomments","comment","setcomment","messagesEndRef","useRef","commits","setcommits","base","setBase","pullRequests","setpullRequests","scrollToBottom","current","scrollIntoView","createBranch","branchName","repo","project","sha","userStoryId","refresh","res","getComments","utils","getBranchCommits","git_branch","offset","findIndex","git_branch_sha","slice","getPullRequests","pullrequests","addComment","document","querySelectorAll","forEach","t","Number","getAttribute","data-index","padding","overflowY","overflowX","borderBottom","ref","borderRadius","git_avatar","created_at","componentClass","onPressEnter","flexWrap","gitBranches","Message","GitBranchImg","flexDirection","b","commit","find","Timeline","endless","h","dot","Icon","icon","timestamp","content","author","avatar_url","committer","moment","date","local","format","html_url","PullRequestImg","pr","borderTop","filter","gb","org","head","STORY_STATES","STATE_COLORS","userStories","setuserStories","showdrawer","setshowdrawer","selectedUserStory","setselectedUserStory","setidentifier","assignedTo","setassignedTo","timeSpentHours","settimeSpentHours","timeSpentMinuts","settimeSpentMinuts","moveToBacklog","setmoveToBacklog","setHistory","showModal","setshowModal","setgitBranches","generateTableCards","tableData","push","d","u","parent_task","sort","localeCompare","changeStoryState","id","getUserStories","sprint","userstories","updateUserStory","assigned_to","estimated_time","time_spent","Object","keys","parseHistory","histories","parsedHisotry","returnContent","attribute","old_value","new_value","element","updated_by","getGitBranches","branches","onDragEnd","result","source","destination","sInd","droppableId","dInd","draggableId","resultSet","droppableSource","droppableDestination","sourceClone","Array","destClone","splice","index","removed","move","el","ind","provided","snapshot","innerRef","minHeight","droppableProps","position","left","top","item","draggableProps","dragHandleProps","isDragging","draggableStyle","childTask","userSelect","grid","border","boxShadow","Tag","NoUserStories","Drawer","Toggle","checkedChildren","unCheckedChildren","borderLeft","Backlog","backlogs","setbacklogs","getBacklogs","moveToActiveSprint","userstory","sprint_id","NoBacklog","PanelGroup","accordion","defaultActiveKey","bordered","header","SprintHistory","UserStoryForm","selectedSprint","setselectedSprint","SprintForm","step","setStep","userStoriesDone","setuserStoriesDone","getUserStoriesDone","estimated","hours","mins","defaultValue","moveto_backlog","nextStep","generateReport","createNewSprint","user_stories","Steps","Table","cellBordered","headerHeight","rowHeight","Column","align","verticalAlign","flexGrow","HeaderCell","Cell","dataKey","ColumnGroup","ButtonGroup","SprintHome","setrepo","selectedUser","setselectedUser","addMemberDrawer","setAddMemberDrawer","getRepo","addMember","user_id","getMembers","homeImg","membersIn","Whisper","trigger","speaker","Popover","Avatar","circle","includes","IconButton","data-div-text","clone_url","data-clipboard-text","membersNotIn","m","ButtonToolbar","NavToggle","expand","pullRight","setcollaborators","setMembersNotIn","setproject","setsprints","homeToggle","setHomeToggle","activeSprintToggle","setactiveSprintToggle","createSprintToggle","setcreateSprintToggle","createUserStoryToggle","setcreateUserStoryToggle","viewBacklogToggle","setviewBacklogToggle","sprintHistoryToggle","setsprintHistoryToggle","setexpand","setActiveSprint","url","useRouteMatch","getSprints","currentSprint","sprints","is_done","getProjectById","getAllUsers","navbarToggleHandler","toggleFunction","Container","Sidebar","collapsible","Sidenav","expanded","defaultOpenKeys","Content","SprintTable","NoActiveSprint","SprintImg","CreateTicket","createProjectDrawerModel","styleCenter","slimText","paddingBottom","titleStyle","whiteSpace","createProjectDrawer","setcreateProjectDrawer","projectName","setprojectName","userProjects","setuserProjects","setUserRole","getProjects","projects","createProject","ProjectSvg","List","hover","overflow","project_lead","AuthRenewPage","setuser","currentPassord","setcurrentPassord","setPosition","phone","setphone","setlocation","authenticating","setAuthenticating","organizations","setorganizations","companyName","setcompanyName","gitOrganization","setgitOrganization","getUserData","first_login","git_token","old_password","updateUserData","checkAuthorization","code","getOrganizations","validateInvite","submitOrganization","role","BioSvg","Gitsvg","OrganizationSvg","currentPassword","styles","update__button","disabled__button","process","block","showIcon","next__button","Profile","editable","seteditable","changeAttribute","setChangeAttribute","openDrawer","setopenDrawer","validImage","setvalidImage","setid","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","onDrop","picture","userTemp","parse","path","main","main__1","main__1__img","ImagePlaceHolder","change__image","main__2","profession","change","info","attribute__container","info__1","info__2","update__password","drawer__body","withIcon","imgExtension","maxFileSize","buttonText","maxHeight","UserRoles","UsersTable","setUsers","selectedRole","setSelectedRole","sortColumn","setSortColumn","setSelectedUser","sortType","setSortType","setOpenDrawer","userStatus","setUserStatus","getUsers","filteredUsers","ImageCell","rowData","TagCell","colour","ProcessCell","percentage","Math","trunc","invitation_accepted","isNaN","Progress","Circle","percent","strokeColor","PassFailIcon","pass","updateUser","x","y","onSortColumn","onRowClick","fixed","sortable","cell","cleanable","checked","adminFunctions","key","AdminPage","setactiveKey","f","function","makeActiveKey","AdminSvg","FunctionCard","AddUserCard","setfirstname","setlastname","setemail","addUser","registerModel","isEmail","App","aaa","exact","Projects","ProjectBoard","adminPage","AuthRenewRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2fe6950b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loginPage.3890a5c6.svg\";","import { Notification } from 'rsuite';\r\n\r\nconst ADDRESS = 'http://localhost:5000/';\r\n\r\nconst FETCH_DATA = async (api) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n\r\n    let data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        Notification.error({\r\n            title: data.msg ?? 'Server error, Try again later',\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        });\r\n    }\r\n\r\n    return { status: response.status, data }\r\n}\r\n\r\nconst POST_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Access-Control-Expose-Headers': '*',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n\r\n    let data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        Notification.error({\r\n            title: data.msg ?? 'Server error, Try again later',\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        });\r\n    }\r\n    else {\r\n        Notification.success({\r\n            title: data.msg ?? message,\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        })\r\n    }\r\n\r\n    return {\r\n        status: response.status\r\n    }\r\n}\r\n\r\nconst PUT_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n\r\n    let data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        Notification.error({\r\n            title: data.msg ?? 'Server error, Try again later',\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        });\r\n    } else {\r\n        Notification.success({\r\n            title: data.msg ?? message,\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        })\r\n    }\r\n    return {\r\n        status: response.status\r\n    }\r\n}\r\n\r\nconst DELETE_DATA = async (api, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n\r\n    if (!response.ok) {\r\n        Notification.error({\r\n            title: 'Server error, Try again later',\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        });\r\n    }\r\n    else {\r\n        Notification.success({\r\n            title: message,\r\n            description: <div style={{ width: 220 }} rows={3} />,\r\n            placement: 'topEnd'\r\n        })\r\n    }\r\n    return {\r\n        status: response.status\r\n    }\r\n}\r\n\r\n\r\nconst getQueryVariable = (variable) => {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split(\"=\");\r\n        if (pair[0] === variable) {\r\n            return pair[1];\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { FETCH_DATA, POST_DATA, PUT_DATA, DELETE_DATA, getQueryVariable, ADDRESS };","import Homeimg from \"../assets/loginPage.svg\";\r\nimport \"../App.css\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Modal, Button, Form, FormGroup, FormControl, ControlLabel, Schema, Notification, Divider, Input\r\n} from 'rsuite';\r\nimport { useReducer, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\n//data validation for login\r\nconst loginModel = Schema.Model({\r\n    email: StringType().isRequired('Email is required.'),\r\n    password: StringType().isRequired('Password is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nfunction Login(props) {\r\n\r\n    const initialState = {\r\n        login: true,\r\n        users: [],\r\n        userLogin: \"\",\r\n        userPass: \"\",\r\n        firstname: \"\",\r\n        resetEmail: \"\",\r\n        show: false,\r\n        lastname: \"\"\r\n    };\r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const [state, setState] = useReducer(reducer, initialState);\r\n\r\n    const login = async (status) => {\r\n        if (status) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: state.userLogin, password: state.userPass })\r\n            };\r\n            const response = await fetch('http://localhost:5000/auth/login', requestOptions);\r\n            const data = await response.json();\r\n            if (response.status === 403) {\r\n                Notification.error({\r\n                    title: data.msg,\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n            else if (response.status === 200) {\r\n                sessionStorage.setItem('sprintCompassToken', data.access_token);\r\n                sessionStorage.setItem('sprintCompassUser', data.user);\r\n                sessionStorage.setItem('sprintCompassUserName', data.name);\r\n                sessionStorage.setItem('sprintCompassUserRole', data.userRole);\r\n                sessionStorage.setItem('organization', data.organization);\r\n\r\n                const { from } = props.location.state || { from: { pathname: '/projects' } }\r\n                if (data.firstLogin || !data.validGitToken) {\r\n                    window.open(\"/auth\", '_self');\r\n                }\r\n                else {\r\n                    window.open(from.pathname, '_self');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const resetPassword = async () => {\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let resetEmail = state.resetEmail.match(/.{1,29}/g);\r\n        resetEmail = resetEmail.join(' ')\r\n        if (!emailRegex.test(String(state.resetEmail).toLowerCase())) {\r\n            Notification.error({\r\n                title: `Invalid Email`,\r\n                description: <div style={{ width: 220 }} rows={4}> <strong>{resetEmail}</strong> is not a valid email</div>,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let response = await util.FETCH_DATA(`auth/reset_password/${state.resetEmail}`);\r\n            if (response.status === 200) {\r\n                Notification.success({\r\n                    title: `Reset Email Sent`,\r\n                    description: <div style={{ width: 220 }} rows={4}> A reset email has been sent to <br /><strong>{resetEmail}</strong>.</div>,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n        }\r\n\r\n        setState({ show: false, resetEmail: \"\" })\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n        let msg = util.getQueryVariable(\"msg\");\r\n        let error = util.getQueryVariable(\"error\");\r\n        let success = util.getQueryVariable(\"success\");\r\n        let newUrl = window.location.origin + '/login';\r\n        window.history.pushState({}, null, newUrl);\r\n        if(msg) msg = decodeURI(msg)\r\n        if(error){\r\n            Notification.error({\r\n                title: msg ? msg : \"Invalid Url\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        else if(success){\r\n            Notification.success({\r\n                title: \"Password Updated Successfully\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"App\">\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    height: \"900px\",\r\n                    alignContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        style={{ width: \"100%\", maxWidth: \"750px\" }}\r\n                        src={Homeimg}\r\n                        alt=\"homeimg\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <div style={{ width: \"80%\", maxWidth: \"450px\" }}>\r\n                        <div\r\n                            style={{\r\n                                fontSize: \"45px\",\r\n                                fontWeight: \"bold\",\r\n                                lineHeight: \"1.2\",\r\n                                marginBottom: \"100px\",\r\n                            }}\r\n                        >\r\n                            Welcome To\r\n                            <br />\r\n                            <span\r\n                                style={{\r\n                                    color: \"#2D56B3\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            >\r\n                                Sprint\r\n                            </span>\r\n                            <span style={{ color: \"#515B60\" }}>Compass</span>\r\n                        </div>\r\n                        {\r\n                            state.login &&\r\n                            <Form\r\n                                className=\"loginForm\"\r\n                                model={loginModel}\r\n                                onSubmit={(status) => { login(status) }}\r\n                            >\r\n                                <TextField\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    onChange={(value) => setState({ userLogin: value })}\r\n                                />\r\n                                <TextField\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={(value) => setState({ userPass: value })}\r\n                                />\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </Form>\r\n                        }\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                color: \"blue\",\r\n                                textDecoration: \"underline\",\r\n                                fontSize: \"15px\",\r\n                                cursor: \"pointer\",\r\n                                marginTop: 20,\r\n                                marginLeft: \"30%\",\r\n                                width: \"29%\",\r\n                            }}\r\n                            onClick={() => setState({ show: true })}\r\n                        >\r\n                            Forgot Password?\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal backdrop={true} size=\"xs\" show={state.show} onHide={() => setState({ show: false, resetEmail: \"\" })}>\r\n                <Modal.Header >\r\n                    <Modal.Title>Reset Your Password</Modal.Title>\r\n                    <Divider style={{ marginBottom: -10, marginTop: 0 }} />\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Please enter your email to receive a password reset link.</p>\r\n                    <Input\r\n                        style={{ width: \"90%\", marginTop: 10 }}\r\n                        name=\"resetemail\"\r\n                        value={state.resetEmail}\r\n                        onChange={(value) => setState({ resetEmail: value })}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Divider style={{ marginBottom: -5, marginTop: 0 }} />\r\n                    <Button\r\n                        disabled={state.resetEmail?.trim() === \"\"}\r\n                        appearance=\"primary\"\r\n                        style={{ marginLeft: \"25%\", width: \"50%\", marginTop: 10 }}\r\n                        onClick={() => resetPassword()}\r\n                    >\r\n                        Reset Password\r\n\t\t\t\t\t</Button>\r\n                    <Button onClick={() => setState({ show: false, resetEmail: \"\" })} appearance=\"subtle\">\r\n                        Cancel\r\n\t\t\t\t\t</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","export default __webpack_public_path__ + \"static/media/passwordRenew.ce6ee0c2.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PasswordRenewSvg from \"../assets/passwordRenew.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    ControlLabel,\r\n    Schema,\r\n    Panel,\r\n    Button,\r\n} from \"rsuite\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function ResetPasswordPage(props) {\r\n\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [loading, setloading] = useState(true);\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n\r\n            let token = sessionStorage.getItem(\"sprintCompassToken\");\r\n            const requestOptions = {\r\n              method: \"PUT\",\r\n              headers: {\r\n                \"Access-Control-Expose-Headers\": \"*\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n              body: JSON.stringify({ new_password: newpassword }),\r\n            };\r\n\r\n            const response = await fetch(`${util.ADDRESS}api/users/reset_password`, requestOptions);\r\n\r\n            if (response.status === 200) {\r\n              window.open(\"/login?success=true\", \"_self\");\r\n            } else {\r\n              window.open(\r\n                `/login?error=true&msg=${response.data.msg}`,\r\n                \"_self\"\r\n              );\r\n            }\r\n        }\r\n    };\r\n\t\r\n    useEffect(() => {        \r\n\t\tauthorizeURL();\r\n\t}, []);\r\n\r\n    const authorizeURL = async () => {\r\n        let token = util.getQueryVariable(\"token\");\r\n        if(!token){\r\n            window.open('/login?error=true', '_self')\r\n        }\r\n        else{\r\n            sessionStorage.setItem(\"sprintCompassToken\", token);\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            let response =  await fetch(`${util.ADDRESS}auth/validate_url`, requestOptions);\r\n            if(response.status !== 200){\r\n                let data = await response.json();\r\n                window.open(`/login?error=true&msg=${data.msg}`, '_self')\r\n            }else{                \r\n                setloading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"80%\",\r\n                margin: \"auto\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            {\r\n                !loading &&\r\n                <div style={{ width: \"100%\", height: \"80vh\" }}>\r\n                    <h2 style={{ textAlign: \"center\" }}>Reset Your Password</h2>\r\n                    <hr />\r\n                    <Panel style={{ height: \"60vh\" }}>\r\n                        <section style={{ display: \"flex\", height: \"60vh\" }}>\r\n                            <div\r\n                                style={{\r\n                                    width: \"50%\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    style={{ maxWidth: \"550px\" }}\r\n                                    src={PasswordRenewSvg}\r\n                                    alt=\"passwordrenewimg\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8) return false;\r\n                                                return true;\r\n                                            }, \"Password must be atleast 8 characters long\")\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword) return false;\r\n                                                return true;\r\n                                            }, \"The two passwords do not match\")\r\n                                            .isRequired(\"This field is required.\"),\r\n                                    })}\r\n                                    onSubmit={(status) => {\r\n                                        changePassword(status);\r\n                                    }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"newPassword\"\r\n                                        label=\"New Password\"\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={{\r\n                                            marginTop: \"50px\",\r\n                                            background: \"#193A5A\",\r\n                                            color: \"#f5f5f5\",\r\n                                            minWidth: \"300px\",\r\n                                        }}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </section>\r\n                    </Panel>\r\n                    <hr />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n\tconst [Validated, setValidated] = useState(false);\r\n\tconst [renewAuth, setrenewAuth] = useState(false);\r\n\tconst [isAuthorized, setIsAuthorized] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = sessionStorage.getItem(\"sprintCompassToken\");\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst requestOptions = {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n\t\t\t};\r\n\t\t\tconst response = await fetch(\"http://localhost:5000/auth/validate\", requestOptions);\r\n\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tsetIsAuthorized(false);\r\n\t\t\t} else if (response.status === 307) {\r\n\t\t\t\tsetrenewAuth(true);\r\n\t\t\t}\r\n\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tif (!Validated) {\r\n\t\treturn <Loader\r\n\t\t\tstyle={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n\t\t\ttype=\"BallTriangle\"\r\n\t\t\tcolor=\"#134069\"\r\n\t\t\theight={50}\r\n\t\t\twidth={50}\r\n\t\t/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tisAuthorized ? (\r\n\t\t\t\t\trenewAuth ? (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/auth\",\r\n\t\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const [isAuthenticated, setisAuthenticated] = useState(false);\r\n    const [isAuthorized, setIsAuthorized] = useState(true);\r\n    const [Validated, setValidated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n\r\n        async function fetchData() {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` }\r\n            };\r\n            const response = await fetch('http://localhost:5000/auth/authrenew_validate', requestOptions);\r\n\r\n            if (response.status === 200) {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(true);\r\n            }\r\n            else if (response.status === 403) {\r\n                setIsAuthorized(false);\r\n            }\r\n            else {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(false);\r\n            }\r\n            setValidated(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (!Validated) {\r\n        return <Loader\r\n            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n            type=\"BallTriangle\"\r\n            color=\"#134069\"\r\n            height={50}\r\n            width={50}\r\n        />\r\n    };\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthorized ? (\r\n                    isAuthenticated ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/projects\",\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","export default __webpack_public_path__ + \"static/media/logo.a451d6d9.svg\";","import React from 'react';\r\nimport { Nav, Dropdown } from 'rsuite';\r\nimport Logo from '../assets/logo.svg';\r\nimport '../styling/nav.css';\r\n\r\nconst CustomNav = ({ active, onSelect, ...props }) => {\r\n    const logout = () => {\r\n        sessionStorage.removeItem('sprintCompassToken');\r\n        sessionStorage.removeItem('sprintCompassUser');\r\n        sessionStorage.removeItem('sprintCompassUserName');\r\n        window.open('/login', '_self');\r\n    }\r\n    return (\r\n        <Nav {...props} activeKey={active} onSelect={onSelect}>\r\n            <Nav.Item style={{ margin: '0 50px' }}>\r\n                <img style={{ width: '80px' }} src={Logo} alt=\"logo\" onClick={() => { window.open('/projects', '_self') }} />\r\n            </Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"projects\">Projects</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"solutions\">Solutions</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"products\">Products</Nav.Item>\r\n            {(sessionStorage.getItem('sprintCompassUserRole') === \"owner\" || sessionStorage.getItem('sprintCompassUserRole') === \"admin\") && (\r\n                <Nav.Item className=\"navHeader\" eventKey=\"admin\">\r\n                    Administrator\r\n                </Nav.Item>\r\n            )}\r\n            <Dropdown\r\n                style={{ float: 'right', marginRight: '30px' }}\r\n                className=\"navHeader\"\r\n                title={sessionStorage.getItem('sprintCompassUserName')}>\r\n                <Dropdown.Item\r\n                    onClick={() => window.open('/profile', '_self')}\r\n                >\r\n                    Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>Settings</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => logout()}>Log Out</Dropdown.Item>\r\n            </Dropdown>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: 'home'\r\n        };\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    handleSelect(activeKey) {\r\n        if (activeKey === \"projects\") window.open(window.location.origin + '/projects', '_self');\r\n        else if (activeKey === \"admin\") window.open(window.location.origin + '/admin', '_self');\r\n    }\r\n\r\n    componentDidMount() {\r\n        let route = window.location.pathname.split('/');\r\n        if (route[1] === 'projects' || route[1] === 'project') {\r\n            this.setState({ active: 'projects' });\r\n        }\r\n        else if (route[1] === 'admin') {\r\n            this.setState({ active: 'admin' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.state;\r\n        return (\r\n            <div>\r\n                <CustomNav appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl, Notification } from 'rsuite';\r\n\r\nexport default function SubTaskForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n            let token = sessionStorage.getItem('sprintCompassToken');\r\n            let body = {\r\n                'title': title,\r\n                'description': description,\r\n                'assigned_to': selectedCollaborator,\r\n                'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n                'project_id': props.project_id,\r\n                'sprint_id': props.acitveSprint._id,\r\n                'parent_task': props.parentId\r\n            };\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Access-Control-Expose-Headers': '*',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(body)\r\n            };\r\n\r\n            const response = await fetch('http://localhost:5000/api/userstories', requestOptions);\r\n\r\n            if (response.status === 200) {\r\n\r\n                Notification.success({\r\n                    title: 'Subtask Has Been Created',\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n\r\n                //clear the fields\r\n                setselectedCollaborator(null);\r\n                setestimatedHours(1);\r\n                setestimatedMinutes(0);\r\n                settitle(\"\");\r\n                setdescription(\"\");\r\n\r\n                props.close();\r\n            }\r\n            else {\r\n                Notification.error({\r\n                    title: 'Server error, Try again later',\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                onChange={(value) => setdescription(value)}\r\n            />\r\n            <label className=\"rs-control-label\">Assign To </label>\r\n            <InputPicker\r\n                data={props.collaborators.map(c => {\r\n                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                })}\r\n                placeholder=\"Assign To\"\r\n                style={{ width: 400 }}\r\n                value={selectedCollaborator}\r\n                onChange={(value) => setselectedCollaborator(value)}\r\n            />\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 250, marginRight: 10 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 250 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n        </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\n\r\nexport default function NotFound(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"show-grid\">\r\n                <FlexboxGrid style={{ height: props.height ?? 'calc(100vh - 97px)' }}>\r\n                    <FlexboxGrid.Item\r\n                        style={{ margin: 'auto' }}\r\n                        colspan={12}\r\n                    >\r\n                        <img\r\n                            style={{ width: '80%', display: 'block', margin: 'auto' }}\r\n                            src={props.image}\r\n                            alt=\"\"\r\n                        />\r\n                    </FlexboxGrid.Item>\r\n                    <FlexboxGrid.Item\r\n                        colspan={12}\r\n                        style={{ margin: 'auto', textAlign: 'center', fontSize: '22px' }}\r\n                    >\r\n                        {props.msg}\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/noactivesprint.5cfe79e4.svg\";","import React, { useState, useEffect } from 'react'\r\nimport RichTextEditor from 'react-rte';\r\n\r\nexport default function Editor(props) {\r\n    const [value, setvalue] = useState(RichTextEditor.createEmptyValue());\r\n\r\n    useEffect(() => {\r\n        setvalue(RichTextEditor.createValueFromString(props.value, 'html'))\r\n    }, []);\r\n\r\n    const onChange = (value) => {\r\n        setvalue(value);\r\n        props.setText(value.toString('html'));\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <RichTextEditor\r\n                value={value}\r\n                onChange={onChange}\r\n                toolbarConfig={toolbarConfig}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst toolbarConfig = {\r\n    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n    INLINE_STYLE_BUTTONS: [\r\n        { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\r\n        { label: 'Italic', style: 'ITALIC' },\r\n        { label: 'Underline', style: 'UNDERLINE' }\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n        { label: 'Text', style: 'unstyled' },\r\n        { label: 'Heading', style: 'header-four' },\r\n        { label: 'Code', style: 'code-block' },\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n        { label: 'UL', style: 'unordered-list-item' },\r\n        { label: 'OL', style: 'ordered-list-item' }\r\n    ]\r\n};","export default __webpack_public_path__ + \"static/media/gitBranch.b53578eb.svg\";","export default __webpack_public_path__ + \"static/media/pullrequest.8d345ce7.svg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport GitBranchImg from '../../assets/gitBranch.svg';\r\nimport PullRequestImg from '../../assets/pullrequest.svg';\r\nimport { InputPicker, Input, Button, Notification, Message, Timeline, Icon } from 'rsuite';\r\nimport './userstorytab.css';\r\nimport utils from \"../../utility/utils\";\r\nimport moment from 'moment';\r\n\r\nfunction UserStoryTab(props) {\r\n\r\n    const [activetab, setactivetab] = useState(0);\r\n    const [newBranchName, setnewBranchName] = useState(props.userStory.identifier);\r\n    const [branchFrom, setbranchFrom] = useState(null);\r\n    const [comments, setcomments] = useState([]);\r\n    const [comment, setcomment] = useState('');\r\n    const messagesEndRef = useRef(null)\r\n    const [commits, setcommits] = useState([]);\r\n    const [base, setBase] = useState(null);\r\n    const [pullRequests, setpullRequests] = useState([]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView(true);\r\n    }\r\n\r\n    let createBranch = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ branchName: newBranchName, repo: props.project.repo, sha: branchFrom, userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/git/createBranch`, requestOptions);\r\n        if (response.status === 200) {\r\n            setactivetab(0);\r\n            props.refresh();\r\n            Notification.success({\r\n                title: 'Branch Has Been Created',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let res = await response.json();\r\n            Notification.error({\r\n                title: res.msg,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    const getComments = async () => {\r\n        let response = await utils.FETCH_DATA(`api/userstories/comments/${props.userStory._id}`);\r\n        setcomments(response.data.comments);\r\n    }\r\n\r\n    const getBranchCommits = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getCommitsByBranch?repo=${props.project.repo}&sha=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            let commits = response.data.commits.data;\r\n            if (commits) {\r\n                let offset = commits.findIndex(c => c.sha === props.userStory.git_branch_sha);\r\n                setcommits(commits.slice(0, offset));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPullRequests = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getPullRequestByBranch?repo=${props.project.repo}&head=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            setpullRequests(response.data.pullrequests.data);\r\n        }\r\n    }\r\n\r\n\r\n    const addComment = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ 'body': comment, user: sessionStorage.getItem('sprintCompassUser'), userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/userstories/addComment`, requestOptions);\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setcomments(data.comments);\r\n            setcomment('');\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: data.msg ?? 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tabs = document.querySelectorAll('.us__tabs>div');\r\n        tabs.forEach(t => {\r\n            let [background] = ['#e6e6e6'];\r\n            if (activetab === Number(t.getAttribute('data-index'))) {\r\n                background = '#193A5A';\r\n            }\r\n            t.style['border-bottom'] = `3px solid ${background}`;\r\n        })\r\n\r\n        activetab === 0 && scrollToBottom();\r\n\r\n    }, [activetab, commits])\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n        if (props.userStory.git_branch_sha) {\r\n            getBranchCommits();\r\n            getPullRequests();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [comments])\r\n\r\n    return (\r\n        <section style={{ height: '100%', background: '#f9f9f9' }}>\r\n            <section className='us__tabs'>\r\n                <div data-index='0' onClick={() => setactivetab(0)}>Comments</div>\r\n                {\r\n                    !props.userStory.git_branch &&\r\n                    <div data-index='1' onClick={() => setactivetab(1)}>Github Branch</div>\r\n                }\r\n                <div data-index='2' onClick={() => setactivetab(2)}>History</div>\r\n                <div data-index='3' onClick={() => setactivetab(3)}>Commits</div>\r\n                {\r\n                    props.userStory.git_branch && <div data-index='4' onClick={() => setactivetab(4)}>Pull Request</div>\r\n                }\r\n            </section>\r\n            {\r\n                activetab === 0 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '86%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            comments.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No comments found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            comments.map((c, i) => {\r\n                                return <section\r\n                                    style={{ display: 'flex', width: '100%', margin: '10px 0', borderBottom: '1px solid #e6e6e6', padding: '15px' }}\r\n                                    key={i}\r\n                                    ref={comments.length - 1 === i ? messagesEndRef : null}\r\n                                >\r\n                                    <div style={{ width: '100px' }}>\r\n                                        <img\r\n                                            style={{ width: '55px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.user.git_avatar}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ width: '80%' }}>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: 600, marginRight: '10px' }}>\r\n                                                {`${c.user.firstname} ${c.user.lastname}`}\r\n                                            </span>\r\n                                            <span style={{ float: 'right' }}>\r\n                                                {c.created_at}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div style={{ marginTop: '5px' }}>\r\n                                            {c.body}\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                        <div ref={messagesEndRef} />\r\n                    </section>\r\n                    <section style={{ height: '14%' }}>\r\n                        <Input\r\n                            onChange={(val) => setcomment(val)}\r\n                            componentClass=\"textarea\"\r\n                            value={comment}\r\n                            rows={3}\r\n                            placeholder=\"Add a Comment\"\r\n                            onPressEnter={() => addComment()}\r\n                        />\r\n                        <Button\r\n                            onClick={() => addComment()}\r\n                            disabled={!comment}\r\n                            appearance='primary'\r\n                            style={{ width: '100px', marginTop: '20px', float: 'right' }}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 1 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', height: '90%', flexWrap: 'wrap', overflowY: 'hidden' }}>\r\n\r\n                    {\r\n                        props.gitBranches.length === 0 &&\r\n                        <Message\r\n                            type=\"info\"\r\n                            title=\"Empty Repository\"\r\n                            description={\r\n                                <p>You cannot create branch for an empty repo </p>\r\n                            }\r\n                        />\r\n                    }\r\n                    {\r\n                        !props.userStory.git_branch && props.gitBranches.length > 0 &&\r\n                        <>\r\n                            <div style={{ textAlign: 'center', fontSize: '18px', fontWeight: 'bold', width: '100%', marginBottom: '100px' }}>\r\n                                Create Github Branch\r\n                            </div>\r\n                            <section style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section style={{ flex: 1 }}>\r\n                                    <img style={{ width: '80%', margin: 'auto', display: 'block' }} src={GitBranchImg} alt=\"gitbranch\" />\r\n                                </section>\r\n                                <section style={{ flex: 1, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                    <div>\r\n                                        <div style={{ margin: '5px' }}>Branch Out From</div>\r\n                                        <InputPicker\r\n                                            data={props.gitBranches.map((b, i) => {\r\n                                                return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                            })}\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Branch From'\r\n                                            onChange={(value) => {\r\n                                                if (!!value) setbranchFrom(props.gitBranches.find(b => b.name === value).commit.sha);\r\n                                                else\r\n                                                    setbranchFrom(null);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginTop: '15px' }}>\r\n                                        <div style={{ margin: '5px' }}>Branch Name</div>\r\n                                        <Input\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Name'\r\n                                            onChange={(val) => setnewBranchName(val)}\r\n                                            value={newBranchName}\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        style={{ marginTop: '20px', width: 224 }}\r\n                                        appearance=\"primary\"\r\n                                        disabled={newBranchName === '' || !!!branchFrom}\r\n                                        onClick={() => createBranch()}\r\n                                    >\r\n                                        Create Branch\r\n                                    </Button>\r\n                                </section>\r\n                            </section>\r\n                        </>\r\n                    }\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 2 &&\r\n                <section\r\n                    style={{ width: '100%', height: '90%', padding: '30px', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    className=\"scrollable\"\r\n                >\r\n                    <Timeline endless className=\"custom-timeline\" >\r\n                        {\r\n                            props.history.map(h => {\r\n                                return <Timeline.Item\r\n                                    dot={\r\n                                        <Icon\r\n                                            icon=\"check\"\r\n                                            size=\"2x\"\r\n                                            style={{ background: '#1A3B5A', color: '#fff' }}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <p>{h.timestamp}</p>\r\n                                    <p>{h.user}</p>\r\n                                    <p style={{ fontWeight: 600 }}>{h.content}</p>\r\n                                </Timeline.Item>\r\n                            })\r\n                        }\r\n                    </Timeline>\r\n                </section>\r\n\r\n            }\r\n            {\r\n                activetab === 3 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '100%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            commits.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No commits found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            commits.map((c, i) => {\r\n                                return <section\r\n                                    style={{ padding: '15px 0', display: 'flex', width: '100%', borderBottom: '1px solid #e6e6e6' }}\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <img\r\n                                            style={{ width: '60px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.author.avatar_url}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span style={{ fontWeight: 600 }}>\r\n                                            {`${c.committer.login}`}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {c.commit.message}\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {moment(c.commit.author.date).local().format('YYYY/MM/DD HH:mm:ss')}\r\n                                    </div>\r\n                                    <div style={{ flex: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span\r\n                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                            onClick={() => window.open(c.html_url, '_blank')}\r\n                                        >\r\n                                            View\r\n                                        </span>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 4 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', width: '100%', flexWrap: 'wrap' }}>\r\n                    <section style={{ width: '100%', height: '40vh', display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '20px' }}>\r\n                        <img\r\n                            style={{ height: '80%' }}\r\n                            src={PullRequestImg}\r\n                            alt=\"gitbranch\"\r\n                        />\r\n                    </section>\r\n                    {\r\n                        commits.length > 0 ?\r\n                            <>\r\n                                {\r\n                                    pullRequests.length > 0 &&\r\n                                    <div style={{ marginTop: '30px', width: '100%' }}>\r\n                                        {\r\n                                            pullRequests.map((pr, i) => {\r\n                                                return <section key={i}\r\n                                                    style={{\r\n                                                        display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n                                                        width: '90%', margin: 'auto', textAlign: 'left', borderTop: '1px solid #e6e6e6',\r\n                                                        borderBottom: '1px solid #e6e6e6', padding: '20px 0'\r\n                                                    }}>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <img src={pr.user.avatar_url} alt='git_avatar' style={{ width: '50px', borderRadius: '50%' }} />\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Created By</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>\r\n                                                            {pr.user.login}\r\n                                                        </div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.title}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request to</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.base.ref}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.75' }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Status</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.state}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <div\r\n                                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                                            onClick={() => window.open(pr.html_url, '_blank')}\r\n                                                        >\r\n                                                            View\r\n                                                    </div>\r\n                                                    </section>\r\n                                                </section>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    pullRequests.length === 0 &&\r\n                                    <section style={{ width: '100%', padding: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                        <div style={{ width: '100%', display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                                            <div style={{ width: '100%', textAlign: 'center', margin: '5px 0' }}>Base Branch</div>\r\n                                            <InputPicker\r\n                                                data={\r\n                                                    props.gitBranches.filter(gb => gb.name !== props.userStory.git_branch)\r\n                                                        .map((b, i) => {\r\n                                                            return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                                        })\r\n                                                }\r\n                                                style={{ width: 224 }}\r\n                                                placeholder='Base Branch'\r\n                                                onChange={(value) => setBase(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <Button\r\n                                            style={{ marginTop: '20px', width: 224 }}\r\n                                            appearance=\"primary\"\r\n                                            disabled={!!!base}\r\n                                            onClick={() => {\r\n                                                let org = sessionStorage.getItem(\"organization\");\r\n                                                let repo = props.project.repo;\r\n                                                let head = props.userStory.git_branch;\r\n                                                window.open(`https://github.com/${org}/${repo}/compare/${base}...${head}`, '_blank')\r\n                                            }}\r\n                                        >\r\n                                            Create Pull Request\r\n                                        </Button>\r\n                                    </section>\r\n                                }\r\n                            </>\r\n                            : <div>No commits found to make a pull request</div>\r\n                    }\r\n                </section>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserStoryTab\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n    Drawer, Icon, InputNumber, Button, Notification, Toggle, Tag,\r\n    Input, InputPicker, FlexboxGrid, Modal\r\n} from 'rsuite';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport NoUserStories from \"../../assets/noactivesprint.svg\";\r\nimport Editor from \"../utilitycomponents/Editor\";\r\nimport utils from \"../../utility/utils\";\r\nimport UserStoryTab from \"./UserStoryTab\";\r\n\r\n//four states of the stories, has to match the db\r\nconst STORY_STATES = [\"To Do\", \"In Progress\", \"Testing\", \"Done\"];\r\nconst STATE_COLORS = [\"#01949A\", \"#2196F3\", \"#134069\", \"#4CAF50\"];\r\n\r\n\r\n/*Moves an item from one list to another list.*/\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, childTask) => ({\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: childTask ? `0 0 ${grid}px 20px` : `0 0 ${grid}px 0`,\r\n    borderRadius: '10px',\r\n    // change background colour if dragging\r\n    background: isDragging ? \"#f5f5f5\" : \"#ffffff\",\r\n    border: \"1px solid #e6e6e6\",\r\n    cursor: 'pointer',\r\n    boxShadow: \"0 2px 5px #e6e6e6\",\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (length) => ({\r\n    padding: grid,\r\n    width: 350,\r\n    minHeight: length === 0 ? \"100px\" : \"75vh\",\r\n    margin: \"0 10px\"\r\n});\r\n\r\nfunction Sprint(props) {\r\n\r\n    const [state, setState] = useState(null);\r\n    const [userStories, setuserStories] = useState([]);\r\n    const [showdrawer, setshowdrawer] = useState(false);\r\n    const [selectedUserStory, setselectedUserStory] = useState(null);\r\n\r\n    const [identifier, setidentifier] = useState(\"\");\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [assignedTo, setassignedTo] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(null);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(null);\r\n    const [timeSpentHours, settimeSpentHours] = useState(null);\r\n    const [timeSpentMinuts, settimeSpentMinuts] = useState(null);\r\n    const [moveToBacklog, setmoveToBacklog] = useState(null);\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const [showModal, setshowModal] = useState(false);\r\n\r\n    const [gitBranches, setgitBranches] = useState([]);\r\n\r\n    function onDragEnd(result) {\r\n\r\n        const { source, destination } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        const sInd = +source.droppableId;\r\n        const dInd = +destination.droppableId;\r\n\r\n        if (sInd === dInd) {\r\n            return;\r\n        } else {\r\n            //change the state in the database\r\n            changeStoryState(result.draggableId, STORY_STATES[destination.droppableId]);\r\n\r\n            const resultSet = move(state[sInd], state[dInd], source, destination);\r\n            const newState = [...state];\r\n            newState[sInd] = resultSet[sInd];\r\n            newState[dInd] = resultSet[dInd];\r\n\r\n            newState.forEach(t => {\r\n                t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n            })\r\n\r\n            setState(newState);\r\n        }\r\n    }\r\n\r\n    const generateTableCards = (data) => {\r\n        let tableData = [];\r\n        tableData.push(data.filter(d => d.state === \"To Do\"));\r\n        tableData.push(data.filter(d => d.state === \"In Progress\"));\r\n        tableData.push(data.filter(d => d.state === \"Testing\"));\r\n        tableData.push(data.filter(d => d.state === \"Done\"));\r\n\r\n        tableData.forEach(t => {\r\n            t.forEach(u => {\r\n                if (u.parent_task) {\r\n                    u.identifier = `${u.parent_task.identifier}/${u.identifier}`\r\n                }\r\n            })\r\n            t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n        })\r\n\r\n        setState(tableData);\r\n    }\r\n\r\n    const changeStoryState = async (id, state) => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ _id: id, state })\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories`, requestOptions);\r\n        if (response.ok) getUserStories();\r\n    }\r\n\r\n    const getUserStories = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories/bySprint/${props.sprint._id}`, requestOptions);\r\n        if (response.ok) {\r\n            let data = await response.json();\r\n            generateTableCards(data.userstories)\r\n            setuserStories(data.userstories);\r\n            if (!!selectedUserStory) {\r\n                setselectedUserStory(data.userstories.find(u => u._id === selectedUserStory._id));\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateUserStory = async () => {\r\n        let body = {};\r\n\r\n        /*checking what has changed*/\r\n\r\n        //checking if title has changed\r\n        if (title !== selectedUserStory.title) {\r\n            body['title'] = title;\r\n        }\r\n\r\n        //checking if title has changed\r\n        if (description !== selectedUserStory.description) {\r\n            body['description'] = description;\r\n        }\r\n\r\n        //checking if description has changed\r\n        if (assignedTo !== selectedUserStory.assigned_to?._id) {\r\n            body['assigned_to'] = assignedTo;\r\n        }\r\n\r\n        //checking if estimated time has changed\r\n        if (estimatedHours !== selectedUserStory.estimated_time.split(',')[0] ||\r\n            estimatedMinutes !== selectedUserStory.estimated_time.split(',')[1]\r\n        ) {\r\n            body['estimated_time'] = `${estimatedHours},${estimatedMinutes}`;\r\n        }\r\n\r\n        //checking if timespent has changed\r\n        if (timeSpentHours !== selectedUserStory.time_spent?.split(',')[0] ||\r\n            timeSpentMinuts !== selectedUserStory.time_spent?.split(',')[1]\r\n        ) {\r\n            if (timeSpentHours !== \"0\" || timeSpentMinuts !== \"0\") {\r\n                body['time_spent'] = `${timeSpentHours},${timeSpentMinuts}`;\r\n            }\r\n        }\r\n\r\n        //checking if the userstory needs to be moved to backlog\r\n        if (moveToBacklog) {\r\n            body['moveto_backlog'] = true;\r\n        }\r\n        if (Object.keys(body).length === 0) {\r\n            setshowdrawer(false);\r\n            return;\r\n        }\r\n\r\n        body['_id'] = selectedUserStory._id;\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories`, requestOptions);\r\n\r\n        //if updated\r\n        if (response.ok) {\r\n            Notification.success({\r\n                title: 'User Story Has Been Updated',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n\r\n            setshowdrawer(false);\r\n            getUserStories();\r\n        }\r\n    }\r\n\r\n    let parseHistory = async (histories) => {\r\n\r\n        let parsedHisotry = histories.map((history) => {\r\n            let returnContent = '';\r\n            if (history.attribute === \"user_story\") {\r\n                returnContent = `Created the task`\r\n            }\r\n            else if (history.attribute === \"description\")\r\n                returnContent = `Updated Description`\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed state from \"${history.old_value}\" to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"title\")\r\n                returnContent = `Updated Title to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"assigned_to\") {\r\n                let assigned_to = props.collaborators.find(element => element._id === history.new_value);\r\n                returnContent = assigned_to ? `Changed Assiginee to ${assigned_to.firstname} ${assigned_to.lastname}` : `Unassigned`;\r\n            }\r\n            else if (history.attribute === \"estimated_time\")\r\n                returnContent = `Re-estimated the task to be completed in ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"time_spent\")\r\n                returnContent = `Increased the time stpent to ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed State from ${history.old_value} to ${history.new_value}`\r\n\r\n            else if (history.attribute === \"moveto_backlog\")\r\n                returnContent = `Moved task to backlog.`\r\n\r\n            else if (history.attribute === \"sprint_id\")\r\n                returnContent = `Moved task to sprint ${history.new_value}`\r\n\r\n            let user = props.collaborators.find(element => element._id === history.updated_by);\r\n\r\n            return { 'timestamp': history.timestamp, 'content': returnContent, 'user': `${user?.firstname} ${user?.lastname}` };\r\n        })\r\n\r\n        setHistory(parsedHisotry);\r\n    }\r\n\r\n    const getGitBranches = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getAllBranches/${props.project.repo}`);\r\n        if (response.status === 200) {\r\n            let data = response.data.branches.data;\r\n            setgitBranches(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserStories();\r\n        getGitBranches();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !state ?\r\n                    <div style={{ height: '80vh' }}>\r\n                        <Loader\r\n                            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                            type=\"ThreeDots\"\r\n                            color=\"#134069\"\r\n                            height={50}\r\n                            width={50}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"100px 0 10px 0\" }}>\r\n                            <DragDropContext onDragEnd={onDragEnd}>\r\n                                {state.map((el, ind) => (\r\n                                    <Droppable key={ind} droppableId={`${ind}`}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                style={getListStyle(userStories.length)}\r\n                                                {...provided.droppableProps}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        padding: '20px',\r\n                                                        margin: '10px 0',\r\n                                                        color: '#575757',\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: '18px',\r\n                                                        borderTop: `7px solid ${STATE_COLORS[ind]}`,\r\n                                                        position: 'relative'\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        /*not a best practice, doing this for the looks */\r\n                                                        ind === 0 &&\r\n                                                        <div style={{ position: 'absolute', fontSize: '23px', fontWeight: '700', left: 0, top: -80 }}>\r\n                                                            Sprint - {props.sprint.name}\r\n                                                        </div>\r\n                                                    }\r\n                                                    {STORY_STATES[ind]}\r\n                                                </div>\r\n                                                {el.map((item, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Draggable\r\n                                                            key={item._id}\r\n                                                            draggableId={String(item._id)}\r\n                                                            index={index}\r\n                                                        >\r\n                                                            {(provided, snapshot) => (\r\n                                                                <div\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    {...provided.dragHandleProps}\r\n                                                                    style={getItemStyle(\r\n                                                                        snapshot.isDragging,\r\n                                                                        provided.draggableProps.style,\r\n                                                                        !!item.parent_task\r\n                                                                    )}\r\n                                                                    onClick={() => {\r\n                                                                        setshowdrawer(true);\r\n                                                                        setselectedUserStory(item);\r\n                                                                        parseHistory(item.history);\r\n                                                                        setidentifier(item.identifier);\r\n                                                                        settitle(item.title);\r\n                                                                        setdescription(item.description);\r\n                                                                        setassignedTo(item.assigned_to?._id);\r\n                                                                        setestimatedHours(item.estimated_time?.split(',')[0]);\r\n                                                                        setestimatedMinutes(item.estimated_time?.split(',')[1]);\r\n                                                                        settimeSpentHours(item.time_spent ? item.time_spent.split(',')[0] : \"0\");\r\n                                                                        settimeSpentMinuts(item.time_spent ? item.time_spent.split(',')[1] : \"0\");\r\n                                                                        setmoveToBacklog(false);\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div>\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <Tag\r\n                                                                                style={{ color: '#f5f5f5', fontWeight: '600', marginBottom: '10px', background: STATE_COLORS[ind] }}\r\n                                                                            >\r\n                                                                                {item.title}\r\n                                                                            </Tag>\r\n\r\n                                                                            <Tag style={{ fontWeight: '600', marginBottom: '10px', background: '#ececec' }}>\r\n                                                                                {item.identifier}\r\n                                                                            </Tag>\r\n                                                                        </div>\r\n                                                                        <div style={{ marginTop: \"15px\" }}>\r\n                                                                            <Icon\r\n                                                                                icon=\"user-circle-o\"\r\n                                                                                style={{ marginRight: '5px' }}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                item.assigned_to ? `${item.assigned_to.firstname} ${item.assigned_to.lastname}` : 'Unassigned'\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    </div>\r\n                                                ))}\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n                                ))}\r\n                            </DragDropContext>\r\n                        </div>\r\n                        {\r\n                            userStories.length === 0 &&\r\n                            <NotFound\r\n                                msg=\"No User Stories Found\"\r\n                                image={NoUserStories}\r\n                                height=\"300px\"\r\n                            />\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n            <Drawer\r\n                show={showdrawer}\r\n                onHide={() => {\r\n                    setshowdrawer(false);\r\n                    setselectedUserStory(null);\r\n                }}\r\n                style={{ width: '100%' }}\r\n            >\r\n                <Drawer.Header>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    {\r\n                        !!selectedUserStory &&\r\n                        <div style={{ display: 'flex', height: '100%', justifyContent: 'space-between' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '40%',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'start',\r\n                                    height: '100%',\r\n                                    flexWrap: 'wrap',\r\n                                    marginLeft: '30px',\r\n                                    textAlign: 'left'\r\n                                }}>\r\n                                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px', width: '100%' }}>\r\n                                    <Icon icon=\"task\" size=\"2x\" />\r\n                                    <h3 style={{ color: '#193A5A', marginLeft: '15px' }}>{identifier}</h3>\r\n                                    <Button\r\n                                        appearance=\"default\"\r\n                                        style={{ background: '#e6e6e6', marginLeft: 'auto' }}\r\n                                        onClick={() => setshowModal(true)}\r\n                                    >\r\n                                        Create Subtask\r\n                                    </Button>\r\n                                </div>\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Title</p>\r\n                                <Input\r\n                                    style={{ fontSize: '20px', width: '100%', fontWeight: 'bold' }}\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Description</p>\r\n                                <Editor\r\n                                    setText={(value) => setdescription(value)}\r\n                                    value={description}\r\n                                />\r\n                                <FlexboxGrid style={{ width: '100%', marginTop: '50px' }}>\r\n                                    <FlexboxGrid.Item colspan={12}>\r\n                                        <p style={{ width: '100%', margin: '0 0 5px 15px', fontWeight: '600' }}>Assigned To</p>\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <InputPicker\r\n                                                data={props.collaborators.map(c => {\r\n                                                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                                                })}\r\n                                                placeholder=\"Assign To\"\r\n                                                style={{ padding: \"5px 0\", maxWidth: '310px', marginLeft: '12px' }}\r\n                                                value={assignedTo}\r\n                                                onChange={(value) => setassignedTo(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Github Branch</p>\r\n                                        <div\r\n                                            style={{ margin: \"0 15px\" }}\r\n                                        >\r\n                                            {selectedUserStory.git_branch}\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Move to Backlog</p>\r\n                                        <Toggle\r\n                                            style={{ margin: \"0 12px\" }}\r\n                                            checkedChildren={<Icon icon=\"check\" />}\r\n                                            unCheckedChildren={<Icon icon=\"close\" />}\r\n                                            value={moveToBacklog}\r\n                                            onChange={(val) => setmoveToBacklog(val)}\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item\r\n                                        colspan={12}\r\n                                    >\r\n                                        <p style={{ width: '100%', margin: '0px 0 5px 15px', fontWeight: '600' }}>Estimated Time</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={estimatedHours ?? 0}\r\n                                                onChange={(val) => setestimatedHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={estimatedMinutes ?? 0}\r\n                                                onChange={(val) => setestimatedMinutes(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Time Spent</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={timeSpentHours ?? 0}\r\n                                                onChange={(val) => settimeSpentHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={timeSpentMinuts ?? 0}\r\n                                                onChange={(val) => settimeSpentMinuts(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                                <div style={{ height: '1px', width: '100%', background: '#e6e6e6', margin: '30px 0' }} />\r\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button\r\n                                        appearance=\"primary\"\r\n                                        style={{ width: '250px' }}\r\n                                        onClick={() => updateUserStory()}\r\n                                    >\r\n                                        Update User Story\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ width: '55%', borderLeft: '1px solid #e6e6e6' }}>\r\n                                <UserStoryTab\r\n                                    gitBranches={gitBranches}\r\n                                    project={props.project}\r\n                                    userStory={selectedUserStory}\r\n                                    refresh={() => getUserStories()}\r\n                                    history={history}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Drawer.Body>\r\n            </Drawer>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                overflowY={false}\r\n                onHide={() => setshowModal(false)}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Create Subtask</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <SubTaskForm\r\n                        project_id={props.project_id}\r\n                        acitveSprint={props.sprint}\r\n                        collaborators={props.collaborators}\r\n                        parentId={selectedUserStory?._id}\r\n                        close={() => {\r\n                            setshowModal(false);\r\n                            getUserStories();\r\n                        }}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Sprint);\r\n","export default __webpack_public_path__ + \"static/media/createTicket.ea7c0d8a.svg\";","export default __webpack_public_path__ + \"static/media/sprint.30c319a6.svg\";","export default __webpack_public_path__ + \"static/media/nobacklog.e26594b8.svg\";","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button, FlexboxGrid, Notification, PanelGroup, Panel } from 'rsuite';\r\nimport NotFound from \"../NotFound\";\r\nimport NoBacklog from \"../../assets/nobacklog.svg\";\r\n\r\nexport default function Backlog(props) {\r\n\r\n    const [backlogs, setbacklogs] = useState([]);\r\n\r\n    const getBacklogs = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories/backlogs/${props.project_id}`, requestOptions);\r\n        let data = await response.json();\r\n\r\n        setbacklogs(data.userstories);\r\n    }\r\n\r\n    const moveToActiveSprint = async (userstory) => {\r\n        let body = {};\r\n        body._id = userstory._id;\r\n        body.sprint_id = props.acitveSprint._id;\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories`, requestOptions);\r\n\r\n        //if updated\r\n        if (response.ok) {\r\n            Notification.success({\r\n                title: 'User Story Has Been Moved to the Active Sprint',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n            getBacklogs();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBacklogs();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                backlogs.length === 0 ?\r\n                    <NotFound\r\n                        image={NoBacklog}\r\n                        msg=\"So empty!\"\r\n                    />\r\n                    :\r\n                    <div style={{ margin: '50px auto', width: '80%' }}>\r\n                        <PanelGroup accordion defaultActiveKey={null} bordered>\r\n                            {\r\n                                backlogs.map((b, i) => {\r\n                                    return <Panel key={i} header={b.title} eventKey={i + 1}>\r\n                                        <FlexboxGrid style={{ minHeight: '300px' }}>\r\n                                            <FlexboxGrid.Item colspan={12}>\r\n                                                <div>\r\n                                                    <div\r\n                                                        style={{ fontSize: '20px', fontWeight: 'bold', margin: '10px 0' }}\r\n                                                    >\r\n                                                        {b.title}\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{ padding: '20px', background: '#f5f5f5', height: '250px', overflowY: 'auto' }}\r\n                                                    >\r\n                                                        {b.description}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item colspan={12} style={{ height: '300px' }}>\r\n                                                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                                                    <Button\r\n                                                        style={{ padding: '20px', color: '#f5f5f5', background: '#134069' }}\r\n                                                        disabled={!!!props.acitveSprint}\r\n                                                        onClick={() => moveToActiveSprint(b)}\r\n                                                    >\r\n                                                        Move To Active Sprint\r\n                                                </Button>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </Panel>\r\n                                })\r\n                            }\r\n                        </PanelGroup>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SprintHistory() {\r\n    return (\r\n        <div>\r\n            Hello World\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl } from 'rsuite';\r\nimport  util  from '../../utility/utils';\r\n\r\nexport default function UserStoryForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [selectedSprint, setselectedSprint] = useState(null);\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n    \r\n        let message = \"User Story Has Been Created\";\r\n        let body = {\r\n            'title': title,\r\n            'description': description,\r\n            'assigned_to': selectedCollaborator,\r\n            'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n            'sprint_id': selectedSprint === -1 ? null : selectedSprint,\r\n            'project_id': props.project_id\r\n        };\r\n            await util.POST_DATA('api/userstories', body,message);\r\n                //clear the fields\r\n                setselectedCollaborator(null);\r\n                setestimatedHours(1);\r\n                setestimatedMinutes(0);\r\n                settitle(\"\");\r\n                setdescription(\"\");\r\n                setselectedSprint(null);\r\n        }\r\n    }\r\n\r\n    const getDestinationDropDownVal = () => {\r\n        if (props.acitveSprint)\r\n            return [\r\n                { \"label\": props.acitveSprint.name, \"value\": props.acitveSprint._id },\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n        else\r\n            return [\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                onChange={(value) => setdescription(value)}\r\n            />\r\n            <label className=\"rs-control-label\">Assign To </label>\r\n            <InputPicker\r\n                data={props.collaborators.map(c => {\r\n                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                })}\r\n                placeholder=\"Assign To\"\r\n                style={{ width: 400 }}\r\n                value={selectedCollaborator}\r\n                onChange={(value) => setselectedCollaborator(value)}\r\n            />\r\n\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\"\r\n            >\r\n                Select a Destination\r\n            </label>\r\n            <InputPicker\r\n                data={getDestinationDropDownVal()}\r\n                placeholder=\"Destination\"\r\n                style={{ width: 400 }}\r\n                value={selectedSprint}\r\n                onChange={(value) => setselectedSprint(value)}\r\n            />\r\n\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 250, marginRight: 10 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 250 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    InputNumber, Button, Form, FormGroup, ControlLabel, FormControl, Notification,\r\n    Table, Toggle, Steps, Panel, ButtonGroup\r\n} from 'rsuite';\r\n\r\n\r\nexport default function SprintForm(props) {\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [step, setStep] = useState(0);\r\n    const [userStoriesDone, setuserStoriesDone] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!!props.acitveSprint)\r\n            getUserStoriesDone();\r\n    }, []);\r\n\r\n    const getUserStoriesDone = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/userstories/unfinishedTask/${props.acitveSprint._id}`, requestOptions);\r\n        let data = await response.json();\r\n        let tableData = [];\r\n        data.userstories.forEach((d, i) => {\r\n            let estimated = d.estimated_time.split(',');\r\n            tableData.push({\r\n                \"story\": d.identifier,\r\n                \"estimated_hours\": estimated[0],\r\n                \"estimated_mins\": estimated[1],\r\n                \"re_estimated_hours\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].hours = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={50}\r\n                    min={0}\r\n                />,\r\n                \"re_estimated_mins\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].mins = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={59}\r\n                    min={0}\r\n                    defaultValue={0}\r\n                />,\r\n                \"move_to_backlog\": <Toggle\r\n                    onChange={(val) => {\r\n                        tableData[i].moveto_backlog = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                />,\r\n                \"moveto_backlog\": false,\r\n                \"hours\": 0,\r\n                \"mins\": 0,\r\n                \"id\": d._id\r\n            });\r\n        });\r\n        setuserStoriesDone(tableData);\r\n    }\r\n\r\n    const onChange = nextStep => {\r\n        setStep(nextStep < 0 ? 0 : nextStep > 3 ? 3 : nextStep);\r\n    };\r\n\r\n    const onNext = () => {\r\n        if (!title || !description) return;\r\n        if (step === 1 && userStoriesDone.find(u => Number(u.hours) === 0 && Number(u.mins) === 0)) {\r\n            return;\r\n        }\r\n        onChange(step + 1);\r\n    }\r\n\r\n    const onPrevious = () => onChange(step - 1);\r\n\r\n    const generateReport = async () => {\r\n        //generate report\r\n        return;\r\n    }\r\n\r\n    const createNewSprint = async () => {\r\n        let user_stories = [];\r\n        userStoriesDone.forEach(u => {\r\n            user_stories.push({\r\n                'id': u.id,\r\n                'estimated_time': `${u.hours},${u.mins}`,\r\n                'moveto_backlog': u.moveto_backlog\r\n            });\r\n        });\r\n\r\n\r\n        if (props.acitveSprint) {\r\n            await generateReport();\r\n        }\r\n\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Access-Control-Expose-Headers': '*',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                'name': title,\r\n                'description': description,\r\n                'project_id': props.project_id,\r\n                'sprint_id': props.acitveSprint ? props.acitveSprint._id : null,\r\n                user_stories\r\n            })\r\n        };\r\n\r\n        const response = await fetch('http://localhost:5000/api/sprints', requestOptions);\r\n        let res = await response.json();\r\n        if (response.status === 200) {\r\n            Notification.success({\r\n                title: 'Sprint Created Successfully',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n            props.refresh();\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: res.msg ?? 'Server error',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    fontSize: '25px',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    marginBottom: '35px',\r\n                    fontWeight: '400'\r\n                }}\r\n            >\r\n                Create Sprint\r\n            </div>\r\n\r\n            <div style={{ padding: '0 40px', width: '90%' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Sprint Info\" description=\"Sprint Information\" />\r\n                    {\r\n                        props.acitveSprint && <Steps.Item title=\"Manage User Stories\" description=\"Re-Estimate/ Move to Backlog\" />\r\n                    }\r\n                    <Steps.Item title=\"Submit\" description=\"Create New Sprint\" />\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '40vh', padding: '0' }}>\r\n                    {\r\n                        step === 0 &&\r\n                        <Form\r\n                            className=\"loginForm\"\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '70%', margin: '10px 0' }}>\r\n                                <TextField\r\n                                    name=\"title\"\r\n                                    label=\"Title\"\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '70%' }}>\r\n                                <TextField\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={description}\r\n                                    onChange={(value) => setdescription(value)}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                    {\r\n                        props.acitveSprint && step === 1 &&\r\n                        <Table\r\n                            cellBordered\r\n                            height={350}\r\n                            data={userStoriesDone}\r\n                            headerHeight={80}\r\n                            rowHeight={60}\r\n                            style={{ border: '1px solid #e6e6e6' }}\r\n                        >\r\n                            <Table.Column align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.HeaderCell>User Story</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"story\" />\r\n                            </Table.Column>\r\n\r\n                            <Table.ColumnGroup align=\"center\" verticalAlign=\"middle\" header=\"Estimated\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.ColumnGroup header=\"Re-Estimate\" align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.Column flexGrow={1} align=\"center\" verticalAlign=\"middle\">\r\n                                <Table.HeaderCell>Move to Backlog</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"move_to_backlog\" />\r\n                            </Table.Column>\r\n                        </Table>\r\n                    }\r\n                    {\r\n                        (step === 2 || !props.acitveSprint) &&\r\n                        <div\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                style={{ width: '300px', background: \"#134069\", color: '#f5f5f5' }}\r\n                                onClick={createNewSprint}\r\n                            >\r\n                                Create Sprint\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n                <hr />\r\n                <ButtonGroup>\r\n                    <Button onClick={onPrevious} disabled={step === 0}>\r\n                        Previous\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={onNext} disabled={props.acitveSprint ? step === 2 : step === 1}>\r\n                        Next\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/sprintHome.9f97a044.svg\";","import React, { useState, useEffect } from 'react'\r\nimport homeImg from \"../../assets/sprintHome.svg\";\r\nimport util from \"../../utility/utils\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport { IconButton, Icon, Button, Avatar, Drawer, Form, InputPicker, ButtonToolbar, Whisper, Popover } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction SprintHome(props) {\r\n\tconst [repo, setrepo] = useState(null);\r\n\tconst [selectedUser, setselectedUser] = useState(null);\r\n\tconst [addMemberDrawer, setAddMemberDrawer] = useState(false);\r\n\r\n\tconst getRepo = async () => {\r\n\t\tlet response = await util.FETCH_DATA(`api/git/getRepo/${props.project.repo}`);\r\n\t\tsetrepo(response.data.repo.data);\r\n\t};\r\n\r\n\tconst addMember = async () => {\r\n\t\tlet body = {\r\n\t\t\tproject_id: props.project._id,\r\n\t\t\tuser_id: selectedUser,\r\n\t\t};\r\n\t\tlet successMessage = \"Successfully added the user\";\r\n\t\tawait util.PUT_DATA(`api/projects/addMember`, body, successMessage);\r\n\t\tsetAddMemberDrawer(false);\r\n\t\tprops.getMembers(props.project._id);\r\n\t\tgetRepo();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRepo();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section style={{ display: \"flex\", height: \"70vh\" }}>\r\n\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t<img style={{ maxWidth: \"700px\", display: \"block\", margin: \"auto\" }} src={homeImg} alt=\"homeimg\" />\r\n\t\t\t\t</section>\r\n\t\t\t\t{\r\n\t\t\t\t\t(repo && props.membersIn && props.membersIn.length > 0) ?\r\n\t\t\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignContent: \"center\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"30px\", fontWeight: \"bold\" }}>{props.project.name}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", marginTop: \"10px\" }}>{props.project.description}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"20px\", marginTop: \"40px\", fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\tContributors\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"avatar-group\" style={{ justifyContent: \"center\", display: \"flex\", width: \"50%\", margin: \"auto\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t\t{props.membersIn.map((t, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Whisper\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger=\"hover\"\r\n\t\t\t\t\t\t\t\t\t\t\tplacement={\"top\"}\r\n\t\t\t\t\t\t\t\t\t\t\tspeaker={<Popover title={`${t.firstname} ${t.lastname}`}></Popover>}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tcircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#828282\", cursor: \"pointer\", margin: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={t.git_avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Whisper>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"40px\" }}>\r\n\t\t\t\t\t\t\t\t{[\"owner\", \"admin\"].includes(sessionStorage.getItem(\"sprintCompassUserRole\").toLowerCase()) && (\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"user-plus\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"10px\", border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setAddMemberDrawer(true)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAdd Member\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"github\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => window.open(repo.html_url, \"_blank\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tOpen with Github\r\n      \t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginTop: \"40px\", display: \"flex\" }}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tdata-div-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#e6e6e6\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '5px 0 0 5px' }}>\r\n\t\t\t\t\t\t\t\t\t\tClone Url\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#f5f5f5\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{repo.clone_url}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Clipboard\r\n\t\t\t\t\t\t\t\t\tdata-clipboard-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ background: '#134069', color: '#f5f5f5', width: '60px', borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tcopy\r\n\t\t\t\t\t\t\t\t</Clipboard>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section> :\r\n\t\t\t\t\t\t<Loader\r\n\t\t\t\t\t\t\tstyle={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignItems: \"center\" }}\r\n\t\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={addMemberDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tsetAddMemberDrawer(false);\r\n\t\t\t\t\tsetselectedUser(null);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className=\"drawerBody\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\taddMember();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h5 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>Add a Member</h5>\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length === 0 && <div style={{ textAlign: \"center\" }}>No new members to add</div>}\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length > 0 && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\t\tdata={props.membersNotIn.map((m) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn { label: m.firstname + \" \" + m.lastname, value: m._id };\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 224 }}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(value) => setselectedUser(value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<Button appearance=\"primary\" type=\"submit\" style={{ width: \"100%\", margin: \"30px 0\" }} disabled={!selectedUser}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SprintHome\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Sidenav, Dropdown, Nav, Container, Icon,\r\n    Content, Sidebar, Navbar, FlexboxGrid\r\n} from 'rsuite';\r\nimport { useRouteMatch, withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport MainNavbar from '../Navbar';\r\nimport SprintTable from './SprintTable';\r\nimport CreateTicket from \"../../assets/createTicket.svg\";\r\nimport SprintImg from \"../../assets/sprint.svg\";\r\nimport NoActiveSprint from \"../../assets/noactivesprint.svg\";\r\nimport Backlog from \"./Backlog\";\r\nimport SprintHistory from \"./SprintHistory\";\r\nimport UserStoryForm from \"./UserStoryForm\";\r\nimport SprintForm from \"./SprintForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport SprintHome from \"./sprintHome\";\r\nimport util from \"../../utility/utils\";\r\n\r\nconst NavToggle = ({ expand, onChange }) => {\r\n    return (\r\n        <Navbar appearance=\"inverse\"\r\n            style={{ background: '#134069' }}\r\n            className=\"nav-toggle\"\r\n        >\r\n            <Navbar.Body>\r\n                <Nav pullRight>\r\n                    <Nav.Item onClick={onChange} style={{ width: 56, textAlign: 'center' }}>\r\n                        <Icon icon={expand ? 'angle-left' : 'angle-right'} />\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Body>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nfunction ProjectBoard() {\r\n    const [collaborators, setcollaborators] = useState([]);\r\n    const [membersNotIn, setMembersNotIn] = useState([]);\r\n    const [project, setproject] = useState(null);\r\n    const [sprints, setsprints] = useState([]);\r\n\r\n    const [homeToggle, setHomeToggle] = useState(true);\r\n    const [activeSprintToggle, setactiveSprintToggle] = useState(false);\r\n    const [createSprintToggle, setcreateSprintToggle] = useState(false);\r\n    const [createUserStoryToggle, setcreateUserStoryToggle] = useState(false);\r\n    const [viewBacklogToggle, setviewBacklogToggle] = useState(false);\r\n    const [sprintHistoryToggle, setsprintHistoryToggle] = useState(false);\r\n\r\n    const [expand, setexpand] = useState(true);\r\n    const [acitveSprint, setActiveSprint] = useState(null);\r\n\r\n    let { url } = useRouteMatch();\r\n\r\n    let getSprints = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/sprints/allByProjectId/${url.split('/')[2]}`, requestOptions);\r\n        let data = await response.json();\r\n\r\n        let currentSprint = data.sprints.find(d => !d.is_done);\r\n        setActiveSprint(currentSprint);\r\n        setsprints(data.sprints);\r\n    }\r\n\r\n    let getProjectById = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        };\r\n        const response = await fetch(`http://localhost:5000/api/projects/byProjectId/${url.split('/')[2]}`, requestOptions);\r\n        let data = await response.json();\r\n        getAllUsers(data.project._id)\r\n        setproject(data.project);\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setexpand(!expand);\r\n    }\r\n\r\n    const navbarToggleHandler = (toggleFunction) => {\r\n        setactiveSprintToggle(false);\r\n        setcreateUserStoryToggle(false);\r\n        setcreateSprintToggle(false);\r\n        setviewBacklogToggle(false);\r\n        setsprintHistoryToggle(false);\r\n        setHomeToggle(false);\r\n\r\n        toggleFunction(true);\r\n    };\r\n\r\n    const getAllUsers = async (project_id) => {\r\n        let response = await util.FETCH_DATA(`api/projects/members/${project_id}`);\t\t\r\n        setcollaborators(response.data.membersIn);\r\n        setMembersNotIn(response.data.membersNotIn);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSprints();\r\n        getProjectById();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar />\r\n            <div className=\"show-fake-browser sidebar-page\">\r\n                <Container>\r\n                    <Sidebar\r\n                        style={{ display: 'flex', flexDirection: 'column' }}\r\n                        width={expand ? 260 : 56}\r\n                        collapsible\r\n                    >\r\n                        <Sidenav\r\n                            expanded={expand}\r\n                            defaultOpenKeys={['3', '4']}\r\n                            appearance=\"inverse\"\r\n                            style={{ background: '#134069', minHeight: 'calc(100vh - 97px)', height: '100%' }}\r\n                        >\r\n                            <Sidenav.Body>\r\n                                <Nav>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        icon={<Icon icon=\"home\" />}\r\n                                        active={homeToggle}\r\n                                        onClick={() => navbarToggleHandler(setHomeToggle)}\r\n                                    >\r\n                                        Home\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"3\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Sprint Planning\"\r\n                                        icon={<Icon icon=\"magic\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-3\"\r\n                                            active={activeSprintToggle}\r\n                                            icon={<Icon icon=\"dashboard\" />}\r\n                                            onClick={() => navbarToggleHandler(setactiveSprintToggle)}\r\n                                        >\r\n                                            Active Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item eventKey=\"3-2\"\r\n                                            active={createSprintToggle}\r\n                                            icon={<Icon icon=\"plus-square\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateSprintToggle)}\r\n                                        >\r\n                                            Create New Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-1\"\r\n                                            active={createUserStoryToggle}\r\n                                            icon={<Icon icon=\"newspaper-o\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateUserStoryToggle)}\r\n                                        >\r\n                                            Create User Story\r\n                                        </Dropdown.Item>\r\n\r\n                                    </Dropdown>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        active={viewBacklogToggle}\r\n                                        icon={<Icon icon=\"toggle-left\" />}\r\n                                        onClick={() => navbarToggleHandler(setviewBacklogToggle)}\r\n                                    >\r\n                                        View Backlog\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"4\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Advanced\"\r\n                                        icon={<Icon icon=\"gear-circle\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"4-1\"\r\n                                            active={sprintHistoryToggle}\r\n                                            onClick={() => navbarToggleHandler(setsprintHistoryToggle)}\r\n                                            icon={<Icon icon=\"history\" />}\r\n                                        >\r\n                                            Sprint History\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-2\">Websites</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-3\">Channels</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-4\">Tags</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-5\">Versions</Dropdown.Item>\r\n                                    </Dropdown>\r\n                                </Nav>\r\n                            </Sidenav.Body>\r\n                            <NavToggle expand={expand} onChange={handleToggle} />\r\n                        </Sidenav>\r\n                    </Sidebar>\r\n\r\n                    <Container>\r\n                        <Content>\r\n                            {\r\n                                homeToggle && !!project &&\r\n                                <SprintHome\r\n                                    project={project}\r\n                                    membersIn={collaborators}\r\n                                    membersNotIn={membersNotIn}\r\n                                    getMembers={getAllUsers}\r\n                                />\r\n                            }\r\n                            {\r\n                                activeSprintToggle &&\r\n                                <div>\r\n\r\n                                    {\r\n                                        acitveSprint ?\r\n                                            <SprintTable\r\n                                                sprint={acitveSprint}\r\n                                                collaborators={collaborators}\r\n                                                project_id={url.split('/')[2]}\r\n                                                project={project}\r\n                                            /> :\r\n                                            <NotFound\r\n                                                image={NoActiveSprint}\r\n                                                msg=\"No Active Sprint Found\"\r\n                                            />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createSprintToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 97px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={8}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={SprintImg}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={16}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <SprintForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    refresh={() => {\r\n                                                        navbarToggleHandler(setHomeToggle);\r\n                                                        getSprints()\r\n                                                    }}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createUserStoryToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 97px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={12}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={CreateTicket}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={12}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        fontSize: '25px',\r\n                                                        display: 'block',\r\n                                                        textAlign: 'center',\r\n                                                        marginBottom: '15px',\r\n                                                        fontWeight: '400'\r\n                                                    }}\r\n                                                >\r\n                                                    Create User Story\r\n                                                </div>\r\n                                                <UserStoryForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    collaborators={collaborators}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                viewBacklogToggle &&\r\n                                <Backlog project_id={url.split('/')[2]} acitveSprint={acitveSprint} />\r\n                            }\r\n                            {\r\n                                sprintHistoryToggle &&\r\n                                <SprintHistory />\r\n                            }\r\n                        </Content>\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ProjectBoard);","export default __webpack_public_path__ + \"static/media/teamsHome.331c024c.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ProjectSvg from \"../assets/teamsHome.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n    Drawer, Icon, Button, Form, FormGroup, FormControl, ControlLabel,\r\n    ButtonToolbar, Schema, Notification, List, FlexboxGrid\r\n} from 'rsuite';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Navbar from './Navbar'\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//model for create project\r\nconst createProjectDrawerModel = Schema.Model({\r\n    name: StringType().isRequired('Name is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\n//custom text field\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styleCenter = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '60px'\r\n};\r\n\r\nconst slimText = {\r\n    fontSize: '0.9em',\r\n    color: '#97969B',\r\n    fontWeight: 'lighter',\r\n    paddingBottom: 3\r\n};\r\n\r\nconst titleStyle = {\r\n    paddingBottom: 5,\r\n    whiteSpace: 'nowrap',\r\n    fontWeight: 500\r\n};\r\n\r\nfunction Projects(props) {\r\n    const [createProjectDrawer, setcreateProjectDrawer] = useState(false);\r\n    const [projectName, setprojectName] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [userProjects, setuserProjects] = useState([]);\r\n    const [userRole, setUserRole] = useState([]);\r\n    const [loading, setloading] = useState(false);\r\n\r\n    let getProjects = async () => {\r\n        setloading(true);\r\n        setUserRole(sessionStorage.getItem('sprintCompassUserRole'));\r\n        const response = await util.FETCH_DATA(`api/projects`);\r\n        setuserProjects(response.data.projects);\r\n        setloading(false);\r\n    }\r\n    \r\n    let close = () => {\r\n        setcreateProjectDrawer(false);\r\n        setprojectName(\"\");\r\n        setdescription(\"\");\r\n    }\r\n\r\n    let createProject = async (status) => {\r\n        if (status) {\r\n            let message = \"Project Has Been Created\";\r\n            let body = { 'name': projectName, 'description': description };\r\n                await util.POST_DATA(`api/projects`, body,message);\r\n            close();\r\n            getProjects();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"projectBannerContainer\">\r\n                <div className=\"teamImageContainer\">\r\n                    <img\r\n                        style={{ width: \"80%\", maxWidth: \"600px\" }}\r\n                        src={ProjectSvg}\r\n                        alt=\"ProjectSvg\"\r\n                    />\r\n                </div>\r\n                <div className=\"projectImageContainer\">\r\n                    <div\r\n                        style={{\r\n                            fontSize: \"45px\",\r\n                            fontWeight: \"bold\",\r\n                            lineHeight: \"1.2\",\r\n                            marginBottom: \"50px\",\r\n                            width: '100%',\r\n                            textAlign: 'center'\r\n                        }}\r\n                    >\r\n                        Welcome to\r\n                            <br />\r\n                        <span\r\n                            style={{\r\n                                color: \"#2D56B3\",\r\n                                fontWeight: 600\r\n                            }}\r\n                        >\r\n                            Run\r\n                            </span>\r\n                        <span style={{ color: \"#515B60\" }}>time</span>\r\n                    </div>\r\n                    {(userRole === \"owner\" || userRole === \"admin\") && (\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div className=\"teamButtons\" onClick={() => setcreateProjectDrawer(true)}>\r\n                                Create a Project\r\n\t\t\t\t\t\t\t</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            <div>\r\n                <div className=\"projectHomeHeader\">Your Projects</div>\r\n                <List hover style={{ width: '80%', margin: 'auto' }}>\r\n                    {userProjects.map((item, index) => (\r\n                        <List.Item key={item._id} index={index}>\r\n                            <FlexboxGrid>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={10}\r\n                                    style={{\r\n                                        ...styleCenter,\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'flex-start',\r\n                                        overflow: 'hidden'\r\n                                    }}\r\n                                >\r\n                                    <div style={titleStyle}>{item.name}</div>\r\n                                    <div style={slimText}>\r\n                                        <div>Description</div>\r\n                                        <div>{item.description}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={6} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Project Lead</div>\r\n                                        <div>\r\n                                            <Icon icon=\"user-circle-o\" />\r\n                                            {`  ${item.project_lead.firstname} ${item.project_lead.lastname}`}\r\n                                        </div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={5} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Start Date</div>\r\n                                        <div style={slimText}>{item.created_at}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={3}\r\n                                    style={{ ...styleCenter, justifyContent: 'center' }}\r\n                                >\r\n                                    <div\r\n                                        style={{ cursor: 'pointer', color: '#134069' }}\r\n                                        onClick={() => props.history.push(`project/${item._id}`)}\r\n                                    >\r\n                                        View\r\n                                        </div>\r\n                                </FlexboxGrid.Item>\r\n                            </FlexboxGrid>\r\n                        </List.Item>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            {\r\n                userProjects.length === 0 && !loading && <div style={{ textAlign: 'center' }}>No Projects Found</div>\r\n            }\r\n            <Drawer\r\n                show={createProjectDrawer}\r\n                onHide={() => { close() }}\r\n            >\r\n                <Drawer.Body>\r\n                    <div className=\"drawerBody\">\r\n                        <Form\r\n                            model={createProjectDrawerModel}\r\n                            onSubmit={(status) => { createProject(status) }}\r\n                        >\r\n                            <h5 style={{ textAlign: 'center', marginBottom: '50px' }}>Create a Project</h5>\r\n                            <TextField\r\n                                name=\"name\"\r\n                                label=\"Project Name\"\r\n                                onChange={(value) => setprojectName(value)}\r\n                            />\r\n                            <TextField\r\n                                name=\"description\"\r\n                                label=\"Description\"\r\n                                onChange={(value) => setdescription(value)}\r\n                            />\r\n                            <ButtonToolbar>\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </ButtonToolbar>\r\n                        </Form>\r\n                    </div>\r\n                </Drawer.Body>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Projects);\r\n","export default __webpack_public_path__ + \"static/media/bio.c14203e2.svg\";","export default __webpack_public_path__ + \"static/media/git.8ed5ab3d.svg\";","export default __webpack_public_path__ + \"static/media/organization.451cba29.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PasswordRenewSvg from '../../assets/passwordRenew.svg';\r\nimport BioSvg from '../../assets/bio.svg';\r\nimport Gitsvg from '../../assets/git.svg';\r\nimport OrganizationSvg from '../../assets/organization.svg';\r\nimport './authrenew.css';\r\nimport util from \"../../utility/utils\";\r\nimport {\r\n    Form, FormControl, FormGroup, ControlLabel, Schema,\r\n    Notification, Steps, Panel, Button, InputPicker, Message\r\n} from 'rsuite';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\nexport default function AuthRenewPage(props) {\r\n\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [position, setPosition] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [location, setlocation] = useState('');\r\n\r\n    const [authenticating, setAuthenticating] = useState(false);\r\n\r\n    const [step, setStep] = useState();\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const [organizations, setorganizations] = useState([]);\r\n    const [companyName, setcompanyName] = useState(\"\");\r\n    const [gitOrganization, setgitOrganization] = useState(null);\r\n\r\n    const getUserData = async () => {\r\n        let response = await util.FETCH_DATA(`api/users/getUserById/${sessionStorage.getItem('sprintCompassUser')}`);\r\n        if (response.status === 200) {\r\n            let user = response.data.user;\r\n            if (user.disabled) {\r\n                sessionStorage.removeItem('sprintCompassToken');\r\n                sessionStorage.removeItem('sprintCompassUser');\r\n                sessionStorage.removeItem('sprintCompassUserName');\r\n                sessionStorage.removeItem('sprintCompassUserRole');\r\n                window.open('/login', '_self');\r\n            }\r\n            else {\r\n                if (!!user.first_login) setStep(0);\r\n                else if (!!user.git_token) setStep(3);\r\n                else {\r\n                    setStep(2);\r\n                }\r\n                setuser(response.data.user);\r\n            }\r\n        }\r\n    };\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            let token = sessionStorage.getItem('sprintCompassToken');\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    old_password: currentPassord,\r\n                    new_password: newpassword\r\n                })\r\n            };\r\n\r\n            let response = await fetch(`http://localhost:5000/api/users/update_password`, requestOptions);\r\n            let message = await response.json();\r\n\r\n            if (response.status === 200) {\r\n                Notification.success({\r\n                    title: `Password Has Been Updated`,\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n                setStep(1);\r\n            }\r\n            else {\r\n                Notification.error({\r\n                    title: message.msg,\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n            setloading(false);\r\n        }\r\n    }\r\n\r\n    const updateUserData = async () => {\r\n        if (position === \"\" && phone === \"\" && location === \"\") {\r\n            setStep(2);\r\n            return;\r\n        }\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ position, phone, location })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/users/update_user`, requestOptions);\r\n        if (response.status === 200) {\r\n            Notification.success({\r\n                title: `Profile Has Been Updated`,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n            setStep(2);\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    const checkAuthorization = async () => {\r\n        if (util.getQueryVariable(\"error\") === \"access_denied\") {\r\n            Notification.error({\r\n                title: `Authorization Failed`,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        let code = util.getQueryVariable(\"code\");\r\n        if (code) {\r\n            const response = await util.FETCH_DATA(`gitauth/get_token?code=${code}`);\r\n            if (response.status === 200) {\r\n                Notification.success({\r\n                    title: \"Successfully authorized github\",\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: \"topEnd\",\r\n                });\r\n                setStep(3);\r\n\r\n                //remove code from the url withour reloading\r\n                let newUrl = window.location.origin + '/auth';\r\n                window.history.pushState({}, null, newUrl);\r\n            } else {\r\n                Notification.error({\r\n                    title: \"Failed to Authorize with GitHub\",\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: \"topEnd\",\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    let getOrganizations = async () => {\r\n        const response = await util.FETCH_DATA(`api/git/getOrganizations`);\r\n        setorganizations(response.data.organizations);\r\n    }\r\n\r\n    let validateInvite = async () => {\r\n        const response = await util.FETCH_DATA(`gitauth/validateInvite`);\r\n        if (response.status === 200) {\r\n            Notification.success({\r\n                title: \"Congratulations!\",\r\n                description: <div style={{ width: 220 }} rows={3} > Welcome to Runtime </div>,\r\n                placement: \"topEnd\",\r\n            });\r\n            props.history.push('/projects');\r\n        }\r\n    }\r\n\r\n    let submitOrganization = async () => {\r\n        if (!companyName || !gitOrganization) {\r\n            Notification.error({\r\n                title: \"Missing Fields\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        let token = sessionStorage.getItem(\"sprintCompassToken\");\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ name: companyName, organization: gitOrganization })\r\n        };\r\n\r\n        let response = await fetch(`http://localhost:5000/api/users/addClient`, requestOptions);\r\n        let res = await response.json();\r\n\r\n        if (response.status === 200) {\r\n            Notification.success({\r\n                title: res.msg,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n            props.history.push('/projects');\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: res.msg,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (step === 3 && user?.role === 'owner' && organizations.length === 0) {\r\n            getOrganizations();\r\n        }\r\n    }, [step, user]);\r\n\r\n    useEffect(() => {\r\n        checkAuthorization();\r\n        getUserData();\r\n    }, [])\r\n\r\n\r\n    const authorize = () => {\r\n        setAuthenticating(true);\r\n        let url = `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&scope=admin:org%20repo`;\r\n        window.open(url, \"_self\");\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: 'auto', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <div style={{ width: '100%', height: '80vh' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Change Password\" />\r\n                    <Steps.Item title=\"Update Bio\" />\r\n                    <Steps.Item title=\"Authorize Github\" />\r\n                    {\r\n                        user && user.role === 'owner' ?\r\n                            <Steps.Item title=\"Choose Organization\" /> :\r\n                            <Steps.Item title=\"Accept Organization Invite\" />\r\n                    }\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '60vh' }} >\r\n                    <section style={{ display: 'flex', height: '60vh' }}>\r\n                        <div style={{ width: '50%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <img style={{ maxWidth: '550px' }} src={PasswordRenewSvg} alt=\"passwordrenewimg\" />\r\n                            }\r\n                            {\r\n                                step === 1 &&\r\n                                <img style={{ maxWidth: '550px' }} src={BioSvg} alt=\"profileimg\" />\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <img style={{ maxWidth: '550px' }} src={Gitsvg} alt=\"gitimg\" />\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <img style={{ maxWidth: '550px' }} src={OrganizationSvg} alt=\"orgImg\" />\r\n                            }\r\n                        </div>\r\n                        <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                step === 1 && !!user &&\r\n                                <div>\r\n                                    <Form\r\n                                        onSubmit={() => updateUserData()}\r\n                                    >\r\n                                        <TextField\r\n                                            label='Job Title'\r\n                                            onChange={(value) => {\r\n                                                setPosition(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Phone'\r\n                                            onChange={(value) => {\r\n                                                setphone(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Location'\r\n                                            onChange={(value) => {\r\n                                                setlocation(value);\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            style={styles.update__button}\r\n                                        >\r\n                                            Update Bio\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={authenticating ? styles.disabled__button : styles.update__button}\r\n                                    onClick={authorize}\r\n                                    disabled={authenticating}\r\n                                >\r\n                                    Authorize Github\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <>\r\n                                    {\r\n                                        user && user.role === 'owner' &&\r\n                                        <div>\r\n                                            <Form\r\n                                                onSubmit={() => submitOrganization()}\r\n                                            >\r\n                                                <TextField\r\n                                                    label='Organization Name'\r\n                                                    onChange={(value) => {\r\n                                                        setcompanyName(value);\r\n                                                    }}\r\n                                                />\r\n                                                <InputPicker\r\n                                                    data={organizations}\r\n                                                    onChange={(value) => setgitOrganization(value)}\r\n                                                    block\r\n                                                    placeholder=\"Select a Github Organization\"\r\n                                                />\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    style={styles.update__button}\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        user && user.role !== 'owner' &&\r\n                                        <Message\r\n                                            showIcon\r\n                                            type=\"success\"\r\n                                            title=\"Invitation Sent\"\r\n                                            description={\r\n                                                <>\r\n                                                    We have sent you an email invitation to join the organization.<br />\r\n                                                    Please accept it and click finish.\r\n                                                </>\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                </Panel>\r\n                <hr />\r\n                <div style={{ float: 'right' }}>\r\n                    {step === 3 && user?.role !== \"owner\" &&\r\n                        <Button style={{ background: \"#193A5A\", color: \"#f5f5f5\", width: \"100px\" }} onClick={validateInvite}>\r\n                            Finish\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    disabled__button: {\r\n        marginTop: '50px',\r\n        background: 'grey',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    next__button: {\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        float: 'right',\r\n        minWidth: '100px'\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/imagePlaceHolder.f0421300.svg\";","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport {\r\n    Icon, IconButton, Drawer, Button, Schema,\r\n    Form, FormControl, FormGroup, ControlLabel, Notification\r\n} from 'rsuite';\r\nimport ImageUploader from 'react-images-upload';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImagePlaceHolder from \"../assets/imagePlaceHolder.svg\";\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function Profile(props) {\r\n    const [editable, seteditable] = useState(false);\r\n    const [changeAttribute, setChangeAttribute] = useState('');\r\n    const [openDrawer, setopenDrawer] = useState(false);\r\n    const [loading, setloading] = useState(false);\r\n    const [validImage, setvalidImage] = useState(false);\r\n\r\n    const [id, setid] = useState(null);\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n            Resizer.imageFileResizer(file, 800, 800, \"JPEG\", 100, 0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\"\r\n            );\r\n        });\r\n\r\n    const onDrop = async (picture) => {\r\n        if (picture[0]) {\r\n            const image = await resizeFile(picture[0]);\r\n            let userTemp = JSON.parse(JSON.stringify(user));\r\n            userTemp.image = image;\r\n            setuser(userTemp);\r\n            setvalidImage(true);\r\n        }\r\n    };\r\n\r\n    const getUserData = async (id) => {\r\n        let response = await util.FETCH_DATA(`api/users/getById/${id}`);\r\n        if (response.status === 200) {\r\n            setuser(response.data.user);\r\n        }\r\n    };\r\n\r\n    const updateUserData = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            setopenDrawer(false);\r\n            let body = { [changeAttribute.toLowerCase()]: user[changeAttribute.toLowerCase()]}\r\n            let message = `${changeAttribute} Has Been Updated`;\r\n              await util.PUT_DATA(`api/users`, body,message);\r\n              setChangeAttribute(null);\r\n              getUserData(id);\r\n              setloading(false);\r\n              setvalidImage(false);\r\n        }\r\n    }\r\n    \r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n\r\n        let message = `Password Has Been Updated`;\r\n        let body ={\r\n                    old_password: currentPassord,\r\n                    new_password: newpassword\r\n                }\r\n            await util.PUT_DATA(`api/users/change_password`, body,message);\r\n             \r\n            setopenDrawer(false);\r\n            setChangeAttribute(null);\r\n            getUserData(id);\r\n            setloading(false);\r\n            setvalidImage(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let path = window.location.pathname.split('/');\r\n        let user_id = null;\r\n        if (path.length > 2) {\r\n            user_id = path[2];\r\n            seteditable(false);\r\n        } else {\r\n            seteditable(true);\r\n            user_id = sessionStorage.getItem('sprintCompassUser');\r\n        }\r\n        setid(user_id);\r\n        getUserData(user_id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {\r\n                (!user || loading) &&\r\n                <div style={{ height: '70vh' }}>\r\n                    <Loader\r\n                        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                        type=\"ThreeDots\"\r\n                        color=\"#134069\"\r\n                        height={50}\r\n                        width={50}\r\n                    />\r\n                </div>\r\n            }\r\n            {user && !loading &&\r\n                <>\r\n                    <section style={styles.main}>\r\n                        <section style={styles.main__1}>\r\n                            {\r\n                                user.image ?\r\n                                    <img\r\n                                        style={styles.main__1__img}\r\n                                        src={user.image}\r\n                                        alt='dp'\r\n                                    /> :\r\n                                    <img\r\n                                        style={{ maxWidth: '500px', display: 'block', margin: 'auto' }}\r\n                                        src={ImagePlaceHolder}\r\n                                        alt='dp'\r\n                                    />\r\n                            }\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.change__image}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Image');\r\n                                    }}\r\n                                >\r\n                                    Change Image\r\n                                </div>\r\n                            )}\r\n                        </section>\r\n                        <section style={styles.main__2}>\r\n                            <div style={styles.name}>\r\n                                {`${user.firstname} ${user.lastname}`}\r\n                            </div>\r\n                            <div style={styles.profession}>\r\n                                {user.position && `${user.position}`}\r\n                                {editable && (\r\n                                    <span\r\n                                        style={styles.change}\r\n                                        onClick={() => {\r\n                                            setopenDrawer(true);\r\n                                            setChangeAttribute('Position');\r\n                                        }}\r\n                                    >\r\n                                        {user.position ? 'change' : 'Add Position'}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <section style={styles.info}>\r\n                                <div style={styles.attribute__container}>\r\n                                    <Icon size='2x' icon='send' style={styles.info__1} />\r\n                                    <div style={styles.info__2}>\r\n                                        {`${user.email}`}\r\n                                        {editable &&\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Email');\r\n                                                }}\r\n                                            >\r\n                                                change\r\n                                         </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.phone || editable) && <Icon size='2x' icon='phone' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.phone && `${user.phone}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Phone');\r\n                                                }}\r\n                                            >\r\n                                                {user.phone ? 'change' : 'Add Phone Number'}{' '}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.location || editable) && <Icon size='2x' icon='map-marker' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.location && `${user.location}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Location');\r\n                                                }}\r\n                                            >\r\n                                                {user.location ? 'change' : 'Add Location'}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.update__password}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Password');\r\n                                    }}\r\n                                >\r\n                                    Change Password\r\n                                </div>\r\n                            )}\r\n                            <IconButton\r\n                                style={{\r\n                                    width: '250px',\r\n                                    margin: '30px 0',\r\n                                    background: '#134069',\r\n                                    color: '#f5f5f5',\r\n                                }}\r\n                                icon={\r\n                                    <Icon\r\n                                        style={{ background: '#486b8c', color: '#f5f5f5' }}\r\n                                        icon='send'\r\n                                    />\r\n                                }\r\n                                placement='left'\r\n                            >\r\n                                Send Message\r\n                            </IconButton>\r\n                        </section>\r\n                    </section>\r\n\r\n                    <Drawer show={openDrawer} onHide={() => setopenDrawer(false)}>\r\n                        <Drawer.Header>\r\n                            <Drawer.Title>Add/Change {changeAttribute}</Drawer.Title>\r\n                        </Drawer.Header>\r\n                        <Drawer.Body style={styles.drawer__body}>\r\n                            {\r\n                                changeAttribute === 'Image' &&\r\n                                <>\r\n                                    <ImageUploader\r\n                                        withIcon={true}\r\n                                        onChange={(a, b) => onDrop(a, b)}\r\n                                        imgExtension={['.jpg', '.png']}\r\n                                        maxFileSize={2097152}\r\n                                        buttonText='Choose Image'\r\n                                        label=\"Maximum File Size: 2 mb, Accepted Formats: jpg, png\"\r\n                                    />\r\n                                    <Button\r\n                                        style={styles.update__button}\r\n                                        disabled={loading || !validImage}\r\n                                        onClick={() => {\r\n                                            updateUserData(!!user.image)\r\n                                        }}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            {\r\n                                (\r\n                                    changeAttribute === 'Position' ||\r\n                                    changeAttribute === 'Email' ||\r\n                                    changeAttribute === 'Location' ||\r\n                                    changeAttribute === 'Phone'\r\n                                )\r\n                                &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        [changeAttribute]: StringType().isRequired(`${changeAttribute} is required.`),\r\n                                    })}\r\n                                    onSubmit={(status) => { updateUserData(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        name={changeAttribute}\r\n                                        label={changeAttribute}\r\n                                        value={user[changeAttribute.toLowerCase()] ?? \"\"}\r\n                                        onChange={(value) => {\r\n                                            let userTemp = JSON.parse(JSON.stringify(user));\r\n                                            userTemp[changeAttribute.toLowerCase()] = value;\r\n                                            setuser(userTemp);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                changeAttribute === \"Password\" &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                        </Drawer.Body>\r\n                    </Drawer>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        height: '600px',\r\n        width: '80%',\r\n        maxWidth: '1400px',\r\n        margin: '50px auto',\r\n    },\r\n    main__1: {\r\n        width: '50%',\r\n        margin: 'auto',\r\n    },\r\n    main__1__img: {\r\n        maxHeight: '100%',\r\n        maxWidth: '80%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n    },\r\n    main__2: {\r\n        flex: 1,\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    name: {\r\n        fontSize: '25px',\r\n        fontWeight: 'bold',\r\n        width: '100%',\r\n        margin: '5px 0',\r\n    },\r\n    profession: {\r\n        fontSize: '15px',\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        margin: '50px 0',\r\n    },\r\n    attribute__container: {\r\n        display: 'flex',\r\n        margin: '25px 0',\r\n    },\r\n    info__1: {\r\n        width: '50px',\r\n    },\r\n    info__2: {\r\n        flex: 1,\r\n        fontSize: '17px',\r\n    },\r\n    change: {\r\n        marginLeft: '5px',\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        cursor: 'pointer'\r\n    },\r\n    change__image: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        marginTop: '15px',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    update__password: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        width: '100%',\r\n        cursor: 'pointer'\r\n    },\r\n    drawer__body: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Avatar, Progress, Icon, InputPicker, Toggle, Drawer, Button } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './userTable.css';\r\nimport util from '../../utility/utils';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\nconst UserRoles = [\r\n\t{ label: \"Admin\", value: \"admin\" },\r\n\t{ label: \"Member\", value: \"member\" },\r\n];\r\nexport default function UsersTable(props) {\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [selectedRole, setSelectedRole] = useState(-1);\r\n\tconst [sortColumn, setSortColumn] = useState(null);\r\n\tconst [selectedUser, setSelectedUser] = useState(null);\r\n\tconst [sortType, setSortType] = useState(\"asc\");\r\n\tconst [openDrawer, setOpenDrawer] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState(false);\r\n\r\n\tconst [loading, setloading] = useState(false);\r\n\r\n\tconst getUsers = async () => {\r\n\t\tsetloading(true);\r\n\t\tlet token = sessionStorage.getItem(\"sprintCompassToken\");\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst response = await fetch(`http://localhost:5000/api/users`, requestOptions);\r\n\t\tlet data = await response.json();\r\n\t\tlet filteredUsers = data.users.filter((user) => {\r\n\t\t\tif (user.role.toLowerCase() !== \"owner\") return user;\r\n\t\t\treturn undefined;\r\n\t\t});\r\n\t\tsetUsers(filteredUsers);\r\n\t\tsetloading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUsers();\r\n\t}, []);\r\n\r\n\tconst getData = () => {\r\n\t\tif (sortColumn && sortType) {\r\n\t\t\treturn users.sort((a, b) => {\r\n\t\t\t\tlet x = a[sortColumn];\r\n\t\t\t\tlet y = b[sortColumn];\r\n\t\t\t\tif (sortType === \"asc\") {\r\n\t\t\t\t\treturn x.localeCompare(y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn y.localeCompare(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn users;\r\n\t};\r\n\r\n\tconst ImageCell = ({ rowData, dataKey, ...props }) => {\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ padding: 8 }}>\r\n\t\t\t\t<Avatar circle src={rowData[dataKey]} />\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst TagCell = ({ rowData, dataKey, ...props }) => {\r\n\t\tlet colour = rowData[dataKey] ? \"blue\" : \"green\";\r\n\t\tlet content = rowData[dataKey] ? \"Disabled\" : \"Active\";\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ margin: 2, alignContent: \"center\" }}>\r\n\t\t\t\t<Tag color={colour}>{content}</Tag>\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst ProcessCell = ({ rowData, ...props }) => {\r\n\t\tlet percentage = Math.trunc(((!rowData.first_login + !!rowData.git_token + rowData.invitation_accepted) / 3) * 100);\r\n\t\tpercentage = isNaN(percentage) ? 0 : percentage;\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props}>\r\n\t\t\t\t{percentage === 0 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : percentage === 100 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} status=\"success\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} strokeColor=\"#ffc107\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleSortColumn = (sortColumn, sortType) => {\r\n\t\tsetSortColumn(sortColumn);\r\n\t\tsetSortType(sortType);\r\n\t};\r\n\r\n\tlet close = () => {\r\n\t\tsetOpenDrawer(false);\r\n\t};\r\n\r\n\tconst PassFailIcon = (pass) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{pass ? (\r\n\t\t\t\t\t<Icon icon=\"check-circle\" style={{ margin: 5, color: \"green\" }} size=\"2x\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Icon icon=\"close-circle\" style={{ margin: 5, color: \"red\" }} size=\"2x\" />\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst updateUser = async () => {\r\n\t\tlet message = \"User Has Been Updated\"\r\n\t\tlet body = { id: selectedUser._id, role: selectedRole, disabled: userStatus };\r\n\t\tawait util.PUT_DATA(`api/users/updateUserById`, body, message);\r\n\t\tsetOpenDrawer(false);\r\n\t\tgetUsers();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tloading ?\r\n\t\t\t\t\t<Loader\r\n\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\twidth={1000}\r\n\t\t\t\t\t\theight={600}\r\n\t\t\t\t\t\tdata={getData()}\r\n\t\t\t\t\t\trowHeight={65}\r\n\t\t\t\t\t\tsortColumn={sortColumn}\r\n\t\t\t\t\t\tsortType={sortType}\r\n\t\t\t\t\t\tonSortColumn={handleSortColumn}\r\n\t\t\t\t\t\tonRowClick={(data) => {\r\n\t\t\t\t\t\t\tsetSelectedRole(data.role);\r\n\t\t\t\t\t\t\tsetSelectedUser(data);\r\n\t\t\t\t\t\t\tsetOpenDrawer(true);\r\n\t\t\t\t\t\t\tsetUserStatus(data.disabled);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Column width={100} fixed>\r\n\t\t\t\t\t\t\t<HeaderCell />\r\n\t\t\t\t\t\t\t<ImageCell dataKey=\"git_avatar\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>First Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"firstname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Last Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"lastname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>User Role</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"role\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={100}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Status</HeaderCell>\r\n\t\t\t\t\t\t\t<TagCell dataKey=\"disabled\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={150}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Onboarding</HeaderCell>\r\n\t\t\t\t\t\t\t<ProcessCell />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t</Table>\r\n\t\t\t}\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={openDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tclose();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Header>\r\n\t\t\t\t\t<Drawer.Title>User Information</Drawer.Title>\r\n\t\t\t\t</Drawer.Header>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className='user__info__container'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>User Name</div>\r\n\t\t\t\t\t\t\t<div>{selectedUser?.firstname} {selectedUser?.lastname}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Account Activated</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(!selectedUser?.first_login)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Github Authorized</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.git_token)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Joined Organization</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.invitation_accepted)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"rs-control-label\">User Role</label>\r\n\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '150px' }}\r\n\t\t\t\t\t\t\t\t\tdata={UserRoles}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"User Role\"\r\n\t\t\t\t\t\t\t\t\tvalue={selectedRole}\r\n\t\t\t\t\t\t\t\t\tcleanable={false}\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => setSelectedRole(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>User Enabled</label>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Toggle\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '30px', textAlign: 'center' }}\r\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\t\t\tchecked={!userStatus}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setUserStatus(!userStatus)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tappearance=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => updateUser()}\r\n\t\t\t\t\t\t\tstyle={{ width: 250 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate User\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\tcolor: 'black',\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'black'\r\n\t},\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admin.c410cff4.svg\";","import React, { useState } from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport {\r\n    Form, FormGroup, ControlLabel, Icon, Button, FormControl, Schema, Message, Notification\r\n} from 'rsuite';\r\nimport './adminPage.css';\r\nimport UsersTable from './UsersTable';\r\nimport AdminSvg from '../../assets/admin.svg';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst adminFunctions = [\r\n    { key: 1, name: 'Create User', icon: 'user-plus' },\r\n    { key: 3, name: 'Manage Users', icon: 'setting' },\r\n    { key: 4, name: 'App Settings', icon: 'laptop' },\r\n    { key: 5, name: 'Github Settings', icon: 'github' },\r\n    { key: 6, name: 'Reports', icon: 'file-text-o' },\r\n    { key: 7, name: 'Data Management', icon: 'database' }\r\n];\r\n\r\nexport default function AdminPage() {\r\n    const [activeKey, setactiveKey] = useState(0);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"adminContainer\">\r\n                <section className=\"adminContainer__1\">\r\n                    {\r\n                        adminFunctions.map(f => {\r\n                            return <FunctionCard\r\n                                key={f.key}\r\n                                function={f}\r\n                                active={f.key === activeKey}\r\n                                makeActiveKey={() => setactiveKey(f.key)}\r\n                            />\r\n                        })\r\n                    }\r\n                </section>\r\n                <section className=\"adminContainer__2\">\r\n                    {\r\n                        activeKey === 0 &&\r\n                        <section className=\"adminHome\">\r\n                            <img src={AdminSvg} alt=\"adminSvg\" />\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 1 &&\r\n                        <section className=\"functionContainer\">\r\n                            <div>\r\n                                <img src={AdminSvg} alt=\"adminSvg\" />\r\n                            </div>\r\n                            <div>\r\n                                <AddUserCard />\r\n                            </div>\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 3 &&\r\n                        <div>\r\n                            <UsersTable />\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet FunctionCard = (props) => {\r\n    return (\r\n        <section\r\n            className=\"functionCard\"\r\n            onClick={props.makeActiveKey}\r\n            style={{ color: props.active ? '#134069' : '' }}\r\n        >\r\n            <div>\r\n                <Icon icon={props.function.icon} size='2x' />\r\n            </div>\r\n            <div style={{ fontWeight: props.active ? 700 : 500 }}>\r\n                {props.function.name}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nlet AddUserCard = () => {\r\n    const [firstname, setfirstname] = useState(\"\");\r\n    const [lastname, setlastname] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n\r\n    const addUser = async (status) => {\r\n        if (status) {\r\n            let token = sessionStorage.getItem('sprintCompassToken');\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    firstname, lastname, email\r\n                })\r\n            };\r\n            const response = await fetch('http://localhost:5000/api/users/create', requestOptions);\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setfirstname('');\r\n                setlastname('');\r\n                setemail('');\r\n\r\n                Notification.success({\r\n                    title: \"Successfully Created the User\",\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n            else {\r\n                Notification.error({\r\n                    title: data.msg,\r\n                    description: <div style={{ width: 220 }} rows={3} />,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            className=\"addUserForm\"\r\n            model={registerModel}\r\n            onSubmit={(status) => { addUser(status) }}\r\n        >\r\n            <TextField\r\n                name=\"firstname\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(value) => setfirstname(value)}\r\n            />\r\n            <TextField\r\n                name=\"lastname\"\r\n                label=\"Last Name\"\r\n                value={lastname}\r\n                onChange={(value) => setlastname(value)}\r\n            />\r\n            <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={(value) => setemail(value)}\r\n            />\r\n            <Message\r\n                showIcon\r\n                type=\"info\"\r\n                title=\"Did you know?\"\r\n                description=\"The new user will get an email with the temperory password\"\r\n            />\r\n            <Button\r\n                appearance=\"primary\"\r\n                type=\"submit\"\r\n                style={{ width: '100%', marginTop: '20px' }}\r\n                disabled={!firstname || !lastname || !email}\r\n            >\r\n                Create User\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n//data validation for add user\r\nconst registerModel = Schema.Model({\r\n    firstname: StringType().isRequired('First Name is required.'),\r\n    lastname: StringType().isRequired('Last Name is required.'),\r\n    email: StringType().isEmail('Please enter a valid email address.').isRequired('Email is required.'),\r\n});","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from './components/Login';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport AuthRenewRoute from './components/AuthRenew/AuthRenewRoute';\r\nimport ProjectBoard from './components/Sprint/ProjectBoard';\r\nimport Projects from './components/Projects';\r\nimport AuthRenewPage from './components/AuthRenew/AuthRenewPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport Profile from \"./components/Profile\";\r\nimport adminPage from \"./components/Admin/adminPage\";\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        <Route path=\"/ResetPassword\" render={() => <ResetPassword />} />\r\n        <PrivateRoute path=\"/myprojects\" component={aaa} />\r\n        <PrivateRoute exact path=\"/projects\" component={Projects} />\r\n        <PrivateRoute exact path=\"/project/:id\" component={ProjectBoard} />\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" component={adminPage} />\r\n        <AuthRenewRoute path=\"/auth\" component={AuthRenewPage} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nlet aaa = () => <div>rere</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}