{"version":3,"sources":["assets/loginPage.svg","utility/utils.js","components/Login.js","assets/passwordRenew.svg","components/ResetPassword.jsx","components/PrivateRoute.js","components/AuthRenew/AuthRenewRoute.js","assets/logo.svg","components/Navbar.jsx","components/Sprint/SubTaskForm.jsx","components/NotFound.jsx","assets/noactivesprint.svg","components/utilitycomponents/Editor.js","assets/gitBranch.svg","assets/pullrequest.svg","components/Sprint/UserStoryTab.jsx","components/Sprint/SprintTable.jsx","assets/createTicket.svg","assets/sprint.svg","assets/nobacklog.svg","components/Sprint/Backlog.jsx","components/Sprint/SprintHistory.jsx","components/Sprint/UserStoryForm.jsx","components/Sprint/SprintForm.jsx","assets/sprintHome.svg","components/Sprint/sprintHome.jsx","components/Sprint/ProjectBoard.jsx","assets/teamsHome.svg","components/Projects.jsx","assets/bio.svg","assets/git.svg","assets/organization.svg","components/AuthRenew/AuthRenewPage.jsx","assets/imagePlaceHolder.svg","components/Profile.jsx","components/Admin/UsersTable.jsx","assets/admin.svg","components/Admin/adminPage.js","App.js","reportWebVitals.js","index.js"],"names":["ADDRESS","FETCH_DATA","api","message","a","token","sessionStorage","getItem","requestOptions","method","headers","Authorization","fetch","response","showNotification","data","status","POST_DATA","body","JSON","stringify","UPDATE_DATA","DELETE_DATA","statusText","msg","json","ok","trim","Notification","success","title","description","style","width","rows","placement","error","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","StringType","Schema","Types","loginModel","Model","email","isRequired","password","TextField","props","name","label","accepter","type","rest","FormGroup","ControlLabel","FormControl","withRouter","useReducer","state","newState","login","users","userLogin","userPass","firstname","resetEmail","show","lastname","setState","util","setItem","access_token","user","userRole","organization","from","pathname","firstLogin","validGitToken","open","resetPassword","emailRegex","match","join","test","String","toLowerCase","useEffect","newUrl","origin","history","pushState","decodeURI","className","display","justifyContent","height","alignContent","alignItems","maxWidth","src","Homeimg","alt","fontSize","fontWeight","lineHeight","marginBottom","color","marginRight","Form","model","onSubmit","onChange","value","Button","appearance","textAlign","textDecoration","cursor","marginTop","marginLeft","onClick","Modal","backdrop","size","onHide","Header","Title","Divider","Body","Input","Footer","disabled","ResetPasswordPage","useState","newpassword","setnewpassword","setconfirmPassword","loading","setloading","changePassword","new_password","authorizeURL","margin","Panel","PasswordRenewSvg","flex","newPassword","addRule","confirmPassword","background","minWidth","PrivateRoute","Component","component","Validated","setValidated","renewAuth","setrenewAuth","isAuthorized","setIsAuthorized","fetchData","render","to","isAuthenticated","setisAuthenticated","CustomNav","active","onSelect","Nav","activeKey","Item","Logo","eventKey","Dropdown","float","removeItem","Navbar","handleSelect","bind","route","this","React","SubTaskForm","selectedCollaborator","setselectedCollaborator","estimatedHours","setestimatedHours","estimatedMinutes","setestimatedMinutes","settitle","setdescription","createUserStory","project_id","acitveSprint","_id","parentId","utils","close","InputPicker","collaborators","map","c","placeholder","InputNumber","postfix","min","max","val","NotFound","FlexboxGrid","colspan","image","Editor","RichTextEditor","createEmptyValue","setvalue","createValueFromString","setText","toString","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","UserStoryTab","activetab","setactivetab","userStory","identifier","newBranchName","setnewBranchName","branchFrom","setbranchFrom","comments","setcomments","comment","setcomment","messagesEndRef","useRef","commits","setcommits","base","setBase","pullRequests","setpullRequests","scrollToBottom","current","scrollIntoView","createBranch","branchName","repo","project","sha","userStoryId","refresh","res","getComments","getBranchCommits","git_branch","offset","findIndex","git_branch_sha","slice","getPullRequests","pullrequests","addComment","document","querySelectorAll","forEach","t","Number","getAttribute","data-index","padding","overflowY","overflowX","borderBottom","ref","borderRadius","git_avatar","created_at","componentClass","onPressEnter","flexWrap","gitBranches","Message","GitBranchImg","flexDirection","b","commit","find","Timeline","endless","h","dot","Icon","icon","timestamp","content","author","avatar_url","committer","moment","date","local","format","html_url","PullRequestImg","pr","borderTop","filter","gb","org","head","STORY_STATES","STATE_COLORS","userStories","setuserStories","showdrawer","setshowdrawer","selectedUserStory","setselectedUserStory","setidentifier","assignedTo","setassignedTo","timeSpentHours","settimeSpentHours","timeSpentMinuts","settimeSpentMinuts","moveToBacklog","setmoveToBacklog","setHistory","showModal","setshowModal","setgitBranches","generateTableCards","tableData","push","d","u","parent_task","sort","localeCompare","changeStoryState","id","getUserStories","sprint","userstories","updateUserStory","assigned_to","estimated_time","time_spent","Object","keys","_body","parseHistory","histories","parsedHisotry","returnContent","attribute","old_value","new_value","element","updated_by","getGitBranches","branches","onDragEnd","result","source","destination","sInd","droppableId","dInd","draggableId","resultSet","droppableSource","droppableDestination","sourceClone","Array","destClone","splice","index","removed","move","el","ind","provided","snapshot","innerRef","minHeight","droppableProps","position","left","top","item","draggableProps","dragHandleProps","isDragging","draggableStyle","childTask","userSelect","grid","border","boxShadow","Tag","NoUserStories","Drawer","Toggle","checkedChildren","unCheckedChildren","borderLeft","Backlog","backlogs","setbacklogs","getBacklogs","moveToActiveSprint","userstory","sprint_id","NoBacklog","PanelGroup","accordion","defaultActiveKey","bordered","header","SprintHistory","UserStoryForm","selectedSprint","setselectedSprint","SprintForm","step","setStep","userStoriesDone","setuserStoriesDone","getUserStoriesDone","estimated","hours","mins","defaultValue","moveto_backlog","nextStep","generateReport","createNewSprint","user_stories","Steps","Table","cellBordered","headerHeight","rowHeight","Column","align","verticalAlign","flexGrow","HeaderCell","Cell","dataKey","ColumnGroup","ButtonGroup","SprintHome","setrepo","selectedUser","setselectedUser","addMemberDrawer","setAddMemberDrawer","getRepo","addMember","user_id","getMembers","homeImg","membersIn","Whisper","trigger","speaker","Popover","Avatar","circle","includes","IconButton","data-div-text","clone_url","data-clipboard-text","membersNotIn","m","ButtonToolbar","NavToggle","expand","pullRight","setcollaborators","setMembersNotIn","setproject","setsprints","homeToggle","setHomeToggle","activeSprintToggle","setactiveSprintToggle","createSprintToggle","setcreateSprintToggle","createUserStoryToggle","setcreateUserStoryToggle","viewBacklogToggle","setviewBacklogToggle","sprintHistoryToggle","setsprintHistoryToggle","setexpand","setActiveSprint","url","useRouteMatch","getSprints","currentSprint","sprints","is_done","getProjectById","getAllUsers","navbarToggleHandler","toggleFunction","Container","Sidebar","collapsible","Sidenav","expanded","defaultOpenKeys","Content","SprintTable","NoActiveSprint","SprintImg","CreateTicket","createProjectDrawerModel","styleCenter","slimText","paddingBottom","titleStyle","whiteSpace","createProjectDrawer","setcreateProjectDrawer","projectName","setprojectName","userProjects","setuserProjects","setUserRole","getProjects","projects","createProject","ProjectSvg","List","hover","overflow","project_lead","AuthRenewPage","setuser","currentPassord","setcurrentPassord","setPosition","phone","setphone","setlocation","authenticating","setAuthenticating","organizations","setorganizations","companyName","setcompanyName","gitOrganization","setgitOrganization","getUserData","first_login","git_token","old_password","updateUserData","checkAuthorization","code","getOrganizations","validateInvite","submitOrganization","role","BioSvg","Gitsvg","OrganizationSvg","currentPassword","styles","update__button","disabled__button","process","block","showIcon","next__button","Profile","editable","seteditable","changeAttribute","setChangeAttribute","openDrawer","setopenDrawer","validImage","setvalidImage","setid","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","onDrop","picture","userTemp","parse","path","main","main__1","main__1__img","ImagePlaceHolder","change__image","main__2","profession","change","info","attribute__container","info__1","info__2","update__password","drawer__body","withIcon","imgExtension","maxFileSize","buttonText","maxHeight","UserRoles","UsersTable","setUsers","selectedRole","setSelectedRole","sortColumn","setSortColumn","setSelectedUser","sortType","setSortType","setOpenDrawer","userStatus","setUserStatus","getUsers","filteredUsers","ImageCell","rowData","TagCell","colour","ProcessCell","percentage","Math","trunc","invitation_accepted","isNaN","Progress","Circle","percent","strokeColor","PassFailIcon","pass","updateUser","x","y","onSortColumn","onRowClick","fixed","sortable","cell","cleanable","checked","adminFunctions","key","AdminPage","setactiveKey","f","function","makeActiveKey","AdminSvg","FunctionCard","AddUserCard","setfirstname","setlastname","setemail","addUser","registerModel","isEmail","App","aaa","exact","Projects","ProjectBoard","adminPage","AuthRenewRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5b2b3358.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loginPage.3890a5c6.svg\";","import { Notification } from 'rsuite';\r\n\r\nconst ADDRESS = 'http://localhost:5000/';\r\n\r\nconst FETCH_DATA = async (api, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return { status: response.status, data }\r\n}\r\n\r\nconst POST_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Access-Control-Expose-Headers': '*',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst UPDATE_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst DELETE_DATA = async (api, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst showNotification = async (response, message) => {\r\n\r\n    let data;\r\n    if(response.statusText === \"Not Found\")\r\n        data = {msg: \"Invalid Request\"};\r\n    else\r\n        data = await response.json();\r\n\r\n    if(message !== \"No Notification\"){\r\n        if (!response.ok) {\r\n            Notification.error({\r\n                title: data.msg ?? 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else if(data.msg || (message && message.trim() !== \"\")){\r\n            Notification.success({\r\n                title: data.msg ?? message,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            })\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nconst getQueryVariable = (variable) => {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split(\"=\");\r\n        if (pair[0] === variable) {\r\n            return pair[1];\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { FETCH_DATA, POST_DATA, UPDATE_DATA, DELETE_DATA, getQueryVariable, ADDRESS };\r\n","import Homeimg from \"../assets/loginPage.svg\";\r\nimport \"../App.css\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Modal, Button, Form, FormGroup, FormControl, ControlLabel, Schema, Notification, Divider, Input\r\n} from 'rsuite';\r\nimport { useReducer, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\n//data validation for login\r\nconst loginModel = Schema.Model({\r\n    email: StringType().isRequired('Email is required.'),\r\n    password: StringType().isRequired('Password is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nfunction Login(props) {\r\n\r\n    const initialState = {\r\n        login: true,\r\n        users: [],\r\n        userLogin: \"\",\r\n        userPass: \"\",\r\n        firstname: \"\",\r\n        resetEmail: \"\",\r\n        show: false,\r\n        lastname: \"\"\r\n    };\r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const [state, setState] = useReducer(reducer, initialState);\r\n\r\n    const login = async (status) => {\r\n        if (status) {\r\n            let body = { email: state.userLogin, password: state.userPass };\r\n            let response = await util.POST_DATA(`auth/login`, body);\r\n            if (response.status === 200) {\r\n                sessionStorage.setItem('sprintCompassToken', response.data.access_token);\r\n                sessionStorage.setItem('sprintCompassUser', response.data.user);\r\n                sessionStorage.setItem('sprintCompassUserName', response.data.name);\r\n                sessionStorage.setItem('sprintCompassUserRole', response.data.userRole);\r\n                sessionStorage.setItem('organization', response.data.organization);\r\n                const { from } = props.location.state || { from: { pathname: '/projects' } }\r\n                if (response.data.firstLogin || !response.data.validGitToken) {\r\n                    window.open(\"/auth\", '_self');\r\n                }\r\n                else {\r\n                    window.open(from.pathname, '_self');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const resetPassword = async () => {\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let resetEmail = state.resetEmail.match(/.{1,29}/g);\r\n        resetEmail = resetEmail.join(' ')\r\n        if (!emailRegex.test(String(state.resetEmail).toLowerCase())) {\r\n            Notification.error({\r\n                title: `Invalid Email`,\r\n                description: <div style={{ width: 220 }} rows={4}> <strong>{resetEmail}</strong> is not a valid email</div>,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let response = await util.FETCH_DATA(`auth/reset_password/${state.resetEmail}`);\r\n            if (response.status === 200) {\r\n                Notification.success({\r\n                    title: `Reset Email Sent`,\r\n                    description: <div style={{ width: 220 }} rows={4}> A reset email has been sent to <br /><strong>{resetEmail}</strong>.</div>,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n        }\r\n\r\n        setState({ show: false, resetEmail: \"\" })\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n        let msg = util.getQueryVariable(\"msg\");\r\n        let error = util.getQueryVariable(\"error\");\r\n        let success = util.getQueryVariable(\"success\");\r\n        let newUrl = window.location.origin + '/login';\r\n        window.history.pushState({}, null, newUrl);\r\n        if(msg) msg = decodeURI(msg)\r\n        if(error){\r\n            Notification.error({\r\n                title: msg ? msg : \"Invalid Url\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        else if(success){\r\n            Notification.success({\r\n                title: \"Password Updated Successfully\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"App\">\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    height: \"900px\",\r\n                    alignContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        style={{ width: \"100%\", maxWidth: \"750px\" }}\r\n                        src={Homeimg}\r\n                        alt=\"homeimg\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <div style={{ width: \"80%\", maxWidth: \"450px\" }}>\r\n                        <div\r\n                            style={{\r\n                                fontSize: \"45px\",\r\n                                fontWeight: \"bold\",\r\n                                lineHeight: \"1.2\",\r\n                                marginBottom: \"100px\",\r\n                            }}\r\n                        >\r\n                            Welcome To\r\n                            <br />\r\n                            <span\r\n                                style={{\r\n                                    color: \"#2D56B3\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            >\r\n                                Sprint\r\n                            </span>\r\n                            <span style={{ color: \"#515B60\" }}>Compass</span>\r\n                        </div>\r\n                        {\r\n                            state.login &&\r\n                            <Form\r\n                                className=\"loginForm\"\r\n                                model={loginModel}\r\n                                onSubmit={(status) => { login(status) }}\r\n                            >\r\n                                <TextField\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    onChange={(value) => setState({ userLogin: value })}\r\n                                />\r\n                                <TextField\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={(value) => setState({ userPass: value })}\r\n                                />\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </Form>\r\n                        }\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                color: \"blue\",\r\n                                textDecoration: \"underline\",\r\n                                fontSize: \"15px\",\r\n                                cursor: \"pointer\",\r\n                                marginTop: 20,\r\n                                marginLeft: \"30%\",\r\n                                width: \"29%\",\r\n                            }}\r\n                            onClick={() => setState({ show: true })}\r\n                        >\r\n                            Forgot Password?\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal backdrop={true} size=\"xs\" show={state.show} onHide={() => setState({ show: false, resetEmail: \"\" })}>\r\n                <Modal.Header >\r\n                    <Modal.Title>Reset Your Password</Modal.Title>\r\n                    <Divider style={{ marginBottom: -10, marginTop: 0 }} />\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Please enter your email to receive a password reset link.</p>\r\n                    <Input\r\n                        style={{ width: \"90%\", marginTop: 10 }}\r\n                        name=\"resetemail\"\r\n                        value={state.resetEmail}\r\n                        onChange={(value) => setState({ resetEmail: value })}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Divider style={{ marginBottom: -5, marginTop: 0 }} />\r\n                    <Button\r\n                        disabled={state.resetEmail?.trim() === \"\"}\r\n                        appearance=\"primary\"\r\n                        style={{ marginLeft: \"25%\", width: \"50%\", marginTop: 10 }}\r\n                        onClick={() => resetPassword()}\r\n                    >\r\n                        Reset Password\r\n\t\t\t\t\t</Button>\r\n                    <Button onClick={() => setState({ show: false, resetEmail: \"\" })} appearance=\"subtle\">\r\n                        Cancel\r\n\t\t\t\t\t</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","export default __webpack_public_path__ + \"static/media/passwordRenew.ce6ee0c2.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PasswordRenewSvg from \"../assets/passwordRenew.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    ControlLabel,\r\n    Schema,\r\n    Panel,\r\n    Button,\r\n} from \"rsuite\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function ResetPasswordPage(props) {\r\n\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [loading, setloading] = useState(true);\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            let body = { new_password: newpassword }\r\n            let response = await util.UPDATE_DATA(`api/users/reset_password`, body, \"No Notification\");\r\n            if (response.status === 200) {\r\n              window.open(\"/login?success=true\", \"_self\");\r\n            } else {\r\n              window.open(\r\n                `/login?error=true&msg=${response.data.msg}`,\r\n                \"_self\"\r\n              );\r\n            }\r\n        }\r\n    };\r\n\t\r\n    useEffect(() => {        \r\n\t\tauthorizeURL();\r\n\t}, []);\r\n\r\n    const authorizeURL = async () => {\r\n        let token = util.getQueryVariable(\"token\");\r\n        if(!token){\r\n            window.open('/login?error=true', '_self')\r\n        }\r\n        else{\r\n            sessionStorage.setItem(\"sprintCompassToken\", token);\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            let response =  await fetch(`${util.ADDRESS}auth/validate_url`, requestOptions);\r\n            if(response.status !== 200){\r\n                let data = await response.json();\r\n                window.open(`/login?error=true&msg=${data.msg}`, '_self')\r\n            }else{                \r\n                setloading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"80%\",\r\n                margin: \"auto\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            {\r\n                !loading &&\r\n                <div style={{ width: \"100%\", height: \"80vh\" }}>\r\n                    <h2 style={{ textAlign: \"center\" }}>Reset Your Password</h2>\r\n                    <hr />\r\n                    <Panel style={{ height: \"60vh\" }}>\r\n                        <section style={{ display: \"flex\", height: \"60vh\" }}>\r\n                            <div\r\n                                style={{\r\n                                    width: \"50%\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    style={{ maxWidth: \"550px\" }}\r\n                                    src={PasswordRenewSvg}\r\n                                    alt=\"passwordrenewimg\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8) return false;\r\n                                                return true;\r\n                                            }, \"Password must be atleast 8 characters long\")\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword) return false;\r\n                                                return true;\r\n                                            }, \"The two passwords do not match\")\r\n                                            .isRequired(\"This field is required.\"),\r\n                                    })}\r\n                                    onSubmit={(status) => {\r\n                                        changePassword(status);\r\n                                    }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"newPassword\"\r\n                                        label=\"New Password\"\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={{\r\n                                            marginTop: \"50px\",\r\n                                            background: \"#193A5A\",\r\n                                            color: \"#f5f5f5\",\r\n                                            minWidth: \"300px\",\r\n                                        }}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </section>\r\n                    </Panel>\r\n                    <hr />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../utility/utils\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n\tconst [Validated, setValidated] = useState(false);\r\n\tconst [renewAuth, setrenewAuth] = useState(false);\r\n\tconst [isAuthorized, setIsAuthorized] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst response = await util.FETCH_DATA(`auth/validate`, \"No Notification\");\r\n\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tsetIsAuthorized(false);\r\n\t\t\t} else if (response.status === 307) {\r\n\t\t\t\tsetrenewAuth(true);\r\n\t\t\t}\r\n\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tif (!Validated) {\r\n\t\treturn <Loader\r\n\t\t\tstyle={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n\t\t\ttype=\"BallTriangle\"\r\n\t\t\tcolor=\"#134069\"\r\n\t\t\theight={50}\r\n\t\t\twidth={50}\r\n\t\t/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tisAuthorized ? (\r\n\t\t\t\t\trenewAuth ? (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/auth\",\r\n\t\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../../utility/utils\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const [isAuthenticated, setisAuthenticated] = useState(false);\r\n    const [isAuthorized, setIsAuthorized] = useState(true);\r\n    const [Validated, setValidated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await util.FETCH_DATA(`auth/authrenew_validate`, \"No Notification\");\r\n            if (response.status === 200) {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(true);\r\n            }\r\n            else if (response.status === 403) {\r\n                setIsAuthorized(false);\r\n            }\r\n            else {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(false);\r\n            }\r\n            setValidated(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (!Validated) {\r\n        return <Loader\r\n            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n            type=\"BallTriangle\"\r\n            color=\"#134069\"\r\n            height={50}\r\n            width={50}\r\n        />\r\n    };\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthorized ? (\r\n                    isAuthenticated ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/projects\",\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","export default __webpack_public_path__ + \"static/media/logo.a451d6d9.svg\";","import React from 'react';\r\nimport { Nav, Dropdown } from 'rsuite';\r\nimport Logo from '../assets/logo.svg';\r\nimport '../styling/nav.css';\r\n\r\nconst CustomNav = ({ active, onSelect, ...props }) => {\r\n    const logout = () => {\r\n        sessionStorage.removeItem('sprintCompassToken');\r\n        sessionStorage.removeItem('sprintCompassUser');\r\n        sessionStorage.removeItem('sprintCompassUserName');\r\n        window.open('/login', '_self');\r\n    }\r\n    return (\r\n        <Nav {...props} activeKey={active} onSelect={onSelect}>\r\n            <Nav.Item style={{ margin: '0 50px' }}>\r\n                <img style={{ width: '80px' }} src={Logo} alt=\"logo\" onClick={() => { window.open('/projects', '_self') }} />\r\n            </Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"projects\">Projects</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"solutions\">Solutions</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"products\">Products</Nav.Item>\r\n            {(sessionStorage.getItem('sprintCompassUserRole') === \"owner\" || sessionStorage.getItem('sprintCompassUserRole') === \"admin\") && (\r\n                <Nav.Item className=\"navHeader\" eventKey=\"admin\">\r\n                    Administrator\r\n                </Nav.Item>\r\n            )}\r\n            <Dropdown\r\n                style={{ float: 'right', marginRight: '30px' }}\r\n                className=\"navHeader\"\r\n                title={sessionStorage.getItem('sprintCompassUserName')}>\r\n                <Dropdown.Item\r\n                    onClick={() => window.open('/profile', '_self')}\r\n                >\r\n                    Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>Settings</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => logout()}>Log Out</Dropdown.Item>\r\n            </Dropdown>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: 'home'\r\n        };\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    handleSelect(activeKey) {\r\n        if (activeKey === \"projects\") window.open(window.location.origin + '/projects', '_self');\r\n        else if (activeKey === \"admin\") window.open(window.location.origin + '/admin', '_self');\r\n    }\r\n\r\n    componentDidMount() {\r\n        let route = window.location.pathname.split('/');\r\n        if (route[1] === 'projects' || route[1] === 'project') {\r\n            this.setState({ active: 'projects' });\r\n        }\r\n        else if (route[1] === 'admin') {\r\n            this.setState({ active: 'admin' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.state;\r\n        return (\r\n            <div>\r\n                <CustomNav appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl } from 'rsuite';\r\nimport utils from \"../../utility/utils\";\r\n\r\nexport default function SubTaskForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n      \r\n            let body = {\r\n                'title': title,\r\n                'description': description,\r\n                'assigned_to': selectedCollaborator,\r\n                'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n                'project_id': props.project_id,\r\n                'sprint_id': props.acitveSprint._id,\r\n                'parent_task': props.parentId\r\n            };\r\n\r\n            let message = 'Subtask Has Been Created';\r\n\r\n            const response = await utils.POST_DATA('api/userstories',body,message);\r\n\r\n            if (response.status === 200) {\r\n                //clear the fields\r\n                setselectedCollaborator(null);\r\n                setestimatedHours(1);\r\n                setestimatedMinutes(0);\r\n                settitle(\"\");\r\n                setdescription(\"\");\r\n\r\n                props.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                onChange={(value) => setdescription(value)}\r\n            />\r\n            <label className=\"rs-control-label\">Assign To </label>\r\n            <InputPicker\r\n                data={props.collaborators.map(c => {\r\n                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                })}\r\n                placeholder=\"Assign To\"\r\n                style={{ width: 400 }}\r\n                value={selectedCollaborator}\r\n                onChange={(value) => setselectedCollaborator(value)}\r\n            />\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 250, marginRight: 10 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 250 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n        </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\n\r\nexport default function NotFound(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"show-grid\">\r\n                <FlexboxGrid style={{ height: props.height ?? 'calc(100vh - 97px)' }}>\r\n                    <FlexboxGrid.Item\r\n                        style={{ margin: 'auto' }}\r\n                        colspan={12}\r\n                    >\r\n                        <img\r\n                            style={{ width: '80%', display: 'block', margin: 'auto' }}\r\n                            src={props.image}\r\n                            alt=\"\"\r\n                        />\r\n                    </FlexboxGrid.Item>\r\n                    <FlexboxGrid.Item\r\n                        colspan={12}\r\n                        style={{ margin: 'auto', textAlign: 'center', fontSize: '22px' }}\r\n                    >\r\n                        {props.msg}\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/noactivesprint.5cfe79e4.svg\";","import React, { useState, useEffect } from 'react'\r\nimport RichTextEditor from 'react-rte';\r\n\r\nexport default function Editor(props) {\r\n    const [value, setvalue] = useState(RichTextEditor.createEmptyValue());\r\n\r\n    useEffect(() => {\r\n        setvalue(RichTextEditor.createValueFromString(props.value, 'html'))\r\n    }, []);\r\n\r\n    const onChange = (value) => {\r\n        setvalue(value);\r\n        props.setText(value.toString('html'));\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <RichTextEditor\r\n                value={value}\r\n                onChange={onChange}\r\n                toolbarConfig={toolbarConfig}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst toolbarConfig = {\r\n    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n    INLINE_STYLE_BUTTONS: [\r\n        { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\r\n        { label: 'Italic', style: 'ITALIC' },\r\n        { label: 'Underline', style: 'UNDERLINE' }\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n        { label: 'Text', style: 'unstyled' },\r\n        { label: 'Heading', style: 'header-four' },\r\n        { label: 'Code', style: 'code-block' },\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n        { label: 'UL', style: 'unordered-list-item' },\r\n        { label: 'OL', style: 'ordered-list-item' }\r\n    ]\r\n};","export default __webpack_public_path__ + \"static/media/gitBranch.b53578eb.svg\";","export default __webpack_public_path__ + \"static/media/pullrequest.8d345ce7.svg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport GitBranchImg from '../../assets/gitBranch.svg';\r\nimport PullRequestImg from '../../assets/pullrequest.svg';\r\nimport { InputPicker, Input, Button, Notification, Message, Timeline, Icon } from 'rsuite';\r\nimport './userstorytab.css';\r\nimport utils from \"../../utility/utils\";\r\nimport moment from 'moment';\r\n\r\nfunction UserStoryTab(props) {\r\n\r\n    const [activetab, setactivetab] = useState(0);\r\n    const [newBranchName, setnewBranchName] = useState(props.userStory.identifier);\r\n    const [branchFrom, setbranchFrom] = useState(null);\r\n    const [comments, setcomments] = useState([]);\r\n    const [comment, setcomment] = useState('');\r\n    const messagesEndRef = useRef(null)\r\n    const [commits, setcommits] = useState([]);\r\n    const [base, setBase] = useState(null);\r\n    const [pullRequests, setpullRequests] = useState([]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView(true);\r\n    }\r\n\r\n    let createBranch = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ branchName: newBranchName, repo: props.project.repo, sha: branchFrom, userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/git/createBranch`, requestOptions);\r\n        if (response.status === 200) {\r\n            setactivetab(0);\r\n            props.refresh();\r\n            Notification.success({\r\n                title: 'Branch Has Been Created',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let res = await response.json();\r\n            Notification.error({\r\n                title: res.msg,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    const getComments = async () => {\r\n        let response = await utils.FETCH_DATA(`api/userstories/comments/${props.userStory._id}`);\r\n        setcomments(response.data.comments);\r\n    }\r\n\r\n    const getBranchCommits = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getCommitsByBranch?repo=${props.project.repo}&sha=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            let commits = response.data.commits.data;\r\n            if (commits) {\r\n                let offset = commits.findIndex(c => c.sha === props.userStory.git_branch_sha);\r\n                setcommits(commits.slice(0, offset));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPullRequests = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getPullRequestByBranch?repo=${props.project.repo}&head=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            setpullRequests(response.data.pullrequests.data);\r\n        }\r\n    }\r\n\r\n\r\n    const addComment = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ 'body': comment, user: sessionStorage.getItem('sprintCompassUser'), userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/userstories/addComment`, requestOptions);\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setcomments(data.comments);\r\n            setcomment('');\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: data.msg ?? 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tabs = document.querySelectorAll('.us__tabs>div');\r\n        tabs.forEach(t => {\r\n            let [background] = ['#e6e6e6'];\r\n            if (activetab === Number(t.getAttribute('data-index'))) {\r\n                background = '#193A5A';\r\n            }\r\n            t.style['border-bottom'] = `3px solid ${background}`;\r\n        })\r\n\r\n        activetab === 0 && scrollToBottom();\r\n\r\n    }, [activetab, commits])\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n        if (props.userStory.git_branch_sha) {\r\n            getBranchCommits();\r\n            getPullRequests();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [comments])\r\n\r\n    return (\r\n        <section style={{ height: '100%', background: '#f9f9f9' }}>\r\n            <section className='us__tabs'>\r\n                <div data-index='0' onClick={() => setactivetab(0)}>Comments</div>\r\n                {\r\n                    !props.userStory.git_branch &&\r\n                    <div data-index='1' onClick={() => setactivetab(1)}>Github Branch</div>\r\n                }\r\n                <div data-index='2' onClick={() => setactivetab(2)}>History</div>\r\n                <div data-index='3' onClick={() => setactivetab(3)}>Commits</div>\r\n                {\r\n                    props.userStory.git_branch && <div data-index='4' onClick={() => setactivetab(4)}>Pull Request</div>\r\n                }\r\n            </section>\r\n            {\r\n                activetab === 0 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '86%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            comments.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No comments found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            comments.map((c, i) => {\r\n                                return <section\r\n                                    style={{ display: 'flex', width: '100%', margin: '10px 0', borderBottom: '1px solid #e6e6e6', padding: '15px' }}\r\n                                    key={i}\r\n                                    ref={comments.length - 1 === i ? messagesEndRef : null}\r\n                                >\r\n                                    <div style={{ width: '100px' }}>\r\n                                        <img\r\n                                            style={{ width: '55px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.user.git_avatar}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ width: '80%' }}>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: 600, marginRight: '10px' }}>\r\n                                                {`${c.user.firstname} ${c.user.lastname}`}\r\n                                            </span>\r\n                                            <span style={{ float: 'right' }}>\r\n                                                {c.created_at}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div style={{ marginTop: '5px' }}>\r\n                                            {c.body}\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                        <div ref={messagesEndRef} />\r\n                    </section>\r\n                    <section style={{ height: '14%' }}>\r\n                        <Input\r\n                            onChange={(val) => setcomment(val)}\r\n                            componentClass=\"textarea\"\r\n                            value={comment}\r\n                            rows={3}\r\n                            placeholder=\"Add a Comment\"\r\n                            onPressEnter={() => addComment()}\r\n                        />\r\n                        <Button\r\n                            onClick={() => addComment()}\r\n                            disabled={!comment}\r\n                            appearance='primary'\r\n                            style={{ width: '100px', marginTop: '20px', float: 'right' }}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 1 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', height: '90%', flexWrap: 'wrap', overflowY: 'hidden' }}>\r\n\r\n                    {\r\n                        props.gitBranches.length === 0 &&\r\n                        <Message\r\n                            type=\"info\"\r\n                            title=\"Empty Repository\"\r\n                            description={\r\n                                <p>You cannot create branch for an empty repo </p>\r\n                            }\r\n                        />\r\n                    }\r\n                    {\r\n                        !props.userStory.git_branch && props.gitBranches.length > 0 &&\r\n                        <>\r\n                            <div style={{ textAlign: 'center', fontSize: '18px', fontWeight: 'bold', width: '100%', marginBottom: '100px' }}>\r\n                                Create Github Branch\r\n                            </div>\r\n                            <section style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section style={{ flex: 1 }}>\r\n                                    <img style={{ width: '80%', margin: 'auto', display: 'block' }} src={GitBranchImg} alt=\"gitbranch\" />\r\n                                </section>\r\n                                <section style={{ flex: 1, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                    <div>\r\n                                        <div style={{ margin: '5px' }}>Branch Out From</div>\r\n                                        <InputPicker\r\n                                            data={props.gitBranches.map((b, i) => {\r\n                                                return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                            })}\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Branch From'\r\n                                            onChange={(value) => {\r\n                                                if (!!value) setbranchFrom(props.gitBranches.find(b => b.name === value).commit.sha);\r\n                                                else\r\n                                                    setbranchFrom(null);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginTop: '15px' }}>\r\n                                        <div style={{ margin: '5px' }}>Branch Name</div>\r\n                                        <Input\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Name'\r\n                                            onChange={(val) => setnewBranchName(val)}\r\n                                            value={newBranchName}\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        style={{ marginTop: '20px', width: 224 }}\r\n                                        appearance=\"primary\"\r\n                                        disabled={newBranchName === '' || !!!branchFrom}\r\n                                        onClick={() => createBranch()}\r\n                                    >\r\n                                        Create Branch\r\n                                    </Button>\r\n                                </section>\r\n                            </section>\r\n                        </>\r\n                    }\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 2 &&\r\n                <section\r\n                    style={{ width: '100%', height: '90%', padding: '30px', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    className=\"scrollable\"\r\n                >\r\n                    <Timeline endless className=\"custom-timeline\" >\r\n                        {\r\n                            props.history.map(h => {\r\n                                return <Timeline.Item\r\n                                    dot={\r\n                                        <Icon\r\n                                            icon=\"check\"\r\n                                            size=\"2x\"\r\n                                            style={{ background: '#1A3B5A', color: '#fff' }}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <p>{h.timestamp}</p>\r\n                                    <p>{h.user}</p>\r\n                                    <p style={{ fontWeight: 600 }}>{h.content}</p>\r\n                                </Timeline.Item>\r\n                            })\r\n                        }\r\n                    </Timeline>\r\n                </section>\r\n\r\n            }\r\n            {\r\n                activetab === 3 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '100%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            commits.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No commits found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            commits.map((c, i) => {\r\n                                return <section\r\n                                    style={{ padding: '15px 0', display: 'flex', width: '100%', borderBottom: '1px solid #e6e6e6' }}\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <img\r\n                                            style={{ width: '60px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.author.avatar_url}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span style={{ fontWeight: 600 }}>\r\n                                            {`${c.committer.login}`}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {c.commit.message}\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {moment(c.commit.author.date).local().format('YYYY/MM/DD HH:mm:ss')}\r\n                                    </div>\r\n                                    <div style={{ flex: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span\r\n                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                            onClick={() => window.open(c.html_url, '_blank')}\r\n                                        >\r\n                                            View\r\n                                        </span>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 4 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', width: '100%', flexWrap: 'wrap' }}>\r\n                    <section style={{ width: '100%', height: '40vh', display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '20px' }}>\r\n                        <img\r\n                            style={{ height: '80%' }}\r\n                            src={PullRequestImg}\r\n                            alt=\"gitbranch\"\r\n                        />\r\n                    </section>\r\n                    {\r\n                        commits.length > 0 ?\r\n                            <>\r\n                                {\r\n                                    pullRequests.length > 0 &&\r\n                                    <div style={{ marginTop: '30px', width: '100%' }}>\r\n                                        {\r\n                                            pullRequests.map((pr, i) => {\r\n                                                return <section key={i}\r\n                                                    style={{\r\n                                                        display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n                                                        width: '90%', margin: 'auto', textAlign: 'left', borderTop: '1px solid #e6e6e6',\r\n                                                        borderBottom: '1px solid #e6e6e6', padding: '20px 0'\r\n                                                    }}>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <img src={pr.user.avatar_url} alt='git_avatar' style={{ width: '50px', borderRadius: '50%' }} />\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Created By</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>\r\n                                                            {pr.user.login}\r\n                                                        </div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.title}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request to</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.base.ref}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.75' }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Status</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.state}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <div\r\n                                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                                            onClick={() => window.open(pr.html_url, '_blank')}\r\n                                                        >\r\n                                                            View\r\n                                                    </div>\r\n                                                    </section>\r\n                                                </section>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    pullRequests.length === 0 &&\r\n                                    <section style={{ width: '100%', padding: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                        <div style={{ width: '100%', display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                                            <div style={{ width: '100%', textAlign: 'center', margin: '5px 0' }}>Base Branch</div>\r\n                                            <InputPicker\r\n                                                data={\r\n                                                    props.gitBranches.filter(gb => gb.name !== props.userStory.git_branch)\r\n                                                        .map((b, i) => {\r\n                                                            return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                                        })\r\n                                                }\r\n                                                style={{ width: 224 }}\r\n                                                placeholder='Base Branch'\r\n                                                onChange={(value) => setBase(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <Button\r\n                                            style={{ marginTop: '20px', width: 224 }}\r\n                                            appearance=\"primary\"\r\n                                            disabled={!!!base}\r\n                                            onClick={() => {\r\n                                                let org = sessionStorage.getItem(\"organization\");\r\n                                                let repo = props.project.repo;\r\n                                                let head = props.userStory.git_branch;\r\n                                                window.open(`https://github.com/${org}/${repo}/compare/${base}...${head}`, '_blank')\r\n                                            }}\r\n                                        >\r\n                                            Create Pull Request\r\n                                        </Button>\r\n                                    </section>\r\n                                }\r\n                            </>\r\n                            : <div>No commits found to make a pull request</div>\r\n                    }\r\n                </section>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserStoryTab\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport utils from \"../../utility/utils\";\r\nimport {\r\n    Drawer, Icon, InputNumber, Button, Toggle, Tag,\r\n    Input, InputPicker, FlexboxGrid, Modal\r\n} from 'rsuite';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport NoUserStories from \"../../assets/noactivesprint.svg\";\r\nimport Editor from \"../utilitycomponents/Editor\";\r\nimport UserStoryTab from \"./UserStoryTab\";\r\n\r\n//four states of the stories, has to match the db\r\nconst STORY_STATES = [\"To Do\", \"In Progress\", \"Testing\", \"Done\"];\r\nconst STATE_COLORS = [\"#01949A\", \"#2196F3\", \"#134069\", \"#4CAF50\"];\r\n\r\n\r\n/*Moves an item from one list to another list.*/\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, childTask) => ({\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: childTask ? `0 0 ${grid}px 20px` : `0 0 ${grid}px 0`,\r\n    borderRadius: '10px',\r\n    // change background colour if dragging\r\n    background: isDragging ? \"#f5f5f5\" : \"#ffffff\",\r\n    border: \"1px solid #e6e6e6\",\r\n    cursor: 'pointer',\r\n    boxShadow: \"0 2px 5px #e6e6e6\",\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (length) => ({\r\n    padding: grid,\r\n    width: 350,\r\n    minHeight: length === 0 ? \"100px\" : \"75vh\",\r\n    margin: \"0 10px\"\r\n});\r\n\r\nfunction Sprint(props) {\r\n\r\n    const [state, setState] = useState(null);\r\n    const [userStories, setuserStories] = useState([]);\r\n    const [showdrawer, setshowdrawer] = useState(false);\r\n    const [selectedUserStory, setselectedUserStory] = useState(null);\r\n\r\n    const [identifier, setidentifier] = useState(\"\");\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [assignedTo, setassignedTo] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(null);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(null);\r\n    const [timeSpentHours, settimeSpentHours] = useState(null);\r\n    const [timeSpentMinuts, settimeSpentMinuts] = useState(null);\r\n    const [moveToBacklog, setmoveToBacklog] = useState(null);\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const [showModal, setshowModal] = useState(false);\r\n\r\n    const [gitBranches, setgitBranches] = useState([]);\r\n\r\n    function onDragEnd(result) {\r\n\r\n        const { source, destination } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        const sInd = +source.droppableId;\r\n        const dInd = +destination.droppableId;\r\n\r\n        if (sInd === dInd) {\r\n            return;\r\n        } else {\r\n            //change the state in the database\r\n            changeStoryState(result.draggableId, STORY_STATES[destination.droppableId]);\r\n\r\n            const resultSet = move(state[sInd], state[dInd], source, destination);\r\n            const newState = [...state];\r\n            newState[sInd] = resultSet[sInd];\r\n            newState[dInd] = resultSet[dInd];\r\n\r\n            newState.forEach(t => {\r\n                t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n            })\r\n\r\n            setState(newState);\r\n        }\r\n    }\r\n\r\n    const generateTableCards = (data) => {\r\n        let tableData = [];\r\n        tableData.push(data.filter(d => d.state === \"To Do\"));\r\n        tableData.push(data.filter(d => d.state === \"In Progress\"));\r\n        tableData.push(data.filter(d => d.state === \"Testing\"));\r\n        tableData.push(data.filter(d => d.state === \"Done\"));\r\n\r\n        tableData.forEach(t => {\r\n            t.forEach(u => {\r\n                if (u.parent_task) {\r\n                    u.identifier = `${u.parent_task.identifier}/${u.identifier}`\r\n                }\r\n            })\r\n            t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n        })\r\n\r\n        setState(tableData);\r\n    }\r\n\r\n    const changeStoryState = async (id, state) => {\r\n        \r\n        let body = { _id: id, state };\r\n        const response = await utils.UPDATE_DATA(`api/userstories`, body);\r\n        if (response.status === 200) getUserStories();\r\n    }\r\n\r\n    const getUserStories = async () => {\r\n        const response = await utils.FETCH_DATA(`api/userstories/bySprint/${props.sprint._id}`);\r\n        if (response.status === 200) {\r\n            let data = response.data;\r\n            generateTableCards(data.userstories)\r\n            setuserStories(data.userstories);\r\n            if (!!selectedUserStory) {\r\n                setselectedUserStory(data.userstories.find(u => u._id === selectedUserStory._id));\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateUserStory = async () => {\r\n        let body = {};\r\n\r\n        /*checking what has changed*/\r\n\r\n        //checking if title has changed\r\n        if (title !== selectedUserStory.title) {\r\n            body['title'] = title;\r\n        }\r\n\r\n        //checking if title has changed\r\n        if (description !== selectedUserStory.description) {\r\n            body['description'] = description;\r\n        }\r\n\r\n        //checking if description has changed\r\n        if (assignedTo !== selectedUserStory.assigned_to?._id) {\r\n            body['assigned_to'] = assignedTo;\r\n        }\r\n\r\n        //checking if estimated time has changed\r\n        if (estimatedHours !== selectedUserStory.estimated_time.split(',')[0] ||\r\n            estimatedMinutes !== selectedUserStory.estimated_time.split(',')[1]\r\n        ) {\r\n            body['estimated_time'] = `${estimatedHours},${estimatedMinutes}`;\r\n        }\r\n\r\n        //checking if timespent has changed\r\n        if (timeSpentHours !== selectedUserStory.time_spent?.split(',')[0] ||\r\n            timeSpentMinuts !== selectedUserStory.time_spent?.split(',')[1]\r\n        ) {\r\n            if (timeSpentHours !== \"0\" || timeSpentMinuts !== \"0\") {\r\n                body['time_spent'] = `${timeSpentHours},${timeSpentMinuts}`;\r\n            }\r\n        }\r\n\r\n        //checking if the userstory needs to be moved to backlog\r\n        if (moveToBacklog) {\r\n            body['moveto_backlog'] = true;\r\n        }\r\n        if (Object.keys(body).length === 0) {\r\n            setshowdrawer(false);\r\n            return;\r\n        }\r\n\r\n        body['_id'] = selectedUserStory._id;\r\n        let message = 'User Story Has Been Updated';\r\n        let _body = body;\r\n\r\n        await utils.UPDATE_DATA(`api/userstories`,_body,message);\r\n        setshowdrawer(false);\r\n        getUserStories();\r\n    }\r\n\r\n    let parseHistory = async (histories) => {\r\n\r\n        let parsedHisotry = histories.map((history) => {\r\n            let returnContent = '';\r\n            if (history.attribute === \"user_story\") {\r\n                returnContent = `Created the task`\r\n            }\r\n            else if (history.attribute === \"description\")\r\n                returnContent = `Updated Description`\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed state from \"${history.old_value}\" to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"title\")\r\n                returnContent = `Updated Title to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"assigned_to\") {\r\n                let assigned_to = props.collaborators.find(element => element._id === history.new_value);\r\n                returnContent = assigned_to ? `Changed Assiginee to ${assigned_to.firstname} ${assigned_to.lastname}` : `Unassigned`;\r\n            }\r\n            else if (history.attribute === \"estimated_time\")\r\n                returnContent = `Re-estimated the task to be completed in ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"time_spent\")\r\n                returnContent = `Increased the time stpent to ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed State from ${history.old_value} to ${history.new_value}`\r\n\r\n            else if (history.attribute === \"moveto_backlog\")\r\n                returnContent = `Moved task to backlog.`\r\n\r\n            else if (history.attribute === \"sprint_id\")\r\n                returnContent = `Moved task to sprint ${history.new_value}`\r\n\r\n            let user = props.collaborators.find(element => element._id === history.updated_by);\r\n\r\n            return { 'timestamp': history.timestamp, 'content': returnContent, 'user': `${user?.firstname} ${user?.lastname}` };\r\n        })\r\n\r\n        setHistory(parsedHisotry);\r\n    }\r\n\r\n    const getGitBranches = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getAllBranches/${props.project.repo}`);\r\n        if (response.status === 200) {\r\n            let data = response.data.branches.data;\r\n            setgitBranches(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserStories();\r\n        getGitBranches();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !state ?\r\n                    <div style={{ height: '80vh' }}>\r\n                        <Loader\r\n                            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                            type=\"ThreeDots\"\r\n                            color=\"#134069\"\r\n                            height={50}\r\n                            width={50}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"100px 0 10px 0\" }}>\r\n                            <DragDropContext onDragEnd={onDragEnd}>\r\n                                {state.map((el, ind) => (\r\n                                    <Droppable key={ind} droppableId={`${ind}`}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                style={getListStyle(userStories.length)}\r\n                                                {...provided.droppableProps}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        padding: '20px',\r\n                                                        margin: '10px 0',\r\n                                                        color: '#575757',\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: '18px',\r\n                                                        borderTop: `7px solid ${STATE_COLORS[ind]}`,\r\n                                                        position: 'relative'\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        /*not a best practice, doing this for the looks */\r\n                                                        ind === 0 &&\r\n                                                        <div style={{ position: 'absolute', fontSize: '23px', fontWeight: '700', left: 0, top: -80 }}>\r\n                                                            Sprint - {props.sprint.name}\r\n                                                        </div>\r\n                                                    }\r\n                                                    {STORY_STATES[ind]}\r\n                                                </div>\r\n                                                {el.map((item, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Draggable\r\n                                                            key={item._id}\r\n                                                            draggableId={String(item._id)}\r\n                                                            index={index}\r\n                                                        >\r\n                                                            {(provided, snapshot) => (\r\n                                                                <div\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    {...provided.dragHandleProps}\r\n                                                                    style={getItemStyle(\r\n                                                                        snapshot.isDragging,\r\n                                                                        provided.draggableProps.style,\r\n                                                                        !!item.parent_task\r\n                                                                    )}\r\n                                                                    onClick={() => {\r\n                                                                        setshowdrawer(true);\r\n                                                                        setselectedUserStory(item);\r\n                                                                        parseHistory(item.history);\r\n                                                                        setidentifier(item.identifier);\r\n                                                                        settitle(item.title);\r\n                                                                        setdescription(item.description);\r\n                                                                        setassignedTo(item.assigned_to?._id);\r\n                                                                        setestimatedHours(item.estimated_time?.split(',')[0]);\r\n                                                                        setestimatedMinutes(item.estimated_time?.split(',')[1]);\r\n                                                                        settimeSpentHours(item.time_spent ? item.time_spent.split(',')[0] : \"0\");\r\n                                                                        settimeSpentMinuts(item.time_spent ? item.time_spent.split(',')[1] : \"0\");\r\n                                                                        setmoveToBacklog(false);\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div>\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <Tag\r\n                                                                                style={{ color: '#f5f5f5', fontWeight: '600', marginBottom: '10px', background: STATE_COLORS[ind] }}\r\n                                                                            >\r\n                                                                                {item.title}\r\n                                                                            </Tag>\r\n\r\n                                                                            <Tag style={{ fontWeight: '600', marginBottom: '10px', background: '#ececec' }}>\r\n                                                                                {item.identifier}\r\n                                                                            </Tag>\r\n                                                                        </div>\r\n                                                                        <div style={{ marginTop: \"15px\" }}>\r\n                                                                            <Icon\r\n                                                                                icon=\"user-circle-o\"\r\n                                                                                style={{ marginRight: '5px' }}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                item.assigned_to ? `${item.assigned_to.firstname} ${item.assigned_to.lastname}` : 'Unassigned'\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    </div>\r\n                                                ))}\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n                                ))}\r\n                            </DragDropContext>\r\n                        </div>\r\n                        {\r\n                            userStories.length === 0 &&\r\n                            <NotFound\r\n                                msg=\"No User Stories Found\"\r\n                                image={NoUserStories}\r\n                                height=\"300px\"\r\n                            />\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n            <Drawer\r\n                show={showdrawer}\r\n                onHide={() => {\r\n                    setshowdrawer(false);\r\n                    setselectedUserStory(null);\r\n                }}\r\n                style={{ width: '100%' }}\r\n            >\r\n                <Drawer.Header>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    {\r\n                        !!selectedUserStory &&\r\n                        <div style={{ display: 'flex', height: '100%', justifyContent: 'space-between' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '40%',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'start',\r\n                                    height: '100%',\r\n                                    flexWrap: 'wrap',\r\n                                    marginLeft: '30px',\r\n                                    textAlign: 'left'\r\n                                }}>\r\n                                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px', width: '100%' }}>\r\n                                    <Icon icon=\"task\" size=\"2x\" />\r\n                                    <h3 style={{ color: '#193A5A', marginLeft: '15px' }}>{identifier}</h3>\r\n                                    <Button\r\n                                        appearance=\"default\"\r\n                                        style={{ background: '#e6e6e6', marginLeft: 'auto' }}\r\n                                        onClick={() => setshowModal(true)}\r\n                                    >\r\n                                        Create Subtask\r\n                                    </Button>\r\n                                </div>\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Title</p>\r\n                                <Input\r\n                                    style={{ fontSize: '20px', width: '100%', fontWeight: 'bold' }}\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Description</p>\r\n                                <Editor\r\n                                    setText={(value) => setdescription(value)}\r\n                                    value={description}\r\n                                />\r\n                                <FlexboxGrid style={{ width: '100%', marginTop: '50px' }}>\r\n                                    <FlexboxGrid.Item colspan={12}>\r\n                                        <p style={{ width: '100%', margin: '0 0 5px 15px', fontWeight: '600' }}>Assigned To</p>\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <InputPicker\r\n                                                data={props.collaborators.map(c => {\r\n                                                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                                                })}\r\n                                                placeholder=\"Assign To\"\r\n                                                style={{ padding: \"5px 0\", maxWidth: '310px', marginLeft: '12px' }}\r\n                                                value={assignedTo}\r\n                                                onChange={(value) => setassignedTo(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Github Branch</p>\r\n                                        <div\r\n                                            style={{ margin: \"0 15px\" }}\r\n                                        >\r\n                                            {selectedUserStory.git_branch}\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Move to Backlog</p>\r\n                                        <Toggle\r\n                                            style={{ margin: \"0 12px\" }}\r\n                                            checkedChildren={<Icon icon=\"check\" />}\r\n                                            unCheckedChildren={<Icon icon=\"close\" />}\r\n                                            value={moveToBacklog}\r\n                                            onChange={(val) => setmoveToBacklog(val)}\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item\r\n                                        colspan={12}\r\n                                    >\r\n                                        <p style={{ width: '100%', margin: '0px 0 5px 15px', fontWeight: '600' }}>Estimated Time</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={estimatedHours ?? 0}\r\n                                                onChange={(val) => setestimatedHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={estimatedMinutes ?? 0}\r\n                                                onChange={(val) => setestimatedMinutes(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Time Spent</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={timeSpentHours ?? 0}\r\n                                                onChange={(val) => settimeSpentHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={timeSpentMinuts ?? 0}\r\n                                                onChange={(val) => settimeSpentMinuts(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                                <div style={{ height: '1px', width: '100%', background: '#e6e6e6', margin: '30px 0' }} />\r\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button\r\n                                        appearance=\"primary\"\r\n                                        style={{ width: '250px' }}\r\n                                        onClick={() => updateUserStory()}\r\n                                    >\r\n                                        Update User Story\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ width: '55%', borderLeft: '1px solid #e6e6e6' }}>\r\n                                <UserStoryTab\r\n                                    gitBranches={gitBranches}\r\n                                    project={props.project}\r\n                                    userStory={selectedUserStory}\r\n                                    refresh={() => getUserStories()}\r\n                                    history={history}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Drawer.Body>\r\n            </Drawer>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                overflowY={false}\r\n                onHide={() => setshowModal(false)}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Create Subtask</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <SubTaskForm\r\n                        project_id={props.project_id}\r\n                        acitveSprint={props.sprint}\r\n                        collaborators={props.collaborators}\r\n                        parentId={selectedUserStory?._id}\r\n                        close={() => {\r\n                            setshowModal(false);\r\n                            getUserStories();\r\n                        }}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Sprint);\r\n","export default __webpack_public_path__ + \"static/media/createTicket.ea7c0d8a.svg\";","export default __webpack_public_path__ + \"static/media/sprint.30c319a6.svg\";","export default __webpack_public_path__ + \"static/media/nobacklog.e26594b8.svg\";","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button, FlexboxGrid, PanelGroup, Panel } from 'rsuite';\r\nimport NotFound from \"../NotFound\";\r\nimport NoBacklog from \"../../assets/nobacklog.svg\";\r\nimport utils from \"../../utility/utils\"\r\n\r\n\r\nexport default function Backlog(props) {\r\n\r\n    const [backlogs, setbacklogs] = useState([]);\r\n\r\n    const getBacklogs = async () => {\r\n        const response = await utils.FETCH_DATA(`api/userstories/backlogs/${props.project_id}`);\r\n        let data = await response.data;\r\n        setbacklogs(data.userstories);\r\n    }\r\n\r\n    const moveToActiveSprint = async (userstory) => {\r\n        let body = {};\r\n        body._id = userstory._id;\r\n        body.sprint_id = props.acitveSprint._id;\r\n        let message ='User Story Has Been Moved to the Active Sprint';\r\n        let _body = body;\r\n        const response = await utils.UPDATE_DATA(`api/userstories`, _body, message);\r\n        //if updated\r\n        if (response.status === 200) {\r\n            getBacklogs();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBacklogs();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                backlogs.length === 0 ?\r\n                    <NotFound\r\n                        image={NoBacklog}\r\n                        msg=\"So empty!\"\r\n                    />\r\n                    :\r\n                    <div style={{ margin: '50px auto', width: '80%' }}>\r\n                        <PanelGroup accordion defaultActiveKey={null} bordered>\r\n                            {\r\n                                backlogs.map((b, i) => {\r\n                                    return <Panel key={i} header={b.title} eventKey={i + 1}>\r\n                                        <FlexboxGrid style={{ minHeight: '300px' }}>\r\n                                            <FlexboxGrid.Item colspan={12}>\r\n                                                <div>\r\n                                                    <div\r\n                                                        style={{ fontSize: '20px', fontWeight: 'bold', margin: '10px 0' }}\r\n                                                    >\r\n                                                        {b.title}\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{ padding: '20px', background: '#f5f5f5', height: '250px', overflowY: 'auto' }}\r\n                                                    >\r\n                                                        {b.description}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item colspan={12} style={{ height: '300px' }}>\r\n                                                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                                                    <Button\r\n                                                        style={{ padding: '20px', color: '#f5f5f5', background: '#134069' }}\r\n                                                        disabled={!!!props.acitveSprint}\r\n                                                        onClick={() => moveToActiveSprint(b)}\r\n                                                    >\r\n                                                        Move To Active Sprint\r\n                                                </Button>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </Panel>\r\n                                })\r\n                            }\r\n                        </PanelGroup>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SprintHistory() {\r\n    return (\r\n        <div>\r\n            Hello World\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl } from 'rsuite';\r\nimport  util  from '../../utility/utils';\r\n\r\nexport default function UserStoryForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [selectedSprint, setselectedSprint] = useState(null);\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n    \r\n        let message = \"User Story Has Been Created\";\r\n        let body = {\r\n            'title': title,\r\n            'description': description,\r\n            'assigned_to': selectedCollaborator,\r\n            'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n            'sprint_id': selectedSprint === -1 ? null : selectedSprint,\r\n            'project_id': props.project_id\r\n        };\r\n            await util.POST_DATA('api/userstories', body,message);\r\n                //clear the fields\r\n                setselectedCollaborator(null);\r\n                setestimatedHours(1);\r\n                setestimatedMinutes(0);\r\n                settitle(\"\");\r\n                setdescription(\"\");\r\n                setselectedSprint(null);\r\n        }\r\n    }\r\n\r\n    const getDestinationDropDownVal = () => {\r\n        if (props.acitveSprint)\r\n            return [\r\n                { \"label\": props.acitveSprint.name, \"value\": props.acitveSprint._id },\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n        else\r\n            return [\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                onChange={(value) => setdescription(value)}\r\n            />\r\n            <label className=\"rs-control-label\">Assign To </label>\r\n            <InputPicker\r\n                data={props.collaborators.map(c => {\r\n                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                })}\r\n                placeholder=\"Assign To\"\r\n                style={{ width: 400 }}\r\n                value={selectedCollaborator}\r\n                onChange={(value) => setselectedCollaborator(value)}\r\n            />\r\n\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\"\r\n            >\r\n                Select a Destination\r\n            </label>\r\n            <InputPicker\r\n                data={getDestinationDropDownVal()}\r\n                placeholder=\"Destination\"\r\n                style={{ width: 400 }}\r\n                value={selectedSprint}\r\n                onChange={(value) => setselectedSprint(value)}\r\n            />\r\n\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 250, marginRight: 10 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 250 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport utils from \"../../utility/utils\";\r\nimport {\r\n    InputNumber, Button, Form, FormGroup, ControlLabel, FormControl,\r\n    Table, Toggle, Steps, Panel, ButtonGroup\r\n} from 'rsuite';\r\n\r\n\r\nexport default function SprintForm(props) {\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [step, setStep] = useState(0);\r\n    const [userStoriesDone, setuserStoriesDone] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!!props.acitveSprint)\r\n            getUserStoriesDone();\r\n    }, []);\r\n\r\n    const getUserStoriesDone = async () => {\r\n        const response = await utils.FETCH_DATA(`api/userstories/unfinishedTask/${props.acitveSprint._id}`);\r\n        let data = await response.data;\r\n        let tableData = [];\r\n        data.userstories.forEach((d, i) => {\r\n            let estimated = d.estimated_time.split(',');\r\n            tableData.push({\r\n                \"story\": d.identifier,\r\n                \"estimated_hours\": estimated[0],\r\n                \"estimated_mins\": estimated[1],\r\n                \"re_estimated_hours\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].hours = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={50}\r\n                    min={0}\r\n                />,\r\n                \"re_estimated_mins\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].mins = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={59}\r\n                    min={0}\r\n                    defaultValue={0}\r\n                />,\r\n                \"move_to_backlog\": <Toggle\r\n                    onChange={(val) => {\r\n                        tableData[i].moveto_backlog = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                />,\r\n                \"moveto_backlog\": false,\r\n                \"hours\": 0,\r\n                \"mins\": 0,\r\n                \"id\": d._id\r\n            });\r\n        });\r\n        setuserStoriesDone(tableData);\r\n    }\r\n\r\n    const onChange = nextStep => {\r\n        setStep(nextStep < 0 ? 0 : nextStep > 3 ? 3 : nextStep);\r\n    };\r\n\r\n    const onNext = () => {\r\n        if (!title || !description) return;\r\n        if (step === 1 && userStoriesDone.find(u => Number(u.hours) === 0 && Number(u.mins) === 0)) {\r\n            return;\r\n        }\r\n        onChange(step + 1);\r\n    }\r\n\r\n    const onPrevious = () => onChange(step - 1);\r\n\r\n    const generateReport = async () => {\r\n        //generate report\r\n        return;\r\n    }\r\n\r\n    const createNewSprint = async () => {\r\n        let user_stories = [];\r\n        userStoriesDone.forEach(u => {\r\n            user_stories.push({\r\n                'id': u.id,\r\n                'estimated_time': `${u.hours},${u.mins}`,\r\n                'moveto_backlog': u.moveto_backlog\r\n            });\r\n        });\r\n\r\n        if (props.acitveSprint) {\r\n            await generateReport();\r\n        }\r\n        \r\n        let message = \"Sprint Created Successfully\";\r\n        let body = { \r\n                    'name': title,\r\n                    'description': description,\r\n                    'project_id': props.project_id,\r\n                    'sprint_id': props.acitveSprint ? props.acitveSprint._id : null,\r\n                     user_stories\r\n                    };\r\n\r\n        const response = await utils.POST_DATA('api/sprints',body ,message);\r\n        if (response.status === 200) {\r\n            props.refresh();\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    fontSize: '25px',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    marginBottom: '35px',\r\n                    fontWeight: '400'\r\n                }}\r\n            >\r\n                Create Sprint\r\n            </div>\r\n\r\n            <div style={{ padding: '0 40px', width: '90%' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Sprint Info\" description=\"Sprint Information\" />\r\n                    {\r\n                        props.acitveSprint && <Steps.Item title=\"Manage User Stories\" description=\"Re-Estimate/ Move to Backlog\" />\r\n                    }\r\n                    <Steps.Item title=\"Submit\" description=\"Create New Sprint\" />\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '40vh', padding: '0' }}>\r\n                    {\r\n                        step === 0 &&\r\n                        <Form\r\n                            className=\"loginForm\"\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '70%', margin: '10px 0' }}>\r\n                                <TextField\r\n                                    name=\"title\"\r\n                                    label=\"Title\"\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '70%' }}>\r\n                                <TextField\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={description}\r\n                                    onChange={(value) => setdescription(value)}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                    {\r\n                        props.acitveSprint && step === 1 &&\r\n                        <Table\r\n                            cellBordered\r\n                            height={350}\r\n                            data={userStoriesDone}\r\n                            headerHeight={80}\r\n                            rowHeight={60}\r\n                            style={{ border: '1px solid #e6e6e6' }}\r\n                        >\r\n                            <Table.Column align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.HeaderCell>User Story</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"story\" />\r\n                            </Table.Column>\r\n\r\n                            <Table.ColumnGroup align=\"center\" verticalAlign=\"middle\" header=\"Estimated\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.ColumnGroup header=\"Re-Estimate\" align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.Column flexGrow={1} align=\"center\" verticalAlign=\"middle\">\r\n                                <Table.HeaderCell>Move to Backlog</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"move_to_backlog\" />\r\n                            </Table.Column>\r\n                        </Table>\r\n                    }\r\n                    {\r\n                        (step === 2 || !props.acitveSprint) &&\r\n                        <div\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                style={{ width: '300px', background: \"#134069\", color: '#f5f5f5' }}\r\n                                onClick={createNewSprint}\r\n                            >\r\n                                Create Sprint\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n                <hr />\r\n                <ButtonGroup>\r\n                    <Button onClick={onPrevious} disabled={step === 0}>\r\n                        Previous\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={onNext} disabled={props.acitveSprint ? step === 2 : step === 1}>\r\n                        Next\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/sprintHome.9f97a044.svg\";","import React, { useState, useEffect } from 'react'\r\nimport homeImg from \"../../assets/sprintHome.svg\";\r\nimport util from \"../../utility/utils\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport { IconButton, Icon, Button, Avatar, Drawer, Form, InputPicker, ButtonToolbar, Whisper, Popover } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction SprintHome(props) {\r\n\tconst [repo, setrepo] = useState(null);\r\n\tconst [selectedUser, setselectedUser] = useState(null);\r\n\tconst [addMemberDrawer, setAddMemberDrawer] = useState(false);\r\n\r\n\tconst getRepo = async () => {\r\n\t\tlet response = await util.FETCH_DATA(`api/git/getRepo/${props.project.repo}`);\r\n\t\tsetrepo(response.data.repo.data);\r\n\t};\r\n\r\n\tconst addMember = async () => {\r\n\t\tlet body = {\r\n\t\t\tproject_id: props.project._id,\r\n\t\t\tuser_id: selectedUser,\r\n\t\t};\r\n\t\tlet successMessage = \"Successfully added the user\";\r\n\t\tawait util.UPDATE_DATA(`api/projects/addMember`, body, successMessage);\r\n\t\tsetAddMemberDrawer(false);\r\n\t\tprops.getMembers(props.project._id);\r\n\t\tgetRepo();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRepo();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section style={{ display: \"flex\", height: \"70vh\" }}>\r\n\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t<img style={{ maxWidth: \"700px\", display: \"block\", margin: \"auto\" }} src={homeImg} alt=\"homeimg\" />\r\n\t\t\t\t</section>\r\n\t\t\t\t{\r\n\t\t\t\t\t(repo && props.membersIn && props.membersIn.length > 0) ?\r\n\t\t\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignContent: \"center\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"30px\", fontWeight: \"bold\" }}>{props.project.name}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", marginTop: \"10px\" }}>{props.project.description}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"20px\", marginTop: \"40px\", fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\tContributors\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"avatar-group\" style={{ justifyContent: \"center\", display: \"flex\", width: \"50%\", margin: \"auto\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t\t{props.membersIn.map((t, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Whisper\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger=\"hover\"\r\n\t\t\t\t\t\t\t\t\t\t\tplacement={\"top\"}\r\n\t\t\t\t\t\t\t\t\t\t\tspeaker={<Popover title={`${t.firstname} ${t.lastname}`}></Popover>}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tcircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#828282\", cursor: \"pointer\", margin: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={t.git_avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Whisper>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"40px\" }}>\r\n\t\t\t\t\t\t\t\t{[\"owner\", \"admin\"].includes(sessionStorage.getItem(\"sprintCompassUserRole\").toLowerCase()) && (\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"user-plus\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"10px\", border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setAddMemberDrawer(true)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAdd Member\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"github\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => window.open(repo.html_url, \"_blank\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tOpen with Github\r\n      \t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginTop: \"40px\", display: \"flex\" }}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tdata-div-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#e6e6e6\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '5px 0 0 5px' }}>\r\n\t\t\t\t\t\t\t\t\t\tClone Url\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#f5f5f5\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{repo.clone_url}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Clipboard\r\n\t\t\t\t\t\t\t\t\tdata-clipboard-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ background: '#134069', color: '#f5f5f5', width: '60px', borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tcopy\r\n\t\t\t\t\t\t\t\t</Clipboard>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section> :\r\n\t\t\t\t\t\t<Loader\r\n\t\t\t\t\t\t\tstyle={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignItems: \"center\" }}\r\n\t\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={addMemberDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tsetAddMemberDrawer(false);\r\n\t\t\t\t\tsetselectedUser(null);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className=\"drawerBody\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\taddMember();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h5 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>Add a Member</h5>\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length === 0 && <div style={{ textAlign: \"center\" }}>No new members to add</div>}\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length > 0 && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\t\tdata={props.membersNotIn.map((m) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn { label: m.firstname + \" \" + m.lastname, value: m._id };\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 224 }}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(value) => setselectedUser(value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<Button appearance=\"primary\" type=\"submit\" style={{ width: \"100%\", margin: \"30px 0\" }} disabled={!selectedUser}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SprintHome\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Sidenav, Dropdown, Nav, Container, Icon,\r\n    Content, Sidebar, Navbar, FlexboxGrid\r\n} from 'rsuite';\r\nimport { useRouteMatch, withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport MainNavbar from '../Navbar';\r\nimport SprintTable from './SprintTable';\r\nimport CreateTicket from \"../../assets/createTicket.svg\";\r\nimport SprintImg from \"../../assets/sprint.svg\";\r\nimport NoActiveSprint from \"../../assets/noactivesprint.svg\";\r\nimport Backlog from \"./Backlog\";\r\nimport SprintHistory from \"./SprintHistory\";\r\nimport UserStoryForm from \"./UserStoryForm\";\r\nimport SprintForm from \"./SprintForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport SprintHome from \"./sprintHome\";\r\nimport utils from \"../../utility/utils\";\r\n\r\n\r\nconst NavToggle = ({ expand, onChange }) => {\r\n    return (\r\n        <Navbar appearance=\"inverse\"\r\n            style={{ background: '#134069' }}\r\n            className=\"nav-toggle\"\r\n        >\r\n            <Navbar.Body>\r\n                <Nav pullRight>\r\n                    <Nav.Item onClick={onChange} style={{ width: 56, textAlign: 'center' }}>\r\n                        <Icon icon={expand ? 'angle-left' : 'angle-right'} />\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Body>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nfunction ProjectBoard() {\r\n    const [collaborators, setcollaborators] = useState([]);\r\n    const [membersNotIn, setMembersNotIn] = useState([]);\r\n    const [project, setproject] = useState(null);\r\n    const [sprints, setsprints] = useState([]);\r\n\r\n    const [homeToggle, setHomeToggle] = useState(true);\r\n    const [activeSprintToggle, setactiveSprintToggle] = useState(false);\r\n    const [createSprintToggle, setcreateSprintToggle] = useState(false);\r\n    const [createUserStoryToggle, setcreateUserStoryToggle] = useState(false);\r\n    const [viewBacklogToggle, setviewBacklogToggle] = useState(false);\r\n    const [sprintHistoryToggle, setsprintHistoryToggle] = useState(false);\r\n\r\n    const [expand, setexpand] = useState(true);\r\n    const [acitveSprint, setActiveSprint] = useState(null);\r\n\r\n    let { url } = useRouteMatch();\r\n\r\n    let getSprints = async () => {\r\n\r\n        const response = await utils.FETCH_DATA(`api/sprints/allByProjectId/${url.split('/')[2]}`);\r\n        let data = response.data;\r\n        let currentSprint = data.sprints.find(d => !d.is_done);\r\n        setActiveSprint(currentSprint);\r\n        setsprints(data.sprints);\r\n    }\r\n\r\n    let getProjectById = async () => {\r\n        const response = await utils.FETCH_DATA(`api/projects/byProjectId/${url.split('/')[2]}`);\r\n        let data = response.data;\r\n        getAllUsers(data.project._id)\r\n        setproject(data.project);\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setexpand(!expand);\r\n    }\r\n\r\n    const navbarToggleHandler = (toggleFunction) => {\r\n        setactiveSprintToggle(false);\r\n        setcreateUserStoryToggle(false);\r\n        setcreateSprintToggle(false);\r\n        setviewBacklogToggle(false);\r\n        setsprintHistoryToggle(false);\r\n        setHomeToggle(false);\r\n\r\n        toggleFunction(true);\r\n    };\r\n\r\n    const getAllUsers = async (project_id) => {\r\n        let response = await utils.FETCH_DATA(`api/projects/members/${project_id}`);\t\t\r\n        setcollaborators(response.data.membersIn);\r\n        setMembersNotIn(response.data.membersNotIn);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSprints();\r\n        getProjectById();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar />\r\n            <div className=\"show-fake-browser sidebar-page\">\r\n                <Container>\r\n                    <Sidebar\r\n                        style={{ display: 'flex', flexDirection: 'column' }}\r\n                        width={expand ? 260 : 56}\r\n                        collapsible\r\n                    >\r\n                        <Sidenav\r\n                            expanded={expand}\r\n                            defaultOpenKeys={['3', '4']}\r\n                            appearance=\"inverse\"\r\n                            style={{ background: '#134069', minHeight: 'calc(100vh - 97px)', height: '100%' }}\r\n                        >\r\n                            <Sidenav.Body>\r\n                                <Nav>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        icon={<Icon icon=\"home\" />}\r\n                                        active={homeToggle}\r\n                                        onClick={() => navbarToggleHandler(setHomeToggle)}\r\n                                    >\r\n                                        Home\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"3\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Sprint Planning\"\r\n                                        icon={<Icon icon=\"magic\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-3\"\r\n                                            active={activeSprintToggle}\r\n                                            icon={<Icon icon=\"dashboard\" />}\r\n                                            onClick={() => navbarToggleHandler(setactiveSprintToggle)}\r\n                                        >\r\n                                            Active Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item eventKey=\"3-2\"\r\n                                            active={createSprintToggle}\r\n                                            icon={<Icon icon=\"plus-square\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateSprintToggle)}\r\n                                        >\r\n                                            Create New Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-1\"\r\n                                            active={createUserStoryToggle}\r\n                                            icon={<Icon icon=\"newspaper-o\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateUserStoryToggle)}\r\n                                        >\r\n                                            Create User Story\r\n                                        </Dropdown.Item>\r\n\r\n                                    </Dropdown>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        active={viewBacklogToggle}\r\n                                        icon={<Icon icon=\"toggle-left\" />}\r\n                                        onClick={() => navbarToggleHandler(setviewBacklogToggle)}\r\n                                    >\r\n                                        View Backlog\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"4\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Advanced\"\r\n                                        icon={<Icon icon=\"gear-circle\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"4-1\"\r\n                                            active={sprintHistoryToggle}\r\n                                            onClick={() => navbarToggleHandler(setsprintHistoryToggle)}\r\n                                            icon={<Icon icon=\"history\" />}\r\n                                        >\r\n                                            Sprint History\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-2\">Websites</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-3\">Channels</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-4\">Tags</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-5\">Versions</Dropdown.Item>\r\n                                    </Dropdown>\r\n                                </Nav>\r\n                            </Sidenav.Body>\r\n                            <NavToggle expand={expand} onChange={handleToggle} />\r\n                        </Sidenav>\r\n                    </Sidebar>\r\n\r\n                    <Container>\r\n                        <Content>\r\n                            {\r\n                                homeToggle && !!project &&\r\n                                <SprintHome\r\n                                    project={project}\r\n                                    membersIn={collaborators}\r\n                                    membersNotIn={membersNotIn}\r\n                                    getMembers={getAllUsers}\r\n                                />\r\n                            }\r\n                            {\r\n                                activeSprintToggle &&\r\n                                <div>\r\n\r\n                                    {\r\n                                        acitveSprint ?\r\n                                            <SprintTable\r\n                                                sprint={acitveSprint}\r\n                                                collaborators={collaborators}\r\n                                                project_id={url.split('/')[2]}\r\n                                                project={project}\r\n                                            /> :\r\n                                            <NotFound\r\n                                                image={NoActiveSprint}\r\n                                                msg=\"No Active Sprint Found\"\r\n                                            />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createSprintToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 97px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={8}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={SprintImg}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={16}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <SprintForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    refresh={() => {\r\n                                                        navbarToggleHandler(setHomeToggle);\r\n                                                        getSprints()\r\n                                                    }}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createUserStoryToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 97px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={12}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={CreateTicket}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={12}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        fontSize: '25px',\r\n                                                        display: 'block',\r\n                                                        textAlign: 'center',\r\n                                                        marginBottom: '15px',\r\n                                                        fontWeight: '400'\r\n                                                    }}\r\n                                                >\r\n                                                    Create User Story\r\n                                                </div>\r\n                                                <UserStoryForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    collaborators={collaborators}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                viewBacklogToggle &&\r\n                                <Backlog project_id={url.split('/')[2]} acitveSprint={acitveSprint} />\r\n                            }\r\n                            {\r\n                                sprintHistoryToggle &&\r\n                                <SprintHistory />\r\n                            }\r\n                        </Content>\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ProjectBoard);","export default __webpack_public_path__ + \"static/media/teamsHome.331c024c.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ProjectSvg from \"../assets/teamsHome.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n    Drawer, Icon, Button, Form, FormGroup, FormControl, ControlLabel,\r\n    ButtonToolbar, Schema, List, FlexboxGrid\r\n} from 'rsuite';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Navbar from './Navbar'\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//model for create project\r\nconst createProjectDrawerModel = Schema.Model({\r\n    name: StringType().isRequired('Name is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\n//custom text field\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styleCenter = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '60px'\r\n};\r\n\r\nconst slimText = {\r\n    fontSize: '0.9em',\r\n    color: '#97969B',\r\n    fontWeight: 'lighter',\r\n    paddingBottom: 3\r\n};\r\n\r\nconst titleStyle = {\r\n    paddingBottom: 5,\r\n    whiteSpace: 'nowrap',\r\n    fontWeight: 500\r\n};\r\n\r\nfunction Projects(props) {\r\n    const [createProjectDrawer, setcreateProjectDrawer] = useState(false);\r\n    const [projectName, setprojectName] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [userProjects, setuserProjects] = useState([]);\r\n    const [userRole, setUserRole] = useState([]);\r\n    const [loading, setloading] = useState(false);\r\n\r\n    let getProjects = async () => {\r\n        setloading(true);\r\n        setUserRole(sessionStorage.getItem('sprintCompassUserRole'));\r\n        const response = await util.FETCH_DATA(`api/projects`);\r\n        setuserProjects(response.data.projects);\r\n        setloading(false);\r\n    }\r\n    \r\n    let close = () => {\r\n        setcreateProjectDrawer(false);\r\n        setprojectName(\"\");\r\n        setdescription(\"\");\r\n    }\r\n\r\n    let createProject = async (status) => {\r\n        if (status) {\r\n            let message = \"Project Has Been Created\";\r\n            let body = { 'name': projectName, 'description': description };\r\n            await util.POST_DATA(`api/projects`, body,message);\r\n            close();\r\n            getProjects();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"projectBannerContainer\">\r\n                <div className=\"teamImageContainer\">\r\n                    <img\r\n                        style={{ width: \"80%\", maxWidth: \"600px\" }}\r\n                        src={ProjectSvg}\r\n                        alt=\"ProjectSvg\"\r\n                    />\r\n                </div>\r\n                <div className=\"projectImageContainer\">\r\n                    <div\r\n                        style={{\r\n                            fontSize: \"45px\",\r\n                            fontWeight: \"bold\",\r\n                            lineHeight: \"1.2\",\r\n                            marginBottom: \"50px\",\r\n                            width: '100%',\r\n                            textAlign: 'center'\r\n                        }}\r\n                    >\r\n                        Welcome to\r\n                            <br />\r\n                        <span\r\n                            style={{\r\n                                color: \"#2D56B3\",\r\n                                fontWeight: 600\r\n                            }}\r\n                        >\r\n                            Run\r\n                            </span>\r\n                        <span style={{ color: \"#515B60\" }}>time</span>\r\n                    </div>\r\n                    {(userRole === \"owner\" || userRole === \"admin\") && (\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div className=\"teamButtons\" onClick={() => setcreateProjectDrawer(true)}>\r\n                                Create a Project\r\n\t\t\t\t\t\t\t</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            <div>\r\n                <div className=\"projectHomeHeader\">Your Projects</div>\r\n                <List hover style={{ width: '80%', margin: 'auto' }}>\r\n                    {userProjects.map((item, index) => (\r\n                        <List.Item key={item._id} index={index}>\r\n                            <FlexboxGrid>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={10}\r\n                                    style={{\r\n                                        ...styleCenter,\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'flex-start',\r\n                                        overflow: 'hidden'\r\n                                    }}\r\n                                >\r\n                                    <div style={titleStyle}>{item.name}</div>\r\n                                    <div style={slimText}>\r\n                                        <div>Description</div>\r\n                                        <div>{item.description}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={6} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Project Lead</div>\r\n                                        <div>\r\n                                            <Icon icon=\"user-circle-o\" />\r\n                                            {`  ${item.project_lead.firstname} ${item.project_lead.lastname}`}\r\n                                        </div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={5} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Start Date</div>\r\n                                        <div style={slimText}>{item.created_at}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={3}\r\n                                    style={{ ...styleCenter, justifyContent: 'center' }}\r\n                                >\r\n                                    <div\r\n                                        style={{ cursor: 'pointer', color: '#134069' }}\r\n                                        onClick={() => props.history.push(`project/${item._id}`)}\r\n                                    >\r\n                                        View\r\n                                        </div>\r\n                                </FlexboxGrid.Item>\r\n                            </FlexboxGrid>\r\n                        </List.Item>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            {\r\n                userProjects.length === 0 && !loading && <div style={{ textAlign: 'center' }}>No Projects Found</div>\r\n            }\r\n            <Drawer\r\n                show={createProjectDrawer}\r\n                onHide={() => { close() }}\r\n            >\r\n                <Drawer.Body>\r\n                    <div className=\"drawerBody\">\r\n                        <Form\r\n                            model={createProjectDrawerModel}\r\n                            onSubmit={(status) => { createProject(status) }}\r\n                        >\r\n                            <h5 style={{ textAlign: 'center', marginBottom: '50px' }}>Create a Project</h5>\r\n                            <TextField\r\n                                name=\"name\"\r\n                                label=\"Project Name\"\r\n                                onChange={(value) => setprojectName(value)}\r\n                            />\r\n                            <TextField\r\n                                name=\"description\"\r\n                                label=\"Description\"\r\n                                onChange={(value) => setdescription(value)}\r\n                            />\r\n                            <ButtonToolbar>\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </ButtonToolbar>\r\n                        </Form>\r\n                    </div>\r\n                </Drawer.Body>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Projects);\r\n","export default __webpack_public_path__ + \"static/media/bio.c14203e2.svg\";","export default __webpack_public_path__ + \"static/media/git.8ed5ab3d.svg\";","export default __webpack_public_path__ + \"static/media/organization.451cba29.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PasswordRenewSvg from '../../assets/passwordRenew.svg';\r\nimport BioSvg from '../../assets/bio.svg';\r\nimport Gitsvg from '../../assets/git.svg';\r\nimport OrganizationSvg from '../../assets/organization.svg';\r\nimport './authrenew.css';\r\nimport util from \"../../utility/utils\";\r\nimport {\r\n    Form, FormControl, FormGroup, ControlLabel, Schema,\r\n    Notification, Steps, Panel, Button, InputPicker, Message\r\n} from 'rsuite';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\nexport default function AuthRenewPage(props) {\r\n\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [position, setPosition] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [location, setlocation] = useState('');\r\n\r\n    const [authenticating, setAuthenticating] = useState(false);\r\n\r\n    const [step, setStep] = useState();\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const [organizations, setorganizations] = useState([]);\r\n    const [companyName, setcompanyName] = useState(\"\");\r\n    const [gitOrganization, setgitOrganization] = useState(null);\r\n\r\n    const getUserData = async () => {\r\n        let response = await util.FETCH_DATA(`api/users/getUserById/${sessionStorage.getItem('sprintCompassUser')}`);\r\n        if (response.status === 200) {\r\n            let user = response.data.user;\r\n            if (user.disabled) {\r\n                sessionStorage.removeItem('sprintCompassToken');\r\n                sessionStorage.removeItem('sprintCompassUser');\r\n                sessionStorage.removeItem('sprintCompassUserName');\r\n                sessionStorage.removeItem('sprintCompassUserRole');\r\n                window.open('/login', '_self');\r\n            }\r\n            else {\r\n                if (!!user.first_login) setStep(0);\r\n                else if (!!user.git_token) setStep(3);\r\n                else {\r\n                    setStep(2);\r\n                }\r\n                setuser(response.data.user);\r\n            }\r\n        }\r\n    };\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            let message = \"Password Has Been Updated\";\r\n            let body = { old_password: currentPassord, new_password: newpassword };\r\n            let response = await util.UPDATE_DATA(`api/users/update_password`, body, message);\r\n            if (response.status === 200) {\r\n                setStep(1);\r\n            }\r\n            setloading(false);\r\n        }\r\n    }\r\n\r\n    const updateUserData = async () => {\r\n        if (position === \"\" && phone === \"\" && location === \"\") {\r\n            setStep(2);\r\n            return;\r\n        }\r\n        let message = \"Profile Has Been Updated\";\r\n        let body = { position, phone, location };\r\n        let response = await util.UPDATE_DATA(`api/users/update_user`, body, message);\r\n        if (response.status === 200) {\r\n            setStep(2);\r\n        }\r\n    }\r\n\r\n    const checkAuthorization = async () => {\r\n        if (util.getQueryVariable(\"error\") === \"access_denied\") {\r\n            Notification.error({\r\n                title: `Authorization Failed`,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        let code = util.getQueryVariable(\"code\");\r\n        if (code) {\r\n            const response = await util.FETCH_DATA(`gitauth/get_token?code=${code}`, \"Successfully authorized github\");\r\n            if (response.status === 200) {\r\n                setStep(3);\r\n\r\n                //remove code from the url withour reloading\r\n                let newUrl = window.location.origin + '/auth';\r\n                window.history.pushState({}, null, newUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    let getOrganizations = async () => {\r\n        const response = await util.FETCH_DATA(`api/git/getOrganizations`, \"No Notification\");\r\n        setorganizations(response.data.organizations);\r\n    }\r\n\r\n    let validateInvite = async () => {\r\n        const response = await util.FETCH_DATA(`gitauth/validateInvite`, \"Congratulations!\");\r\n        if (response.status === 200) {\r\n            props.history.push('/projects');\r\n        }\r\n    }\r\n\r\n    let submitOrganization = async () => {\r\n        if (!companyName || !gitOrganization) {\r\n            Notification.error({\r\n                title: \"Missing Fields\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        let body = { name: companyName, organization: gitOrganization };\r\n        let response = await util.POST_DATA(`api/users/addClient`, body);\r\n\r\n        if (response.status === 200) {\r\n            props.history.push('/projects');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (step === 3 && user?.role === 'owner' && organizations.length === 0) {\r\n            getOrganizations();\r\n        }\r\n    }, [step, user]);\r\n\r\n    useEffect(() => {\r\n        checkAuthorization();\r\n        getUserData();\r\n    }, [])\r\n\r\n\r\n    const authorize = () => {\r\n        setAuthenticating(true);\r\n        let url = `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&scope=admin:org%20repo`;\r\n        window.open(url, \"_self\");\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: 'auto', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <div style={{ width: '100%', height: '80vh' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Change Password\" />\r\n                    <Steps.Item title=\"Update Bio\" />\r\n                    <Steps.Item title=\"Authorize Github\" />\r\n                    {\r\n                        user && user.role === 'owner' ?\r\n                            <Steps.Item title=\"Choose Organization\" /> :\r\n                            <Steps.Item title=\"Accept Organization Invite\" />\r\n                    }\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '60vh' }} >\r\n                    <section style={{ display: 'flex', height: '60vh' }}>\r\n                        <div style={{ width: '50%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <img style={{ maxWidth: '550px' }} src={PasswordRenewSvg} alt=\"passwordrenewimg\" />\r\n                            }\r\n                            {\r\n                                step === 1 &&\r\n                                <img style={{ maxWidth: '550px' }} src={BioSvg} alt=\"profileimg\" />\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <img style={{ maxWidth: '550px' }} src={Gitsvg} alt=\"gitimg\" />\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <img style={{ maxWidth: '550px' }} src={OrganizationSvg} alt=\"orgImg\" />\r\n                            }\r\n                        </div>\r\n                        <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                step === 1 && !!user &&\r\n                                <div>\r\n                                    <Form\r\n                                        onSubmit={() => updateUserData()}\r\n                                    >\r\n                                        <TextField\r\n                                            label='Job Title'\r\n                                            onChange={(value) => {\r\n                                                setPosition(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Phone'\r\n                                            onChange={(value) => {\r\n                                                setphone(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Location'\r\n                                            onChange={(value) => {\r\n                                                setlocation(value);\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            style={styles.update__button}\r\n                                        >\r\n                                            Update Bio\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={authenticating ? styles.disabled__button : styles.update__button}\r\n                                    onClick={authorize}\r\n                                    disabled={authenticating}\r\n                                >\r\n                                    Authorize Github\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <>\r\n                                    {\r\n                                        user && user.role === 'owner' &&\r\n                                        <div>\r\n                                            <Form\r\n                                                onSubmit={() => submitOrganization()}\r\n                                            >\r\n                                                <TextField\r\n                                                    label='Organization Name'\r\n                                                    onChange={(value) => {\r\n                                                        setcompanyName(value);\r\n                                                    }}\r\n                                                />\r\n                                                <InputPicker\r\n                                                    data={organizations}\r\n                                                    onChange={(value) => setgitOrganization(value)}\r\n                                                    block\r\n                                                    placeholder=\"Select a Github Organization\"\r\n                                                />\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    style={styles.update__button}\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        user && user.role !== 'owner' &&\r\n                                        <Message\r\n                                            showIcon\r\n                                            type=\"success\"\r\n                                            title=\"Invitation Sent\"\r\n                                            description={\r\n                                                <>\r\n                                                    We have sent you an email invitation to join the organization.<br />\r\n                                                    Please accept it and click finish.\r\n                                                </>\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                </Panel>\r\n                <hr />\r\n                <div style={{ float: 'right' }}>\r\n                    {step === 3 && user?.role !== \"owner\" &&\r\n                        <Button style={{ background: \"#193A5A\", color: \"#f5f5f5\", width: \"100px\" }} onClick={validateInvite}>\r\n                            Finish\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    disabled__button: {\r\n        marginTop: '50px',\r\n        background: 'grey',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    next__button: {\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        float: 'right',\r\n        minWidth: '100px'\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/imagePlaceHolder.f0421300.svg\";","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport {\r\n    Icon, IconButton, Drawer, Button, Schema,\r\n    Form, FormControl, FormGroup, ControlLabel\r\n} from 'rsuite';\r\nimport ImageUploader from 'react-images-upload';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImagePlaceHolder from \"../assets/imagePlaceHolder.svg\";\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function Profile(props) {\r\n    const [editable, seteditable] = useState(false);\r\n    const [changeAttribute, setChangeAttribute] = useState('');\r\n    const [openDrawer, setopenDrawer] = useState(false);\r\n    const [loading, setloading] = useState(false);\r\n    const [validImage, setvalidImage] = useState(false);\r\n\r\n    const [id, setid] = useState(null);\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n            Resizer.imageFileResizer(file, 800, 800, \"JPEG\", 100, 0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\"\r\n            );\r\n        });\r\n\r\n    const onDrop = async (picture) => {\r\n        if (picture[0]) {\r\n            const image = await resizeFile(picture[0]);\r\n            let userTemp = JSON.parse(JSON.stringify(user));\r\n            userTemp.image = image;\r\n            setuser(userTemp);\r\n            setvalidImage(true);\r\n        }\r\n    };\r\n\r\n    const getUserData = async (id) => {\r\n        let response = await util.FETCH_DATA(`api/users/getById/${id}`);\r\n        if (response.status === 200) {\r\n            setuser(response.data.user);\r\n        }\r\n    };\r\n\r\n    const updateUserData = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            setopenDrawer(false);\r\n            let body = { [changeAttribute.toLowerCase()]: user[changeAttribute.toLowerCase()]}\r\n            let message = `${changeAttribute} Has Been Updated`;\r\n            await util.UPDATE_DATA(`api/users`, body,message);\r\n            setChangeAttribute(null);\r\n            getUserData(id);\r\n            setloading(false);\r\n            setvalidImage(false);\r\n        }\r\n    }\r\n    \r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n\r\n        let message = `Password Has Been Updated`;\r\n        let body ={\r\n                    old_password: currentPassord,\r\n                    new_password: newpassword\r\n                }\r\n            await util.UPDATE_DATA(`api/users/change_password`, body,message);\r\n             \r\n            setopenDrawer(false);\r\n            setChangeAttribute(null);\r\n            getUserData(id);\r\n            setloading(false);\r\n            setvalidImage(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let path = window.location.pathname.split('/');\r\n        let user_id = null;\r\n        if (path.length > 2) {\r\n            user_id = path[2];\r\n            seteditable(false);\r\n        } else {\r\n            seteditable(true);\r\n            user_id = sessionStorage.getItem('sprintCompassUser');\r\n        }\r\n        setid(user_id);\r\n        getUserData(user_id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {\r\n                (!user || loading) &&\r\n                <div style={{ height: '70vh' }}>\r\n                    <Loader\r\n                        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                        type=\"ThreeDots\"\r\n                        color=\"#134069\"\r\n                        height={50}\r\n                        width={50}\r\n                    />\r\n                </div>\r\n            }\r\n            {user && !loading &&\r\n                <>\r\n                    <section style={styles.main}>\r\n                        <section style={styles.main__1}>\r\n                            {\r\n                                user.image ?\r\n                                    <img\r\n                                        style={styles.main__1__img}\r\n                                        src={user.image}\r\n                                        alt='dp'\r\n                                    /> :\r\n                                    <img\r\n                                        style={{ maxWidth: '500px', display: 'block', margin: 'auto' }}\r\n                                        src={ImagePlaceHolder}\r\n                                        alt='dp'\r\n                                    />\r\n                            }\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.change__image}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Image');\r\n                                    }}\r\n                                >\r\n                                    Change Image\r\n                                </div>\r\n                            )}\r\n                        </section>\r\n                        <section style={styles.main__2}>\r\n                            <div style={styles.name}>\r\n                                {`${user.firstname} ${user.lastname}`}\r\n                            </div>\r\n                            <div style={styles.profession}>\r\n                                {user.position && `${user.position}`}\r\n                                {editable && (\r\n                                    <span\r\n                                        style={styles.change}\r\n                                        onClick={() => {\r\n                                            setopenDrawer(true);\r\n                                            setChangeAttribute('Position');\r\n                                        }}\r\n                                    >\r\n                                        {user.position ? 'change' : 'Add Position'}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <section style={styles.info}>\r\n                                <div style={styles.attribute__container}>\r\n                                    <Icon size='2x' icon='send' style={styles.info__1} />\r\n                                    <div style={styles.info__2}>\r\n                                        {`${user.email}`}\r\n                                        {editable &&\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Email');\r\n                                                }}\r\n                                            >\r\n                                                change\r\n                                         </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.phone || editable) && <Icon size='2x' icon='phone' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.phone && `${user.phone}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Phone');\r\n                                                }}\r\n                                            >\r\n                                                {user.phone ? 'change' : 'Add Phone Number'}{' '}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.location || editable) && <Icon size='2x' icon='map-marker' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.location && `${user.location}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Location');\r\n                                                }}\r\n                                            >\r\n                                                {user.location ? 'change' : 'Add Location'}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.update__password}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Password');\r\n                                    }}\r\n                                >\r\n                                    Change Password\r\n                                </div>\r\n                            )}\r\n                            <IconButton\r\n                                style={{\r\n                                    width: '250px',\r\n                                    margin: '30px 0',\r\n                                    background: '#134069',\r\n                                    color: '#f5f5f5',\r\n                                }}\r\n                                icon={\r\n                                    <Icon\r\n                                        style={{ background: '#486b8c', color: '#f5f5f5' }}\r\n                                        icon='send'\r\n                                    />\r\n                                }\r\n                                placement='left'\r\n                            >\r\n                                Send Message\r\n                            </IconButton>\r\n                        </section>\r\n                    </section>\r\n\r\n                    <Drawer show={openDrawer} onHide={() => setopenDrawer(false)}>\r\n                        <Drawer.Header>\r\n                            <Drawer.Title>Add/Change {changeAttribute}</Drawer.Title>\r\n                        </Drawer.Header>\r\n                        <Drawer.Body style={styles.drawer__body}>\r\n                            {\r\n                                changeAttribute === 'Image' &&\r\n                                <>\r\n                                    <ImageUploader\r\n                                        withIcon={true}\r\n                                        onChange={(a, b) => onDrop(a, b)}\r\n                                        imgExtension={['.jpg', '.png']}\r\n                                        maxFileSize={2097152}\r\n                                        buttonText='Choose Image'\r\n                                        label=\"Maximum File Size: 2 mb, Accepted Formats: jpg, png\"\r\n                                    />\r\n                                    <Button\r\n                                        style={styles.update__button}\r\n                                        disabled={loading || !validImage}\r\n                                        onClick={() => {\r\n                                            updateUserData(!!user.image)\r\n                                        }}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            {\r\n                                (\r\n                                    changeAttribute === 'Position' ||\r\n                                    changeAttribute === 'Email' ||\r\n                                    changeAttribute === 'Location' ||\r\n                                    changeAttribute === 'Phone'\r\n                                )\r\n                                &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        [changeAttribute]: StringType().isRequired(`${changeAttribute} is required.`),\r\n                                    })}\r\n                                    onSubmit={(status) => { updateUserData(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        name={changeAttribute}\r\n                                        label={changeAttribute}\r\n                                        value={user[changeAttribute.toLowerCase()] ?? \"\"}\r\n                                        onChange={(value) => {\r\n                                            let userTemp = JSON.parse(JSON.stringify(user));\r\n                                            userTemp[changeAttribute.toLowerCase()] = value;\r\n                                            setuser(userTemp);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                changeAttribute === \"Password\" &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                        </Drawer.Body>\r\n                    </Drawer>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        height: '600px',\r\n        width: '80%',\r\n        maxWidth: '1400px',\r\n        margin: '50px auto',\r\n    },\r\n    main__1: {\r\n        width: '50%',\r\n        margin: 'auto',\r\n    },\r\n    main__1__img: {\r\n        maxHeight: '100%',\r\n        maxWidth: '80%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n    },\r\n    main__2: {\r\n        flex: 1,\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    name: {\r\n        fontSize: '25px',\r\n        fontWeight: 'bold',\r\n        width: '100%',\r\n        margin: '5px 0',\r\n    },\r\n    profession: {\r\n        fontSize: '15px',\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        margin: '50px 0',\r\n    },\r\n    attribute__container: {\r\n        display: 'flex',\r\n        margin: '25px 0',\r\n    },\r\n    info__1: {\r\n        width: '50px',\r\n    },\r\n    info__2: {\r\n        flex: 1,\r\n        fontSize: '17px',\r\n    },\r\n    change: {\r\n        marginLeft: '5px',\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        cursor: 'pointer'\r\n    },\r\n    change__image: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        marginTop: '15px',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    update__password: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        width: '100%',\r\n        cursor: 'pointer'\r\n    },\r\n    drawer__body: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Avatar, Progress, Icon, InputPicker, Toggle, Drawer, Button } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './userTable.css';\r\nimport util from '../../utility/utils';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\nconst UserRoles = [\r\n\t{ label: \"Admin\", value: \"admin\" },\r\n\t{ label: \"Member\", value: \"member\" },\r\n];\r\nexport default function UsersTable(props) {\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [selectedRole, setSelectedRole] = useState(-1);\r\n\tconst [sortColumn, setSortColumn] = useState(null);\r\n\tconst [selectedUser, setSelectedUser] = useState(null);\r\n\tconst [sortType, setSortType] = useState(\"asc\");\r\n\tconst [openDrawer, setOpenDrawer] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState(false);\r\n\r\n\tconst [loading, setloading] = useState(false);\r\n\r\n\tconst getUsers = async () => {\r\n\t\tsetloading(true);\r\n\t\tconst response = await util.FETCH_DATA(`api/users`, \"No Notification\");\r\n\t\tlet filteredUsers = response.data.users.filter((user) => {\r\n\t\t\tif (user.role.toLowerCase() !== \"owner\") return user;\r\n\t\t\treturn undefined;\r\n\t\t});\r\n\t\tsetUsers(filteredUsers);\r\n\t\tsetloading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUsers();\r\n\t}, []);\r\n\r\n\tconst getData = () => {\r\n\t\tif (sortColumn && sortType) {\r\n\t\t\treturn users.sort((a, b) => {\r\n\t\t\t\tlet x = a[sortColumn];\r\n\t\t\t\tlet y = b[sortColumn];\r\n\t\t\t\tif (sortType === \"asc\") {\r\n\t\t\t\t\treturn x.localeCompare(y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn y.localeCompare(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn users;\r\n\t};\r\n\r\n\tconst ImageCell = ({ rowData, dataKey, ...props }) => {\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ padding: 8 }}>\r\n\t\t\t\t<Avatar circle src={rowData[dataKey]} />\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst TagCell = ({ rowData, dataKey, ...props }) => {\r\n\t\tlet colour = rowData[dataKey] ? \"blue\" : \"green\";\r\n\t\tlet content = rowData[dataKey] ? \"Disabled\" : \"Active\";\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ margin: 2, alignContent: \"center\" }}>\r\n\t\t\t\t<Tag color={colour}>{content}</Tag>\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst ProcessCell = ({ rowData, ...props }) => {\r\n\t\tlet percentage = Math.trunc(((!rowData.first_login + !!rowData.git_token + rowData.invitation_accepted) / 3) * 100);\r\n\t\tpercentage = isNaN(percentage) ? 0 : percentage;\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props}>\r\n\t\t\t\t{percentage === 0 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : percentage === 100 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} status=\"success\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} strokeColor=\"#ffc107\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleSortColumn = (sortColumn, sortType) => {\r\n\t\tsetSortColumn(sortColumn);\r\n\t\tsetSortType(sortType);\r\n\t};\r\n\r\n\tlet close = () => {\r\n\t\tsetOpenDrawer(false);\r\n\t};\r\n\r\n\tconst PassFailIcon = (pass) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{pass ? (\r\n\t\t\t\t\t<Icon icon=\"check-circle\" style={{ margin: 5, color: \"green\" }} size=\"2x\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Icon icon=\"close-circle\" style={{ margin: 5, color: \"red\" }} size=\"2x\" />\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst updateUser = async () => {\r\n\t\tlet message = \"User Has Been Updated\"\r\n\t\tlet body = { id: selectedUser._id, role: selectedRole, disabled: userStatus };\r\n\t\tawait util.UPDATE_DATA(`api/users/updateUserById`, body, message);\r\n\t\tsetOpenDrawer(false);\r\n\t\tgetUsers();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tloading ?\r\n\t\t\t\t\t<Loader\r\n\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\twidth={1000}\r\n\t\t\t\t\t\theight={600}\r\n\t\t\t\t\t\tdata={getData()}\r\n\t\t\t\t\t\trowHeight={65}\r\n\t\t\t\t\t\tsortColumn={sortColumn}\r\n\t\t\t\t\t\tsortType={sortType}\r\n\t\t\t\t\t\tonSortColumn={handleSortColumn}\r\n\t\t\t\t\t\tonRowClick={(data) => {\r\n\t\t\t\t\t\t\tsetSelectedRole(data.role);\r\n\t\t\t\t\t\t\tsetSelectedUser(data);\r\n\t\t\t\t\t\t\tsetOpenDrawer(true);\r\n\t\t\t\t\t\t\tsetUserStatus(data.disabled);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Column width={100} fixed>\r\n\t\t\t\t\t\t\t<HeaderCell />\r\n\t\t\t\t\t\t\t<ImageCell dataKey=\"git_avatar\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>First Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"firstname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Last Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"lastname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>User Role</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"role\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={100}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Status</HeaderCell>\r\n\t\t\t\t\t\t\t<TagCell dataKey=\"disabled\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={150}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Onboarding</HeaderCell>\r\n\t\t\t\t\t\t\t<ProcessCell />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t</Table>\r\n\t\t\t}\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={openDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tclose();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Header>\r\n\t\t\t\t\t<Drawer.Title>User Information</Drawer.Title>\r\n\t\t\t\t</Drawer.Header>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className='user__info__container'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>User Name</div>\r\n\t\t\t\t\t\t\t<div>{selectedUser?.firstname} {selectedUser?.lastname}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Account Activated</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(!selectedUser?.first_login)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Github Authorized</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.git_token)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Joined Organization</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.invitation_accepted)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"rs-control-label\">User Role</label>\r\n\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '150px' }}\r\n\t\t\t\t\t\t\t\t\tdata={UserRoles}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"User Role\"\r\n\t\t\t\t\t\t\t\t\tvalue={selectedRole}\r\n\t\t\t\t\t\t\t\t\tcleanable={false}\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => setSelectedRole(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>User Enabled</label>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Toggle\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '30px', textAlign: 'center' }}\r\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\t\t\tchecked={!userStatus}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setUserStatus(!userStatus)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tappearance=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => updateUser()}\r\n\t\t\t\t\t\t\tstyle={{ width: 250 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate User\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\tcolor: 'black',\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'black'\r\n\t},\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admin.c410cff4.svg\";","import React, { useState } from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport utils from \"../../utility/utils\"\r\nimport {\r\n    Form, FormGroup, ControlLabel, Icon, Button, FormControl, Schema, Message\r\n} from 'rsuite';\r\nimport './adminPage.css';\r\nimport UsersTable from './UsersTable';\r\nimport AdminSvg from '../../assets/admin.svg';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst adminFunctions = [\r\n    { key: 1, name: 'Create User', icon: 'user-plus' },\r\n    { key: 3, name: 'Manage Users', icon: 'setting' },\r\n    { key: 4, name: 'App Settings', icon: 'laptop' },\r\n    { key: 5, name: 'Github Settings', icon: 'github' },\r\n    { key: 6, name: 'Reports', icon: 'file-text-o' },\r\n    { key: 7, name: 'Data Management', icon: 'database' }\r\n];\r\n\r\nexport default function AdminPage() {\r\n    const [activeKey, setactiveKey] = useState(0);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"adminContainer\">\r\n                <section className=\"adminContainer__1\">\r\n                    {\r\n                        adminFunctions.map(f => {\r\n                            return <FunctionCard\r\n                                key={f.key}\r\n                                function={f}\r\n                                active={f.key === activeKey}\r\n                                makeActiveKey={() => setactiveKey(f.key)}\r\n                            />\r\n                        })\r\n                    }\r\n                </section>\r\n                <section className=\"adminContainer__2\">\r\n                    {\r\n                        activeKey === 0 &&\r\n                        <section className=\"adminHome\">\r\n                            <img src={AdminSvg} alt=\"adminSvg\" />\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 1 &&\r\n                        <section className=\"functionContainer\">\r\n                            <div>\r\n                                <img src={AdminSvg} alt=\"adminSvg\" />\r\n                            </div>\r\n                            <div>\r\n                                <AddUserCard />\r\n                            </div>\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 3 &&\r\n                        <div>\r\n                            <UsersTable />\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet FunctionCard = (props) => {\r\n    return (\r\n        <section\r\n            className=\"functionCard\"\r\n            onClick={props.makeActiveKey}\r\n            style={{ color: props.active ? '#134069' : '' }}\r\n        >\r\n            <div>\r\n                <Icon icon={props.function.icon} size='2x' />\r\n            </div>\r\n            <div style={{ fontWeight: props.active ? 700 : 500 }}>\r\n                {props.function.name}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nlet AddUserCard = () => {\r\n    const [firstname, setfirstname] = useState(\"\");\r\n    const [lastname, setlastname] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n\r\n    const addUser = async (status) => {\r\n        if (status) {\r\n            let message = \"Successfully Created the User\";\r\n            let body = {firstname, lastname, email};\r\n            const response = await utils.POST_DATA('api/users/create', body, message);\r\n            if (response.status === 200) {\r\n                setfirstname('');\r\n                setlastname('');\r\n                setemail('');\r\n            }else{\r\n                setemail('');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            className=\"addUserForm\"\r\n            model={registerModel}\r\n            onSubmit={(status) => { addUser(status) }}\r\n        >\r\n            <TextField\r\n                name=\"firstname\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(value) => setfirstname(value)}\r\n            />\r\n            <TextField\r\n                name=\"lastname\"\r\n                label=\"Last Name\"\r\n                value={lastname}\r\n                onChange={(value) => setlastname(value)}\r\n            />\r\n            <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={(value) => setemail(value)}\r\n            />\r\n            <Message\r\n                showIcon\r\n                type=\"info\"\r\n                title=\"Did you know?\"\r\n                description=\"The new user will get an email with the temperory password\"\r\n            />\r\n            <Button\r\n                appearance=\"primary\"\r\n                type=\"submit\"\r\n                style={{ width: '100%', marginTop: '20px' }}\r\n                disabled={!firstname || !lastname || !email}\r\n            >\r\n                Create User\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n//data validation for add user\r\nconst registerModel = Schema.Model({\r\n    firstname: StringType().isRequired('First Name is required.'),\r\n    lastname: StringType().isRequired('Last Name is required.'),\r\n    email: StringType().isEmail('Please enter a valid email address.').isRequired('Email is required.'),\r\n});","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from './components/Login';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport AuthRenewRoute from './components/AuthRenew/AuthRenewRoute';\r\nimport ProjectBoard from './components/Sprint/ProjectBoard';\r\nimport Projects from './components/Projects';\r\nimport AuthRenewPage from './components/AuthRenew/AuthRenewPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport Profile from \"./components/Profile\";\r\nimport adminPage from \"./components/Admin/adminPage\";\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        <Route path=\"/ResetPassword\" render={() => <ResetPassword />} />\r\n        <PrivateRoute path=\"/myprojects\" component={aaa} />\r\n        <PrivateRoute exact path=\"/projects\" component={Projects} />\r\n        <PrivateRoute exact path=\"/project/:id\" component={ProjectBoard} />\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" component={adminPage} />\r\n        <AuthRenewRoute path=\"/auth\" component={AuthRenewPage} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nlet aaa = () => <div>rere</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}