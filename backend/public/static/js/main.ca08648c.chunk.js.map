{"version":3,"sources":["assets/loginPage.svg","utility/utils.js","components/Login.js","components/Demo.js","assets/passwordRenew.svg","components/ResetPassword.jsx","components/PrivateRoute.js","components/AuthRenew/AuthRenewRoute.js","assets/logo.svg","components/Navbar.jsx","components/utilitycomponents/Editor.js","components/Sprint/SubTaskForm.jsx","components/NotFound.jsx","assets/noactivesprint.svg","assets/gitBranch.svg","assets/pullrequest.svg","components/Sprint/UserStoryTab.jsx","components/Sprint/SprintTable.jsx","assets/createTicket.svg","assets/sprint.svg","assets/nobacklog.svg","components/Sprint/Backlog.jsx","components/Sprint/SprintHistory.jsx","components/Sprint/UserStoryForm.jsx","components/Sprint/SprintForm.jsx","assets/sprintHome.svg","components/Sprint/sprintHome.jsx","components/Sprint/ProjectBoard.jsx","assets/teamsHome.svg","components/Projects.jsx","assets/bio.svg","assets/git.svg","assets/organization.svg","components/AuthRenew/AuthRenewPage.jsx","assets/imagePlaceHolder.svg","components/Profile.jsx","components/Admin/UsersTable.jsx","assets/admin.svg","components/Admin/adminPage.js","components/collaborate/collaborateSection1.jsx","assets/chat.svg","components/collaborate/collaborateSection2.jsx","components/collaborate/collaborateSection3.jsx","components/collaborate/collaborateHome.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADDRESS","process","FETCH_DATA","api","message","a","token","sessionStorage","getItem","requestOptions","method","headers","Authorization","fetch","response","showNotification","data","status","POST_DATA","body","JSON","stringify","UPDATE_DATA","DELETE_DATA","statusText","msg","json","ok","trim","Notification","success","title","description","style","width","rows","placement","error","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","StringType","Schema","Types","loginModel","Model","email","isRequired","password","TextField","props","name","label","accepter","type","rest","FormGroup","ControlLabel","FormControl","withRouter","useReducer","state","newState","login","users","userLogin","userPass","firstname","resetEmail","show","lastname","setState","util","setItem","access_token","user","userRole","organization","from","pathname","firstLogin","validGitToken","open","resetPassword","emailRegex","match","join","test","String","toLowerCase","useEffect","newUrl","origin","history","pushState","decodeURI","className","display","justifyContent","height","alignContent","alignItems","maxWidth","src","Homeimg","alt","fontSize","fontWeight","lineHeight","marginBottom","textAlign","color","Form","model","onSubmit","onChange","value","Button","appearance","textDecoration","cursor","marginTop","onClick","Modal","backdrop","size","onHide","Header","Title","Divider","Body","Input","Footer","disabled","marginLeft","Demo","StartDemo","console","log","ResetPasswordPage","useState","newpassword","setnewpassword","setconfirmPassword","loading","setloading","changePassword","new_password","authorizeURL","margin","Panel","PasswordRenewSvg","flex","newPassword","addRule","confirmPassword","background","minWidth","PrivateRoute","Component","component","Validated","setValidated","renewAuth","setrenewAuth","isAuthorized","setIsAuthorized","fetchData","render","to","isAuthenticated","setisAuthenticated","CustomNav","active","onSelect","Nav","activeKey","Item","Logo","eventKey","Dropdown","float","marginRight","removeItem","Navbar","handleSelect","bind","route","this","React","Editor","RichTextEditor","createEmptyValue","setvalue","createValueFromString","setText","toString","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","SubTaskForm","selectedCollaborator","setselectedCollaborator","estimatedHours","setestimatedHours","estimatedMinutes","setestimatedMinutes","settitle","setdescription","createUserStory","project_id","acitveSprint","_id","parentId","utils","close","InputPicker","collaborators","map","c","placeholder","InputNumber","postfix","min","max","val","NotFound","FlexboxGrid","colspan","image","UserStoryTab","activetab","setactivetab","userStory","identifier","newBranchName","setnewBranchName","branchFrom","setbranchFrom","comments","setcomments","comment","setcomment","messagesEndRef","useRef","commits","setcommits","base","setBase","pullRequests","setpullRequests","scrollToBottom","current","scrollIntoView","createBranch","branchName","repo","project","sha","userStoryId","refresh","res","getComments","getBranchCommits","git_branch","offset","findIndex","git_branch_sha","slice","getPullRequests","pullrequests","addComment","document","querySelectorAll","forEach","t","Number","getAttribute","data-index","padding","overflowY","overflowX","borderBottom","ref","borderRadius","git_avatar","created_at","componentClass","onPressEnter","flexWrap","gitBranches","Message","GitBranchImg","flexDirection","b","commit","find","Timeline","endless","h","dot","Icon","icon","timestamp","content","author","avatar_url","committer","moment","date","local","format","html_url","PullRequestImg","pr","borderTop","filter","gb","org","head","STORY_STATES","STATE_COLORS","userStories","setuserStories","showdrawer","setshowdrawer","selectedUserStory","setselectedUserStory","setidentifier","assignedTo","setassignedTo","timeSpentHours","settimeSpentHours","timeSpentMinuts","settimeSpentMinuts","moveToBacklog","setmoveToBacklog","setHistory","showModal","setshowModal","setgitBranches","generateTableCards","tableData","push","d","u","parent_task","sort","localeCompare","changeStoryState","id","getUserStories","sprint","userstories","updateUserStory","assigned_to","estimated_time","time_spent","Object","keys","_body","parseHistory","histories","parsedHisotry","returnContent","attribute","old_value","new_value","element","updated_by","getGitBranches","branches","onDragEnd","result","source","destination","sInd","droppableId","dInd","draggableId","resultSet","droppableSource","droppableDestination","sourceClone","Array","destClone","splice","index","removed","move","el","ind","provided","snapshot","innerRef","minHeight","droppableProps","position","left","top","item","draggableProps","dragHandleProps","isDragging","draggableStyle","childTask","userSelect","grid","border","boxShadow","Tag","NoUserStories","Drawer","Toggle","checkedChildren","unCheckedChildren","borderLeft","Backlog","backlogs","setbacklogs","getBacklogs","moveToActiveSprint","userstory","sprint_id","PanelGroup","accordion","defaultActiveKey","bordered","header","NoBacklog","SprintHistory","UserStoryForm","selectedSprint","setselectedSprint","SprintForm","step","setStep","userStoriesDone","setuserStoriesDone","getUserStoriesDone","estimated","hours","mins","defaultValue","moveto_backlog","nextStep","generateReport","createNewSprint","user_stories","Steps","Table","cellBordered","headerHeight","rowHeight","Column","align","verticalAlign","flexGrow","HeaderCell","Cell","dataKey","ColumnGroup","ButtonGroup","SprintHome","setrepo","selectedUser","setselectedUser","addMemberDrawer","setAddMemberDrawer","getRepo","addMember","user_id","getMembers","homeImg","membersIn","Whisper","trigger","speaker","Popover","Avatar","circle","includes","IconButton","data-div-text","clone_url","data-clipboard-text","membersNotIn","m","ButtonToolbar","NavToggle","expand","pullRight","setcollaborators","setMembersNotIn","setproject","setsprints","homeToggle","setHomeToggle","activeSprintToggle","setactiveSprintToggle","createSprintToggle","setcreateSprintToggle","createUserStoryToggle","setcreateUserStoryToggle","viewBacklogToggle","setviewBacklogToggle","sprintHistoryToggle","setsprintHistoryToggle","setexpand","setActiveSprint","url","useRouteMatch","getSprints","currentSprint","sprints","is_done","getProjectById","getAllUsers","navbarToggleHandler","toggleFunction","Container","Sidebar","collapsible","Sidenav","expanded","defaultOpenKeys","Content","SprintTable","NoActiveSprint","SprintImg","CreateTicket","createProjectDrawerModel","styleCenter","slimText","paddingBottom","titleStyle","whiteSpace","createProjectDrawer","setcreateProjectDrawer","projectName","setprojectName","userProjects","setuserProjects","setUserRole","getProjects","projects","createProject","ProjectSvg","List","hover","overflow","project_lead","AuthRenewPage","setuser","currentPassord","setcurrentPassord","setPosition","phone","setphone","setlocation","authenticating","setAuthenticating","organizations","setorganizations","companyName","setcompanyName","gitOrganization","setgitOrganization","getUserData","first_login","git_token","old_password","updateUserData","checkAuthorization","code","getOrganizations","validateInvite","submitOrganization","role","BioSvg","Gitsvg","OrganizationSvg","currentPassword","styles","update__button","disabled__button","block","showIcon","next__button","Profile","editable","seteditable","changeAttribute","setChangeAttribute","openDrawer","setopenDrawer","validImage","setvalidImage","setid","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","onDrop","picture","userTemp","parse","path","main","main__1","main__1__img","ImagePlaceHolder","change__image","main__2","profession","change","info","attribute__container","info__1","info__2","update__password","drawer__body","withIcon","imgExtension","maxFileSize","buttonText","maxHeight","UserRoles","UsersTable","setUsers","selectedRole","setSelectedRole","sortColumn","setSortColumn","setSelectedUser","sortType","setSortType","setOpenDrawer","userStatus","setUserStatus","getUsers","filteredUsers","ImageCell","rowData","TagCell","colour","ProcessCell","percentage","Math","trunc","invitation_accepted","isNaN","Progress","Circle","percent","strokeColor","PassFailIcon","pass","updateUser","x","y","onSortColumn","onRowClick","fixed","sortable","cell","cleanable","checked","adminFunctions","key","AdminPage","setactiveKey","f","function","makeActiveKey","AdminSvg","FunctionCard","AddUserCard","setfirstname","setlastname","setemail","addUser","registerModel","isEmail","CURRENT_USER","CollaborateSection1","currentuser","setcurrentuser","chatGroups","setchatGroups","getData","chatgroups","cg","UserItem","chatGroup","selectedChatGroup","select","selectChatGroup","CollaborateSection2","setMsg","serverConnect","socket","io","connect","REACT_APP_SOCKET","forceNew","transports","on","connected","err","MessageComponent","isAuthor","chatSvg","collaborateSection3","CollaborateHome","setselectedChatGroup","App","aaa","exact","Projects","ProjectBoard","adminPage","AuthRenewRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ca08648c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loginPage.3890a5c6.svg\";","import { Notification } from 'rsuite';\r\n\r\nconst ADDRESS = process.env.REACT_APP_SERVER;\r\n\r\nconst FETCH_DATA = async (api, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return { status: response.status, data }\r\n}\r\n\r\nconst POST_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Access-Control-Expose-Headers': '*',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst UPDATE_DATA = async (api, body, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst DELETE_DATA = async (api, message) => {\r\n    let token = sessionStorage.getItem('sprintCompassToken');\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n    const response = await fetch(`${ADDRESS}${api}`, requestOptions);\r\n    let data = await showNotification(response, message);\r\n\r\n    return {\r\n        status: response.status, data\r\n    }\r\n}\r\n\r\nconst showNotification = async (response, message) => {\r\n\r\n    let data;\r\n    if (response.statusText === \"Not Found\")\r\n        data = { msg: \"Invalid Request\" };\r\n    else\r\n        data = await response.json();\r\n\r\n    if (message !== \"No Notification\") {\r\n        if (!response.ok) {\r\n            Notification.error({\r\n                title: data.msg ?? 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else if (data.msg || (message && message.trim() !== \"\")) {\r\n            Notification.success({\r\n                title: data.msg ?? message,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            })\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nconst getQueryVariable = (variable) => {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split(\"=\");\r\n        if (pair[0] === variable) {\r\n            return pair[1];\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { FETCH_DATA, POST_DATA, UPDATE_DATA, DELETE_DATA, getQueryVariable, ADDRESS };\r\n","import Homeimg from \"../assets/loginPage.svg\";\r\nimport \"../App.css\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Modal, Button, Form, FormGroup, FormControl, ControlLabel, Schema, Notification, Divider, Input\r\n} from 'rsuite';\r\nimport { useReducer, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\n//data validation for login\r\nconst loginModel = Schema.Model({\r\n    email: StringType().isRequired('Email is required.'),\r\n    password: StringType().isRequired('Password is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nfunction Login(props) {\r\n\r\n    const initialState = {\r\n        login: true,\r\n        users: [],\r\n        userLogin: \"\",\r\n        userPass: \"\",\r\n        firstname: \"\",\r\n        resetEmail: \"\",\r\n        show: false,\r\n        lastname: \"\"\r\n    };\r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const [state, setState] = useReducer(reducer, initialState);\r\n\r\n    const login = async (status) => {\r\n        if (status) {\r\n            let body = { email: state.userLogin, password: state.userPass };\r\n            let response = await util.POST_DATA(`auth/login`, body);\r\n            if (response.status === 200) {\r\n                sessionStorage.setItem('sprintCompassToken', response.data.access_token);\r\n                sessionStorage.setItem('sprintCompassUser', response.data.user);\r\n                sessionStorage.setItem('sprintCompassUserName', response.data.name);\r\n                sessionStorage.setItem('sprintCompassUserRole', response.data.userRole);\r\n                sessionStorage.setItem('organization', response.data.organization);\r\n                const { from } = props.location.state || { from: { pathname: '/projects' } }\r\n                if (response.data.firstLogin || !response.data.validGitToken) {\r\n                    window.open(\"/auth\", '_self');\r\n                }\r\n                else {\r\n                    window.open(from.pathname, '_self');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const resetPassword = async () => {\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let resetEmail = state.resetEmail.match(/.{1,29}/g);\r\n        resetEmail = resetEmail.join(' ')\r\n        if (!emailRegex.test(String(state.resetEmail).toLowerCase())) {\r\n            Notification.error({\r\n                title: `Invalid Email`,\r\n                description: <div style={{ width: 220 }} rows={4}> <strong>{resetEmail}</strong> is not a valid email</div>,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let response = await util.FETCH_DATA(`auth/reset_password/${state.resetEmail}`);\r\n            if (response.status === 200) {\r\n                Notification.success({\r\n                    title: `Reset Email Sent`,\r\n                    description: <div style={{ width: 220 }} rows={4}> A reset email has been sent to <br /><strong>{resetEmail}</strong>.</div>,\r\n                    placement: 'topEnd'\r\n                });\r\n            }\r\n        }\r\n\r\n        setState({ show: false, resetEmail: \"\" })\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let msg = util.getQueryVariable(\"msg\");\r\n        let error = util.getQueryVariable(\"error\");\r\n        let success = util.getQueryVariable(\"success\");\r\n        let newUrl = window.location.origin + '/login';\r\n        window.history.pushState({}, null, newUrl);\r\n        if (msg) msg = decodeURI(msg)\r\n        if (error) {\r\n            Notification.error({\r\n                title: msg ? msg : \"Invalid Url\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        else if (success) {\r\n            Notification.success({\r\n                title: \"Password Updated Successfully\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"App\">\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    height: \"900px\",\r\n                    alignContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <img\r\n                        style={{ width: \"100%\", maxWidth: \"750px\" }}\r\n                        src={Homeimg}\r\n                        alt=\"homeimg\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \" center\",\r\n                    }}\r\n                >\r\n                    <div style={{ width: \"80%\", maxWidth: \"450px\" }}>\r\n                        <div\r\n                            style={{\r\n                                fontSize: \"45px\",\r\n                                fontWeight: \"bold\",\r\n                                lineHeight: \"1.2\",\r\n                                marginBottom: \"100px\",\r\n                                textAlign: 'center'\r\n                            }}\r\n                        >\r\n                            Welcome to\r\n                            <br />\r\n                            <span\r\n                                style={{\r\n                                    color: \"#2D56B3\"\r\n                                }}\r\n                            >\r\n                                Run\r\n                            </span>\r\n                            <span style={{ color: \"#515B60\" }}>time</span>\r\n                        </div>\r\n                        {\r\n                            state.login &&\r\n                            <Form\r\n                                className=\"loginForm\"\r\n                                model={loginModel}\r\n                                onSubmit={(status) => { login(status) }}\r\n                            >\r\n                                <TextField\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    onChange={(value) => setState({ userLogin: value })}\r\n                                />\r\n                                <TextField\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={(value) => setState({ userPass: value })}\r\n                                />\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </Form>\r\n                        }\r\n                        <div\r\n                            style={{\r\n                                color: \"blue\",\r\n                                textDecoration: \"underline\",\r\n                                fontSize: \"15px\",\r\n                                cursor: \"pointer\",\r\n                                marginTop: 20,\r\n                                textAlign: 'center'\r\n                            }}\r\n                            onClick={() => setState({ show: true })}\r\n                        >\r\n                            Forgot Password?\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal backdrop={true} size=\"xs\" show={state.show} onHide={() => setState({ show: false, resetEmail: \"\" })}>\r\n                <Modal.Header >\r\n                    <Modal.Title>Reset Your Password</Modal.Title>\r\n                    <Divider style={{ marginBottom: -10, marginTop: 0 }} />\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Please enter your email to receive a password reset link.</p>\r\n                    <Input\r\n                        style={{ width: \"90%\", marginTop: 10 }}\r\n                        name=\"resetemail\"\r\n                        value={state.resetEmail}\r\n                        onChange={(value) => setState({ resetEmail: value })}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Divider style={{ marginBottom: -5, marginTop: 0 }} />\r\n                    <Button\r\n                        disabled={state.resetEmail?.trim() === \"\"}\r\n                        appearance=\"primary\"\r\n                        style={{ marginLeft: \"25%\", width: \"50%\", marginTop: 10 }}\r\n                        onClick={() => resetPassword()}\r\n                    >\r\n                        Reset Password\r\n                    </Button>\r\n                    <Button onClick={() => setState({ show: false, resetEmail: \"\" })} appearance=\"subtle\">\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import util from \"../utility/utils\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Demo(props) {\r\n  const StartDemo = async () => {\r\n    console.log('here');\r\n    let response = await util.FETCH_DATA(`demo`, \"No Notification\");\r\n    console.log(response.data);\r\n    if (response.status === 200) {\r\n      sessionStorage.setItem(\"sprintCompassToken\", response.data.access_token);\r\n      sessionStorage.setItem(\"sprintCompassUser\", response.data.user);\r\n      sessionStorage.setItem(\"sprintCompassUserName\", response.data.name);\r\n      sessionStorage.setItem(\"sprintCompassUserRole\", response.data.userRole);\r\n      sessionStorage.setItem(\"organization\", response.data.organization);\r\n      window.open(\"/projects\", \"_self\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    StartDemo();\r\n  });\r\n  return <></>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/passwordRenew.ce6ee0c2.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PasswordRenewSvg from \"../assets/passwordRenew.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../utility/utils\";\r\nimport {\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    ControlLabel,\r\n    Schema,\r\n    Panel,\r\n    Button,\r\n} from \"rsuite\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function ResetPasswordPage(props) {\r\n\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [loading, setloading] = useState(true);\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            let body = { new_password: newpassword }\r\n            let response = await util.UPDATE_DATA(`api/users/reset_password`, body, \"No Notification\");\r\n            if (response.status === 200) {\r\n              window.open(\"/login?success=true\", \"_self\");\r\n            } else {\r\n              window.open(\r\n                `/login?error=true&msg=${response.data.msg}`,\r\n                \"_self\"\r\n              );\r\n            }\r\n        }\r\n    };\r\n\t\r\n    useEffect(() => {        \r\n\t\tauthorizeURL();\r\n\t}, []);\r\n\r\n    const authorizeURL = async () => {\r\n        let token = util.getQueryVariable(\"token\");\r\n        if(!token){\r\n            window.open('/login?error=true', '_self')\r\n        }\r\n        else{\r\n            sessionStorage.setItem(\"sprintCompassToken\", token);\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            let response =  await fetch(`${util.ADDRESS}auth/validate_url`, requestOptions);\r\n            if(response.status !== 200){\r\n                let data = await response.json();\r\n                window.open(`/login?error=true&msg=${data.msg}`, '_self')\r\n            }else{                \r\n                setloading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"80%\",\r\n                margin: \"auto\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            {\r\n                !loading &&\r\n                <div style={{ width: \"100%\", height: \"80vh\" }}>\r\n                    <h2 style={{ textAlign: \"center\" }}>Reset Your Password</h2>\r\n                    <hr />\r\n                    <Panel style={{ height: \"60vh\" }}>\r\n                        <section style={{ display: \"flex\", height: \"60vh\" }}>\r\n                            <div\r\n                                style={{\r\n                                    width: \"50%\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    style={{ maxWidth: \"550px\" }}\r\n                                    src={PasswordRenewSvg}\r\n                                    alt=\"passwordrenewimg\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8) return false;\r\n                                                return true;\r\n                                            }, \"Password must be atleast 8 characters long\")\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword) return false;\r\n                                                return true;\r\n                                            }, \"The two passwords do not match\")\r\n                                            .isRequired(\"This field is required.\"),\r\n                                    })}\r\n                                    onSubmit={(status) => {\r\n                                        changePassword(status);\r\n                                    }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"newPassword\"\r\n                                        label=\"New Password\"\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={{\r\n                                            marginTop: \"50px\",\r\n                                            background: \"#193A5A\",\r\n                                            color: \"#f5f5f5\",\r\n                                            minWidth: \"300px\",\r\n                                        }}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </section>\r\n                    </Panel>\r\n                    <hr />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../utility/utils\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n\tconst [Validated, setValidated] = useState(false);\r\n\tconst [renewAuth, setrenewAuth] = useState(false);\r\n\tconst [isAuthorized, setIsAuthorized] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst response = await util.FETCH_DATA(`auth/validate`, \"No Notification\");\r\n\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tsetIsAuthorized(false);\r\n\t\t\t} else if (response.status === 307) {\r\n\t\t\t\tsetrenewAuth(true);\r\n\t\t\t}\r\n\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tif (!Validated) {\r\n\t\treturn <Loader\r\n\t\t\tstyle={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n\t\t\ttype=\"BallTriangle\"\r\n\t\t\tcolor=\"#134069\"\r\n\t\t\theight={50}\r\n\t\t\twidth={50}\r\n\t\t/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tisAuthorized ? (\r\n\t\t\t\t\trenewAuth ? (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/auth\",\r\n\t\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\tstate: { from: props.location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport Loader from \"react-loader-spinner\";\r\nimport util from \"../../utility/utils\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const [isAuthenticated, setisAuthenticated] = useState(false);\r\n    const [isAuthorized, setIsAuthorized] = useState(true);\r\n    const [Validated, setValidated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await util.FETCH_DATA(`auth/authrenew_validate`, \"No Notification\");\r\n            if (response.status === 200) {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(true);\r\n            }\r\n            else if (response.status === 403) {\r\n                setIsAuthorized(false);\r\n            }\r\n            else {\r\n                setIsAuthorized(true);\r\n                setisAuthenticated(false);\r\n            }\r\n            setValidated(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (!Validated) {\r\n        return <Loader\r\n            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90vh' }}\r\n            type=\"BallTriangle\"\r\n            color=\"#134069\"\r\n            height={50}\r\n            width={50}\r\n        />\r\n    };\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthorized ? (\r\n                    isAuthenticated ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/projects\",\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","export default __webpack_public_path__ + \"static/media/logo.cbf6ae2c.svg\";","import React from 'react';\r\nimport { Nav, Dropdown } from 'rsuite';\r\nimport Logo from '../assets/logo.svg';\r\nimport '../styling/nav.css';\r\n\r\nconst CustomNav = ({ active, onSelect, ...props }) => {\r\n    const logout = () => {\r\n        sessionStorage.removeItem('sprintCompassToken');\r\n        sessionStorage.removeItem('sprintCompassUser');\r\n        sessionStorage.removeItem('sprintCompassUserName');\r\n        window.open('/login', '_self');\r\n    }\r\n    return (\r\n        <Nav {...props} activeKey={active} onSelect={onSelect}>\r\n            <Nav.Item style={{ margin: '0 50px' }}>\r\n                <img\r\n                    style={{ marginTop: '10px' }}\r\n                    src={Logo} alt=\"logo\"\r\n                    onClick={() => { window.open('/projects', '_self') }}\r\n                />\r\n            </Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"projects\">Projects</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"collaborate\">Collaborate</Nav.Item>\r\n            <Nav.Item className=\"navHeader\" eventKey=\"solutions\">Solutions</Nav.Item>\r\n            {(sessionStorage.getItem('sprintCompassUserRole') === \"owner\" || sessionStorage.getItem('sprintCompassUserRole') === \"admin\") && (\r\n                <Nav.Item className=\"navHeader\" eventKey=\"admin\">\r\n                    Administrator\r\n                </Nav.Item>\r\n            )}\r\n            <Dropdown\r\n                style={{ float: 'right', marginRight: '30px' }}\r\n                className=\"navHeader\"\r\n                title={sessionStorage.getItem('sprintCompassUserName')}>\r\n                <Dropdown.Item\r\n                    onClick={() => window.open('/profile', '_self')}\r\n                >\r\n                    Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>Settings</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => logout()}>Log Out</Dropdown.Item>\r\n            </Dropdown>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: 'home'\r\n        };\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    handleSelect(activeKey) {\r\n        if (activeKey === \"projects\") window.open(window.location.origin + '/projects', '_self');\r\n        else if (activeKey === \"collaborate\") window.open(window.location.origin + '/collaborate', '_self');\r\n        else if (activeKey === \"admin\") window.open(window.location.origin + '/admin', '_self');\r\n    }\r\n\r\n    componentDidMount() {\r\n        let route = window.location.pathname.split('/');\r\n        if (route[1] === 'projects' || route[1] === 'project') {\r\n            this.setState({ active: 'projects' });\r\n        }\r\n        else if (route[1] === 'collaborate') {\r\n            this.setState({ active: 'collaborate' });\r\n        }\r\n        else if (route[1] === 'admin') {\r\n            this.setState({ active: 'admin' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.state;\r\n        return (\r\n            <div>\r\n                <CustomNav appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport RichTextEditor from 'react-rte';\r\n\r\nexport default function Editor(props) {\r\n    const [value, setvalue] = useState(RichTextEditor.createEmptyValue());\r\n\r\n    useEffect(() => {\r\n        setvalue(RichTextEditor.createValueFromString(props.value, 'html'))\r\n    }, []);\r\n\r\n    const onChange = (value) => {\r\n        setvalue(value);\r\n        props.setText(value.toString('html'));\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <RichTextEditor\r\n                value={value}\r\n                onChange={onChange}\r\n                toolbarConfig={toolbarConfig}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst toolbarConfig = {\r\n    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n    INLINE_STYLE_BUTTONS: [\r\n        { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\r\n        { label: 'Italic', style: 'ITALIC' },\r\n        { label: 'Underline', style: 'UNDERLINE' }\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n        { label: 'Text', style: 'unstyled' },\r\n        { label: 'Heading', style: 'header-four' },\r\n        { label: 'Code', style: 'code-block' },\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n        { label: 'UL', style: 'unordered-list-item' },\r\n        { label: 'OL', style: 'ordered-list-item' }\r\n    ]\r\n};","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl } from 'rsuite'\r\nimport Editor from \"../utilitycomponents/Editor\";\r\nimport utils from \"../../utility/utils\";\r\n\r\nexport default function SubTaskForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n\r\n            let body = {\r\n                'title': title,\r\n                'description': description,\r\n                'assigned_to': selectedCollaborator,\r\n                'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n                'project_id': props.project_id,\r\n                'sprint_id': props.acitveSprint._id,\r\n                'parent_task': props.parentId\r\n            };\r\n\r\n            let message = 'Subtask Has Been Created';\r\n\r\n            const response = await utils.POST_DATA('api/userstories', body, message);\r\n\r\n            if (response.status === 200) {\r\n                //clear the fields\r\n                setselectedCollaborator(null);\r\n                setestimatedHours(1);\r\n                setestimatedMinutes(0);\r\n                settitle(\"\");\r\n                setdescription(\"\");\r\n\r\n                props.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <Editor\r\n                setText={(value) => setdescription(value)}\r\n                value={description}\r\n            />\r\n            <label className=\"rs-control-label\">Assign To </label>\r\n            <InputPicker\r\n                data={props.collaborators.map(c => {\r\n                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                })}\r\n                placeholder=\"Assign To\"\r\n                style={{ width: 400 }}\r\n                value={selectedCollaborator}\r\n                onChange={(value) => setselectedCollaborator(value)}\r\n            />\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 250, marginRight: 10 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 250 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\n\r\nexport default function NotFound(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"show-grid\">\r\n                <FlexboxGrid style={{ height: props.height ?? 'calc(100vh - 97px)' }}>\r\n                    <FlexboxGrid.Item\r\n                        style={{ margin: 'auto' }}\r\n                        colspan={12}\r\n                    >\r\n                        <img\r\n                            style={{ width: '80%', display: 'block', margin: 'auto' }}\r\n                            src={props.image}\r\n                            alt=\"\"\r\n                        />\r\n                    </FlexboxGrid.Item>\r\n                    <FlexboxGrid.Item\r\n                        colspan={12}\r\n                        style={{ margin: 'auto', textAlign: 'center', fontSize: '22px' }}\r\n                    >\r\n                        {props.msg}\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/noactivesprint.5cfe79e4.svg\";","export default __webpack_public_path__ + \"static/media/gitBranch.b53578eb.svg\";","export default __webpack_public_path__ + \"static/media/pullrequest.8d345ce7.svg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport GitBranchImg from '../../assets/gitBranch.svg';\r\nimport PullRequestImg from '../../assets/pullrequest.svg';\r\nimport { InputPicker, Input, Button, Notification, Message, Timeline, Icon } from 'rsuite';\r\nimport './userstorytab.css';\r\nimport utils from \"../../utility/utils\";\r\nimport moment from 'moment';\r\n\r\nfunction UserStoryTab(props) {\r\n\r\n    const [activetab, setactivetab] = useState(0);\r\n    const [newBranchName, setnewBranchName] = useState(props.userStory.identifier);\r\n    const [branchFrom, setbranchFrom] = useState(null);\r\n    const [comments, setcomments] = useState([]);\r\n    const [comment, setcomment] = useState('');\r\n    const messagesEndRef = useRef(null)\r\n    const [commits, setcommits] = useState([]);\r\n    const [base, setBase] = useState(null);\r\n    const [pullRequests, setpullRequests] = useState([]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView(true);\r\n    }\r\n\r\n    let createBranch = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ branchName: newBranchName, repo: props.project.repo, sha: branchFrom, userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/git/createBranch`, requestOptions);\r\n        if (response.status === 200) {\r\n            setactivetab(0);\r\n            props.refresh();\r\n            Notification.success({\r\n                title: 'Branch Has Been Created',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n        else {\r\n            let res = await response.json();\r\n            Notification.error({\r\n                title: res.msg,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    const getComments = async () => {\r\n        let response = await utils.FETCH_DATA(`api/userstories/comments/${props.userStory._id}`);\r\n        setcomments(response.data.comments);\r\n    }\r\n\r\n    const getBranchCommits = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getCommitsByBranch?repo=${props.project.repo}&sha=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            let commits = response.data.commits.data;\r\n            if (commits) {\r\n                let offset = commits.findIndex(c => c.sha === props.userStory.git_branch_sha);\r\n                setcommits(commits.slice(0, offset));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPullRequests = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getPullRequestByBranch?repo=${props.project.repo}&head=${props.userStory.git_branch}`);\r\n        if (response.status === 200) {\r\n            setpullRequests(response.data.pullrequests.data);\r\n        }\r\n    }\r\n\r\n\r\n    const addComment = async () => {\r\n        let token = sessionStorage.getItem('sprintCompassToken');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ 'body': comment, user: sessionStorage.getItem('sprintCompassUser'), userStoryId: props.userStory._id })\r\n        };\r\n\r\n        const response = await fetch(`http://localhost:5000/api/userstories/addComment`, requestOptions);\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setcomments(data.comments);\r\n            setcomment('');\r\n        }\r\n        else {\r\n            Notification.error({\r\n                title: data.msg ?? 'Server error, Try again later',\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: 'topEnd'\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tabs = document.querySelectorAll('.us__tabs>div');\r\n        tabs.forEach(t => {\r\n            let [background] = ['#e6e6e6'];\r\n            if (activetab === Number(t.getAttribute('data-index'))) {\r\n                background = '#193A5A';\r\n            }\r\n            t.style['border-bottom'] = `3px solid ${background}`;\r\n        })\r\n\r\n        activetab === 0 && scrollToBottom();\r\n\r\n    }, [activetab, commits])\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n        if (props.userStory.git_branch_sha) {\r\n            getBranchCommits();\r\n            getPullRequests();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [comments])\r\n\r\n    return (\r\n        <section style={{ height: '100%', background: '#f9f9f9' }}>\r\n            <section className='us__tabs'>\r\n                <div data-index='0' onClick={() => setactivetab(0)}>Comments</div>\r\n                {\r\n                    !props.userStory.git_branch &&\r\n                    <div data-index='1' onClick={() => setactivetab(1)}>Github Branch</div>\r\n                }\r\n                <div data-index='2' onClick={() => setactivetab(2)}>History</div>\r\n                <div data-index='3' onClick={() => setactivetab(3)}>Commits</div>\r\n                {\r\n                    props.userStory.git_branch && <div data-index='4' onClick={() => setactivetab(4)}>Pull Request</div>\r\n                }\r\n            </section>\r\n            {\r\n                activetab === 0 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '86%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            comments.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No comments found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            comments.map((c, i) => {\r\n                                return <section\r\n                                    style={{ display: 'flex', width: '100%', margin: '10px 0', borderBottom: '1px solid #e6e6e6', padding: '15px' }}\r\n                                    key={i}\r\n                                    ref={comments.length - 1 === i ? messagesEndRef : null}\r\n                                >\r\n                                    <div style={{ width: '100px' }}>\r\n                                        <img\r\n                                            style={{ width: '55px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.user.git_avatar}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ width: '80%' }}>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: 600, marginRight: '10px' }}>\r\n                                                {`${c.user.firstname} ${c.user.lastname}`}\r\n                                            </span>\r\n                                            <span style={{ float: 'right' }}>\r\n                                                {c.created_at}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div style={{ marginTop: '5px' }}>\r\n                                            {c.body}\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                        <div ref={messagesEndRef} />\r\n                    </section>\r\n                    <section style={{ height: '14%' }}>\r\n                        <Input\r\n                            onChange={(val) => setcomment(val)}\r\n                            componentClass=\"textarea\"\r\n                            value={comment}\r\n                            rows={3}\r\n                            placeholder=\"Add a Comment\"\r\n                            onPressEnter={() => addComment()}\r\n                        />\r\n                        <Button\r\n                            onClick={() => addComment()}\r\n                            disabled={!comment}\r\n                            appearance='primary'\r\n                            style={{ width: '100px', marginTop: '20px', float: 'right' }}\r\n                        >\r\n                            Post\r\n                        </Button>\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 1 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', height: '90%', flexWrap: 'wrap', overflowY: 'hidden' }}>\r\n\r\n                    {\r\n                        props.gitBranches.length === 0 &&\r\n                        <Message\r\n                            type=\"info\"\r\n                            title=\"Empty Repository\"\r\n                            description={\r\n                                <p>You cannot create branch for an empty repo </p>\r\n                            }\r\n                        />\r\n                    }\r\n                    {\r\n                        !props.userStory.git_branch && props.gitBranches.length > 0 &&\r\n                        <>\r\n                            <div style={{ textAlign: 'center', fontSize: '18px', fontWeight: 'bold', width: '100%', marginBottom: '100px' }}>\r\n                                Create Github Branch\r\n                            </div>\r\n                            <section style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section style={{ flex: 1 }}>\r\n                                    <img style={{ width: '80%', margin: 'auto', display: 'block' }} src={GitBranchImg} alt=\"gitbranch\" />\r\n                                </section>\r\n                                <section style={{ flex: 1, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                    <div>\r\n                                        <div style={{ margin: '5px' }}>Branch Out From</div>\r\n                                        <InputPicker\r\n                                            data={props.gitBranches.map((b, i) => {\r\n                                                return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                            })}\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Branch From'\r\n                                            onChange={(value) => {\r\n                                                if (!!value) setbranchFrom(props.gitBranches.find(b => b.name === value).commit.sha);\r\n                                                else\r\n                                                    setbranchFrom(null);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginTop: '15px' }}>\r\n                                        <div style={{ margin: '5px' }}>Branch Name</div>\r\n                                        <Input\r\n                                            style={{ width: 224 }}\r\n                                            placeholder='Name'\r\n                                            onChange={(val) => setnewBranchName(val)}\r\n                                            value={newBranchName}\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        style={{ marginTop: '20px', width: 224 }}\r\n                                        appearance=\"primary\"\r\n                                        disabled={newBranchName === '' || !!!branchFrom}\r\n                                        onClick={() => createBranch()}\r\n                                    >\r\n                                        Create Branch\r\n                                    </Button>\r\n                                </section>\r\n                            </section>\r\n                        </>\r\n                    }\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 2 &&\r\n                <section\r\n                    style={{ width: '100%', height: '90%', padding: '30px', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    className=\"scrollable\"\r\n                >\r\n                    <Timeline endless className=\"custom-timeline\" >\r\n                        {\r\n                            props.history.map(h => {\r\n                                return <Timeline.Item\r\n                                    dot={\r\n                                        <Icon\r\n                                            icon=\"check\"\r\n                                            size=\"2x\"\r\n                                            style={{ background: '#1A3B5A', color: '#fff' }}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <p>{h.timestamp}</p>\r\n                                    <p>{h.user}</p>\r\n                                    <p style={{ fontWeight: 600 }}>{h.content}</p>\r\n                                </Timeline.Item>\r\n                            })\r\n                        }\r\n                    </Timeline>\r\n                </section>\r\n\r\n            }\r\n            {\r\n                activetab === 3 &&\r\n                <section style={{ width: '100%', height: '90%', padding: '30px' }}>\r\n                    <section\r\n                        className=\"scrollable\"\r\n                        style={{ height: '100%', overflowY: 'auto', overflowX: 'hidden' }}\r\n                    >\r\n                        {\r\n                            commits.length === 0 &&\r\n                            <div style={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                No commits found\r\n                            </div>\r\n                        }\r\n                        {\r\n                            commits.map((c, i) => {\r\n                                return <section\r\n                                    style={{ padding: '15px 0', display: 'flex', width: '100%', borderBottom: '1px solid #e6e6e6' }}\r\n                                    key={i}\r\n                                >\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <img\r\n                                            style={{ width: '60px', margin: 'auto', display: 'block', borderRadius: '50%' }}\r\n                                            src={c.author.avatar_url}\r\n                                            alt='avatar'\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span style={{ fontWeight: 600 }}>\r\n                                            {`${c.committer.login}`}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {c.commit.message}\r\n                                    </div>\r\n                                    <div style={{ flex: 2, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        {moment(c.commit.author.date).local().format('YYYY/MM/DD HH:mm:ss')}\r\n                                    </div>\r\n                                    <div style={{ flex: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <span\r\n                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                            onClick={() => window.open(c.html_url, '_blank')}\r\n                                        >\r\n                                            View\r\n                                        </span>\r\n                                    </div>\r\n                                </section>\r\n                            })\r\n                        }\r\n                    </section>\r\n                </section>\r\n            }\r\n            {\r\n                activetab === 4 &&\r\n                <section style={{ display: 'flex', justifyContent: 'center', width: '100%', flexWrap: 'wrap' }}>\r\n                    <section style={{ width: '100%', height: '40vh', display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '20px' }}>\r\n                        <img\r\n                            style={{ height: '80%' }}\r\n                            src={PullRequestImg}\r\n                            alt=\"gitbranch\"\r\n                        />\r\n                    </section>\r\n                    {\r\n                        commits.length > 0 ?\r\n                            <>\r\n                                {\r\n                                    pullRequests.length > 0 &&\r\n                                    <div style={{ marginTop: '30px', width: '100%' }}>\r\n                                        {\r\n                                            pullRequests.map((pr, i) => {\r\n                                                return <section key={i}\r\n                                                    style={{\r\n                                                        display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n                                                        width: '90%', margin: 'auto', textAlign: 'left', borderTop: '1px solid #e6e6e6',\r\n                                                        borderBottom: '1px solid #e6e6e6', padding: '20px 0'\r\n                                                    }}>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <img src={pr.user.avatar_url} alt='git_avatar' style={{ width: '50px', borderRadius: '50%' }} />\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Created By</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>\r\n                                                            {pr.user.login}\r\n                                                        </div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.title}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: 1 }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Pull Request to</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.base.ref}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.75' }}>\r\n                                                        <div style={{ fontSize: '12px' }}>Status</div>\r\n                                                        <div style={{ fontSize: '14px', fontWeight: '600', marginTop: '10px' }}>{pr.state}</div>\r\n                                                    </section>\r\n                                                    <section style={{ flex: '.5' }}>\r\n                                                        <div\r\n                                                            style={{ cursor: 'pointer', color: '#134069' }}\r\n                                                            onClick={() => window.open(pr.html_url, '_blank')}\r\n                                                        >\r\n                                                            View\r\n                                                    </div>\r\n                                                    </section>\r\n                                                </section>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    pullRequests.length === 0 &&\r\n                                    <section style={{ width: '100%', padding: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                                        <div style={{ width: '100%', display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n                                            <div style={{ width: '100%', textAlign: 'center', margin: '5px 0' }}>Base Branch</div>\r\n                                            <InputPicker\r\n                                                data={\r\n                                                    props.gitBranches.filter(gb => gb.name !== props.userStory.git_branch)\r\n                                                        .map((b, i) => {\r\n                                                            return { 'role': b.commit.sha, 'label': b.name, 'value': b.name }\r\n                                                        })\r\n                                                }\r\n                                                style={{ width: 224 }}\r\n                                                placeholder='Base Branch'\r\n                                                onChange={(value) => setBase(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <Button\r\n                                            style={{ marginTop: '20px', width: 224 }}\r\n                                            appearance=\"primary\"\r\n                                            disabled={!!!base}\r\n                                            onClick={() => {\r\n                                                let org = sessionStorage.getItem(\"organization\");\r\n                                                let repo = props.project.repo;\r\n                                                let head = props.userStory.git_branch;\r\n                                                window.open(`https://github.com/${org}/${repo}/compare/${base}...${head}`, '_blank')\r\n                                            }}\r\n                                        >\r\n                                            Create Pull Request\r\n                                        </Button>\r\n                                    </section>\r\n                                }\r\n                            </>\r\n                            : <div>No commits found to make a pull request</div>\r\n                    }\r\n                </section>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserStoryTab\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport utils from \"../../utility/utils\";\r\nimport {\r\n    Drawer, Icon, InputNumber, Button, Toggle, Tag,\r\n    Input, InputPicker, FlexboxGrid, Modal\r\n} from 'rsuite';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport NoUserStories from \"../../assets/noactivesprint.svg\";\r\nimport Editor from \"../utilitycomponents/Editor\";\r\nimport UserStoryTab from \"./UserStoryTab\";\r\n\r\n//four states of the stories, has to match the db\r\nconst STORY_STATES = [\"To Do\", \"In Progress\", \"Testing\", \"Done\"];\r\nconst STATE_COLORS = [\"#01949A\", \"#2196F3\", \"#134069\", \"#4CAF50\"];\r\n\r\n\r\n/*Moves an item from one list to another list.*/\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, childTask) => ({\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: childTask ? `0 0 ${grid}px 20px` : `0 0 ${grid}px 0`,\r\n    borderRadius: '10px',\r\n    // change background colour if dragging\r\n    background: isDragging ? \"#f5f5f5\" : \"#ffffff\",\r\n    border: \"1px solid #e6e6e6\",\r\n    cursor: 'pointer',\r\n    boxShadow: \"0 2px 5px #e6e6e6\",\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (length) => ({\r\n    padding: grid,\r\n    width: 350,\r\n    minHeight: length === 0 ? \"100px\" : \"75vh\",\r\n    margin: \"0 10px\"\r\n});\r\n\r\nfunction Sprint(props) {\r\n\r\n    const [state, setState] = useState(null);\r\n    const [userStories, setuserStories] = useState([]);\r\n    const [showdrawer, setshowdrawer] = useState(false);\r\n    const [selectedUserStory, setselectedUserStory] = useState(null);\r\n\r\n    const [identifier, setidentifier] = useState(\"\");\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [assignedTo, setassignedTo] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(null);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(null);\r\n    const [timeSpentHours, settimeSpentHours] = useState(null);\r\n    const [timeSpentMinuts, settimeSpentMinuts] = useState(null);\r\n    const [moveToBacklog, setmoveToBacklog] = useState(null);\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const [showModal, setshowModal] = useState(false);\r\n\r\n    const [gitBranches, setgitBranches] = useState([]);\r\n\r\n    function onDragEnd(result) {\r\n\r\n        const { source, destination } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        const sInd = +source.droppableId;\r\n        const dInd = +destination.droppableId;\r\n\r\n        if (sInd === dInd) {\r\n            return;\r\n        } else {\r\n            //change the state in the database\r\n            changeStoryState(result.draggableId, STORY_STATES[destination.droppableId]);\r\n\r\n            const resultSet = move(state[sInd], state[dInd], source, destination);\r\n            const newState = [...state];\r\n            newState[sInd] = resultSet[sInd];\r\n            newState[dInd] = resultSet[dInd];\r\n\r\n            newState.forEach(t => {\r\n                t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n            })\r\n\r\n            setState(newState);\r\n        }\r\n    }\r\n\r\n    const generateTableCards = (data) => {\r\n        let tableData = [];\r\n        tableData.push(data.filter(d => d.state === \"To Do\"));\r\n        tableData.push(data.filter(d => d.state === \"In Progress\"));\r\n        tableData.push(data.filter(d => d.state === \"Testing\"));\r\n        tableData.push(data.filter(d => d.state === \"Done\"));\r\n\r\n        tableData.forEach(t => {\r\n            t.forEach(u => {\r\n                if (u.parent_task) {\r\n                    u.identifier = `${u.parent_task.identifier}/${u.identifier}`\r\n                }\r\n            })\r\n            t.sort((a, b) => a.identifier.localeCompare(b.identifier));\r\n        })\r\n\r\n        setState(tableData);\r\n    }\r\n\r\n    const changeStoryState = async (id, state) => {\r\n        \r\n        let body = { _id: id, state };\r\n        const response = await utils.UPDATE_DATA(`api/userstories`, body);\r\n        if (response.status === 200) getUserStories();\r\n    }\r\n\r\n    const getUserStories = async () => {\r\n        const response = await utils.FETCH_DATA(`api/userstories/bySprint/${props.sprint._id}`);\r\n        if (response.status === 200) {\r\n            let data = response.data;\r\n            generateTableCards(data.userstories)\r\n            setuserStories(data.userstories);\r\n            if (!!selectedUserStory) {\r\n                setselectedUserStory(data.userstories.find(u => u._id === selectedUserStory._id));\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateUserStory = async () => {\r\n        let body = {};\r\n\r\n        /*checking what has changed*/\r\n\r\n        //checking if title has changed\r\n        if (title !== selectedUserStory.title) {\r\n            body['title'] = title;\r\n        }\r\n\r\n        //checking if title has changed\r\n        if (description !== selectedUserStory.description) {\r\n            body['description'] = description;\r\n        }\r\n\r\n        //checking if description has changed\r\n        if (assignedTo !== selectedUserStory.assigned_to?._id) {\r\n            body['assigned_to'] = assignedTo;\r\n        }\r\n\r\n        //checking if estimated time has changed\r\n        if (estimatedHours !== selectedUserStory.estimated_time.split(',')[0] ||\r\n            estimatedMinutes !== selectedUserStory.estimated_time.split(',')[1]\r\n        ) {\r\n            body['estimated_time'] = `${estimatedHours},${estimatedMinutes}`;\r\n        }\r\n\r\n        //checking if timespent has changed\r\n        if (timeSpentHours !== selectedUserStory.time_spent?.split(',')[0] ||\r\n            timeSpentMinuts !== selectedUserStory.time_spent?.split(',')[1]\r\n        ) {\r\n            if (timeSpentHours !== \"0\" || timeSpentMinuts !== \"0\") {\r\n                body['time_spent'] = `${timeSpentHours},${timeSpentMinuts}`;\r\n            }\r\n        }\r\n\r\n        //checking if the userstory needs to be moved to backlog\r\n        if (moveToBacklog) {\r\n            body['moveto_backlog'] = true;\r\n        }\r\n        if (Object.keys(body).length === 0) {\r\n            setshowdrawer(false);\r\n            return;\r\n        }\r\n\r\n        body['_id'] = selectedUserStory._id;\r\n        let message = 'User Story Has Been Updated';\r\n        let _body = body;\r\n\r\n        await utils.UPDATE_DATA(`api/userstories`,_body,message);\r\n        setshowdrawer(false);\r\n        getUserStories();\r\n    }\r\n\r\n    let parseHistory = async (histories) => {\r\n\r\n        let parsedHisotry = histories.map((history) => {\r\n            let returnContent = '';\r\n            if (history.attribute === \"user_story\") {\r\n                returnContent = `Created the task`\r\n            }\r\n            else if (history.attribute === \"description\")\r\n                returnContent = `Updated Description`\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed state from \"${history.old_value}\" to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"title\")\r\n                returnContent = `Updated Title to  \"${history.new_value}\"`\r\n\r\n            else if (history.attribute === \"assigned_to\") {\r\n                let assigned_to = props.collaborators.find(element => element._id === history.new_value);\r\n                returnContent = assigned_to ? `Changed Assiginee to ${assigned_to.firstname} ${assigned_to.lastname}` : `Unassigned`;\r\n            }\r\n            else if (history.attribute === \"estimated_time\")\r\n                returnContent = `Re-estimated the task to be completed in ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"time_spent\")\r\n                returnContent = `Increased the time stpent to ${history.new_value.split(',')[0]} hours and  ${history.new_value.split(',')[1]} minutes`\r\n\r\n            else if (history.attribute === \"state\")\r\n                returnContent = `Changed State from ${history.old_value} to ${history.new_value}`\r\n\r\n            else if (history.attribute === \"moveto_backlog\")\r\n                returnContent = `Moved task to backlog.`\r\n\r\n            else if (history.attribute === \"sprint_id\")\r\n                returnContent = `Moved task to sprint ${history.new_value}`\r\n\r\n            let user = props.collaborators.find(element => element._id === history.updated_by);\r\n\r\n            return { 'timestamp': history.timestamp, 'content': returnContent, 'user': `${user?.firstname} ${user?.lastname}` };\r\n        })\r\n\r\n        setHistory(parsedHisotry);\r\n    }\r\n\r\n    const getGitBranches = async () => {\r\n        let response = await utils.FETCH_DATA(`api/git/getAllBranches/${props.project.repo}`);\r\n        if (response.status === 200) {\r\n            let data = response.data.branches.data;\r\n            setgitBranches(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserStories();\r\n        getGitBranches();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !state ?\r\n                    <div style={{ height: '80vh' }}>\r\n                        <Loader\r\n                            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                            type=\"ThreeDots\"\r\n                            color=\"#134069\"\r\n                            height={50}\r\n                            width={50}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"100px 0 10px 0\" }}>\r\n                            <DragDropContext onDragEnd={onDragEnd}>\r\n                                {state.map((el, ind) => (\r\n                                    <Droppable key={ind} droppableId={`${ind}`}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                style={getListStyle(userStories.length)}\r\n                                                {...provided.droppableProps}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        padding: '20px',\r\n                                                        margin: '10px 0',\r\n                                                        color: '#575757',\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: '18px',\r\n                                                        borderTop: `7px solid ${STATE_COLORS[ind]}`,\r\n                                                        position: 'relative'\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        /*not a best practice, doing this for the looks */\r\n                                                        ind === 0 &&\r\n                                                        <div style={{ position: 'absolute', fontSize: '23px', fontWeight: '700', left: 0, top: -80 }}>\r\n                                                            Sprint - {props.sprint.name}\r\n                                                        </div>\r\n                                                    }\r\n                                                    {STORY_STATES[ind]}\r\n                                                </div>\r\n                                                {el.map((item, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Draggable\r\n                                                            key={item._id}\r\n                                                            draggableId={String(item._id)}\r\n                                                            index={index}\r\n                                                        >\r\n                                                            {(provided, snapshot) => (\r\n                                                                <div\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    {...provided.dragHandleProps}\r\n                                                                    style={getItemStyle(\r\n                                                                        snapshot.isDragging,\r\n                                                                        provided.draggableProps.style,\r\n                                                                        !!item.parent_task\r\n                                                                    )}\r\n                                                                    onClick={() => {\r\n                                                                        setshowdrawer(true);\r\n                                                                        setselectedUserStory(item);\r\n                                                                        parseHistory(item.history);\r\n                                                                        setidentifier(item.identifier);\r\n                                                                        settitle(item.title);\r\n                                                                        setdescription(item.description);\r\n                                                                        setassignedTo(item.assigned_to?._id);\r\n                                                                        setestimatedHours(item.estimated_time?.split(',')[0]);\r\n                                                                        setestimatedMinutes(item.estimated_time?.split(',')[1]);\r\n                                                                        settimeSpentHours(item.time_spent ? item.time_spent.split(',')[0] : \"0\");\r\n                                                                        settimeSpentMinuts(item.time_spent ? item.time_spent.split(',')[1] : \"0\");\r\n                                                                        setmoveToBacklog(false);\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div>\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <Tag\r\n                                                                                style={{ color: '#f5f5f5', fontWeight: '600', marginBottom: '10px', background: STATE_COLORS[ind] }}\r\n                                                                            >\r\n                                                                                {item.title}\r\n                                                                            </Tag>\r\n\r\n                                                                            <Tag style={{ fontWeight: '600', marginBottom: '10px', background: '#ececec' }}>\r\n                                                                                {item.identifier}\r\n                                                                            </Tag>\r\n                                                                        </div>\r\n                                                                        <div style={{ marginTop: \"15px\" }}>\r\n                                                                            <Icon\r\n                                                                                icon=\"user-circle-o\"\r\n                                                                                style={{ marginRight: '5px' }}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                item.assigned_to ? `${item.assigned_to.firstname} ${item.assigned_to.lastname}` : 'Unassigned'\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </Draggable>\r\n                                                    </div>\r\n                                                ))}\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n                                ))}\r\n                            </DragDropContext>\r\n                        </div>\r\n                        {\r\n                            userStories.length === 0 &&\r\n                            <NotFound\r\n                                msg=\"No User Stories Found\"\r\n                                image={NoUserStories}\r\n                                height=\"300px\"\r\n                            />\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n            <Drawer\r\n                show={showdrawer}\r\n                onHide={() => {\r\n                    setshowdrawer(false);\r\n                    setselectedUserStory(null);\r\n                }}\r\n                style={{ width: '100%' }}\r\n            >\r\n                <Drawer.Header>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                    {\r\n                        !!selectedUserStory &&\r\n                        <div style={{ display: 'flex', height: '100%', justifyContent: 'space-between' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '40%',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'start',\r\n                                    height: '100%',\r\n                                    flexWrap: 'wrap',\r\n                                    marginLeft: '30px',\r\n                                    textAlign: 'left'\r\n                                }}>\r\n                                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px', width: '100%' }}>\r\n                                    <Icon icon=\"task\" size=\"2x\" />\r\n                                    <h3 style={{ color: '#193A5A', marginLeft: '15px' }}>{identifier}</h3>\r\n                                    <Button\r\n                                        appearance=\"default\"\r\n                                        style={{ background: '#e6e6e6', marginLeft: 'auto' }}\r\n                                        onClick={() => setshowModal(true)}\r\n                                    >\r\n                                        Create Subtask\r\n                                    </Button>\r\n                                </div>\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Title</p>\r\n                                <Input\r\n                                    style={{ fontSize: '20px', width: '100%', fontWeight: 'bold' }}\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                                <p style={{ width: '90%', margin: '20px 0 5px 10px', fontWeight: '600' }}>Description</p>\r\n                                <Editor\r\n                                    setText={(value) => setdescription(value)}\r\n                                    value={description}\r\n                                />\r\n                                <FlexboxGrid style={{ width: '100%', marginTop: '50px' }}>\r\n                                    <FlexboxGrid.Item colspan={12}>\r\n                                        <p style={{ width: '100%', margin: '0 0 5px 15px', fontWeight: '600' }}>Assigned To</p>\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <InputPicker\r\n                                                data={props.collaborators.map(c => {\r\n                                                    return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                                                })}\r\n                                                placeholder=\"Assign To\"\r\n                                                style={{ padding: \"5px 0\", maxWidth: '310px', marginLeft: '12px' }}\r\n                                                value={assignedTo}\r\n                                                onChange={(value) => setassignedTo(value)}\r\n                                            />\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Github Branch</p>\r\n                                        <div\r\n                                            style={{ margin: \"0 15px\" }}\r\n                                        >\r\n                                            {selectedUserStory.git_branch}\r\n                                        </div>\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Move to Backlog</p>\r\n                                        <Toggle\r\n                                            style={{ margin: \"0 12px\" }}\r\n                                            checkedChildren={<Icon icon=\"check\" />}\r\n                                            unCheckedChildren={<Icon icon=\"close\" />}\r\n                                            value={moveToBacklog}\r\n                                            onChange={(val) => setmoveToBacklog(val)}\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item\r\n                                        colspan={12}\r\n                                    >\r\n                                        <p style={{ width: '100%', margin: '0px 0 5px 15px', fontWeight: '600' }}>Estimated Time</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={estimatedHours ?? 0}\r\n                                                onChange={(val) => setestimatedHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={estimatedMinutes ?? 0}\r\n                                                onChange={(val) => setestimatedMinutes(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <p style={{ width: '100%', margin: '20px 0 5px 15px', fontWeight: '600' }}>Time Spent</p>\r\n                                        <div style={{ display: 'flex', marginLeft: '12px' }}>\r\n                                            <InputNumber\r\n                                                style={{ width: 150, marginRight: 10 }}\r\n                                                postfix=\"Hour(s)\"\r\n                                                min={0}\r\n                                                max={50}\r\n                                                value={timeSpentHours ?? 0}\r\n                                                onChange={(val) => settimeSpentHours(val)}\r\n                                            />\r\n                                            <InputNumber\r\n                                                postfix=\"Minute(s)\"\r\n                                                style={{ width: 150 }}\r\n                                                min={0}\r\n                                                max={59}\r\n                                                value={timeSpentMinuts ?? 0}\r\n                                                onChange={(val) => settimeSpentMinuts(val)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                                <div style={{ height: '1px', width: '100%', background: '#e6e6e6', margin: '30px 0' }} />\r\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button\r\n                                        appearance=\"primary\"\r\n                                        style={{ width: '250px' }}\r\n                                        onClick={() => updateUserStory()}\r\n                                    >\r\n                                        Update User Story\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ width: '55%', borderLeft: '1px solid #e6e6e6' }}>\r\n                                <UserStoryTab\r\n                                    gitBranches={gitBranches}\r\n                                    project={props.project}\r\n                                    userStory={selectedUserStory}\r\n                                    refresh={() => getUserStories()}\r\n                                    history={history}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Drawer.Body>\r\n            </Drawer>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                overflowY={false}\r\n                onHide={() => setshowModal(false)}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Create Subtask</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <SubTaskForm\r\n                        project_id={props.project_id}\r\n                        acitveSprint={props.sprint}\r\n                        collaborators={props.collaborators}\r\n                        parentId={selectedUserStory?._id}\r\n                        close={() => {\r\n                            setshowModal(false);\r\n                            getUserStories();\r\n                        }}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Sprint);\r\n","export default __webpack_public_path__ + \"static/media/createTicket.ea7c0d8a.svg\";","export default __webpack_public_path__ + \"static/media/sprint.30c319a6.svg\";","export default __webpack_public_path__ + \"static/media/nobacklog.e26594b8.svg\";","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button, FlexboxGrid, PanelGroup, Panel } from 'rsuite';\r\nimport NotFound from \"../NotFound\";\r\nimport NoBacklog from \"../../assets/nobacklog.svg\";\r\nimport utils from \"../../utility/utils\"\r\n\r\n\r\nexport default function Backlog(props) {\r\n\r\n    const [backlogs, setbacklogs] = useState([]);\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const getBacklogs = async () => {\r\n        setloading(true);\r\n        const response = await utils.FETCH_DATA(`api/userstories/backlogs/${props.project_id}`);\r\n        let data = await response.data;\r\n        setbacklogs(data.userstories);\r\n        setloading(false);\r\n    }\r\n\r\n    const moveToActiveSprint = async (userstory) => {\r\n        let body = {};\r\n        body._id = userstory._id;\r\n        body.sprint_id = props.acitveSprint._id;\r\n        let message = 'User Story Has Been Moved to the Active Sprint';\r\n        let _body = body;\r\n        const response = await utils.UPDATE_DATA(`api/userstories`, _body, message);\r\n        //if updated\r\n        if (response.status === 200) {\r\n            getBacklogs();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBacklogs();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading && backlogs.length === 0 ?\r\n                    <NotFound\r\n                        image={NoBacklog}\r\n                        msg=\"So empty!\"\r\n                    />\r\n                    :\r\n                    <div style={{ margin: '50px auto', width: '80%' }}>\r\n                        <PanelGroup accordion defaultActiveKey={null} bordered>\r\n                            {\r\n                                backlogs.map((b, i) => {\r\n                                    return <Panel key={i} header={b.title} eventKey={i + 1}>\r\n                                        <FlexboxGrid style={{ minHeight: '300px' }}>\r\n                                            <FlexboxGrid.Item colspan={12}>\r\n                                                <div>\r\n                                                    <div\r\n                                                        style={{ fontSize: '20px', fontWeight: 'bold', margin: '10px 0' }}\r\n                                                    >\r\n                                                        {b.title}\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{ padding: '20px', background: '#f5f5f5', height: '250px', overflowY: 'auto' }}\r\n                                                    >\r\n                                                        {b.description}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item colspan={12} style={{ height: '300px' }}>\r\n                                                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                                                    <Button\r\n                                                        style={{ padding: '20px', color: '#f5f5f5', background: '#134069' }}\r\n                                                        disabled={!!!props.acitveSprint}\r\n                                                        onClick={() => moveToActiveSprint(b)}\r\n                                                    >\r\n                                                        Move To Active Sprint\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </Panel>\r\n                                })\r\n                            }\r\n                        </PanelGroup>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SprintHistory() {\r\n    return (\r\n        <div>\r\n            Hello World\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { InputNumber, Button, Form, InputPicker, Schema, FormGroup, ControlLabel, FormControl } from 'rsuite';\r\nimport util from '../../utility/utils';\r\nimport Editor from \"../utilitycomponents/Editor\";\r\n\r\nexport default function UserStoryForm(props) {\r\n\r\n    const [selectedCollaborator, setselectedCollaborator] = useState(null);\r\n    const [estimatedHours, setestimatedHours] = useState(1);\r\n    const [estimatedMinutes, setestimatedMinutes] = useState(0);\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [selectedSprint, setselectedSprint] = useState(null);\r\n\r\n    let createUserStory = async (status) => {\r\n        if (status) {\r\n\r\n            let message = \"User Story Has Been Created\";\r\n            let body = {\r\n                'title': title,\r\n                'description': description,\r\n                'assigned_to': selectedCollaborator,\r\n                'estimated_time': `${estimatedHours},${estimatedMinutes}`,\r\n                'sprint_id': selectedSprint === -1 ? null : selectedSprint,\r\n                'project_id': props.project_id\r\n            };\r\n            await util.POST_DATA('api/userstories', body, message);\r\n            //*go to homescreen\r\n            props.refresh();\r\n        }\r\n    }\r\n\r\n    const getDestinationDropDownVal = () => {\r\n        if (props.acitveSprint)\r\n            return [\r\n                { \"label\": props.acitveSprint.name, \"value\": props.acitveSprint._id },\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n        else\r\n            return [\r\n                { \"label\": \"Backlog\", \"value\": -1 }\r\n            ]\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className=\"loginForm\"\r\n            model={loginModel}\r\n            style={{ margin: 'auto' }}\r\n            onSubmit={(status) => { createUserStory(status) }}\r\n        >\r\n            <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(value) => settitle(value)}\r\n            />\r\n            <Editor\r\n                setText={(value) => setdescription(value)}\r\n                value={description}\r\n            />\r\n\r\n            <div style={{ display: 'flex', marginTop: '20px' }}>\r\n                <div>\r\n                    <label className=\"rs-control-label\">Assign To </label>\r\n                    <InputPicker\r\n                        data={props.collaborators.map(c => {\r\n                            return { \"label\": `${c.firstname} ${c.lastname}`, \"value\": c._id }\r\n                        })}\r\n                        placeholder=\"Assign To\"\r\n                        style={{ width: 200 }}\r\n                        value={selectedCollaborator}\r\n                        onChange={(value) => setselectedCollaborator(value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"rs-control-label\">\r\n                        Select a Destination\r\n                    </label>\r\n                    <InputPicker\r\n                        data={getDestinationDropDownVal()}\r\n                        placeholder=\"Destination\"\r\n                        style={{ width: 200 }}\r\n                        value={selectedSprint}\r\n                        onChange={(value) => setselectedSprint(value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <label\r\n                style={{ margin: \"25px 0 5px\" }}\r\n                className=\"rs-control-label\" >\r\n                Estimated Time\r\n            </label>\r\n            <div style={{ display: 'flex', marginBottom: 30 }}>\r\n                <InputNumber\r\n                    style={{ width: 200, marginRight: 23 }}\r\n                    postfix=\"Hour(s)\"\r\n                    min={0}\r\n                    max={50}\r\n                    value={estimatedHours}\r\n                    onChange={(val) => setestimatedHours(val)}\r\n                />\r\n                <InputNumber\r\n                    postfix=\"Minute(s)\"\r\n                    style={{ width: 200 }}\r\n                    min={0}\r\n                    max={59}\r\n                    value={estimatedMinutes}\r\n                    onChange={(val) => setestimatedMinutes(val)}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                style={{ width: '100%', background: \"#134069\", color: '#f5f5f5' }}\r\n                disabled={title === \"\" || description === \"\"}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//data validation for create user story\r\nconst loginModel = Schema.Model({\r\n    title: StringType().isRequired('Title is required.')\r\n});\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport utils from \"../../utility/utils\";\r\nimport {\r\n    InputNumber, Button, Form, FormGroup, ControlLabel, FormControl,\r\n    Table, Toggle, Steps, Panel, ButtonGroup\r\n} from 'rsuite';\r\n\r\n\r\nexport default function SprintForm(props) {\r\n    const [title, settitle] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [step, setStep] = useState(0);\r\n    const [userStoriesDone, setuserStoriesDone] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!!props.acitveSprint)\r\n            getUserStoriesDone();\r\n    }, []);\r\n\r\n    const getUserStoriesDone = async () => {\r\n        const response = await utils.FETCH_DATA(`api/userstories/unfinishedTask/${props.acitveSprint._id}`);\r\n        let data = await response.data;\r\n        let tableData = [];\r\n        data.userstories.forEach((d, i) => {\r\n            let estimated = d.estimated_time.split(',');\r\n            tableData.push({\r\n                \"story\": d.identifier,\r\n                \"estimated_hours\": estimated[0],\r\n                \"estimated_mins\": estimated[1],\r\n                \"re_estimated_hours\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].hours = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={50}\r\n                    min={0}\r\n                />,\r\n                \"re_estimated_mins\": <InputNumber\r\n                    onChange={(val) => {\r\n                        tableData[i].mins = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                    max={59}\r\n                    min={0}\r\n                    defaultValue={0}\r\n                />,\r\n                \"move_to_backlog\": <Toggle\r\n                    onChange={(val) => {\r\n                        tableData[i].moveto_backlog = val;\r\n                        setuserStoriesDone(tableData);\r\n                    }}\r\n                />,\r\n                \"moveto_backlog\": false,\r\n                \"hours\": 0,\r\n                \"mins\": 0,\r\n                \"id\": d._id\r\n            });\r\n        });\r\n        setuserStoriesDone(tableData);\r\n    }\r\n\r\n    const onChange = nextStep => {\r\n        setStep(nextStep < 0 ? 0 : nextStep > 3 ? 3 : nextStep);\r\n    };\r\n\r\n    const onNext = () => {\r\n        if (!title || !description) return;\r\n        if (step === 1 && userStoriesDone.find(u => Number(u.hours) === 0 && Number(u.mins) === 0)) {\r\n            return;\r\n        }\r\n        onChange(step + 1);\r\n    }\r\n\r\n    const onPrevious = () => onChange(step - 1);\r\n\r\n    const generateReport = async () => {\r\n        //generate report\r\n        return;\r\n    }\r\n\r\n    const createNewSprint = async () => {\r\n        let user_stories = [];\r\n        userStoriesDone.forEach(u => {\r\n            user_stories.push({\r\n                'id': u.id,\r\n                'estimated_time': `${u.hours},${u.mins}`,\r\n                'moveto_backlog': u.moveto_backlog\r\n            });\r\n        });\r\n\r\n        if (props.acitveSprint) {\r\n            await generateReport();\r\n        }\r\n        \r\n        let message = \"Sprint Created Successfully\";\r\n        let body = { \r\n                    'name': title,\r\n                    'description': description,\r\n                    'project_id': props.project_id,\r\n                    'sprint_id': props.acitveSprint ? props.acitveSprint._id : null,\r\n                     user_stories\r\n                    };\r\n\r\n        const response = await utils.POST_DATA('api/sprints',body ,message);\r\n        if (response.status === 200) {\r\n            props.refresh();\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    fontSize: '25px',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    marginBottom: '35px',\r\n                    fontWeight: '400'\r\n                }}\r\n            >\r\n                Create Sprint\r\n            </div>\r\n\r\n            <div style={{ padding: '0 40px', width: '90%' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Sprint Info\" description=\"Sprint Information\" />\r\n                    {\r\n                        props.acitveSprint && <Steps.Item title=\"Manage User Stories\" description=\"Re-Estimate/ Move to Backlog\" />\r\n                    }\r\n                    <Steps.Item title=\"Submit\" description=\"Create New Sprint\" />\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '40vh', padding: '0' }}>\r\n                    {\r\n                        step === 0 &&\r\n                        <Form\r\n                            className=\"loginForm\"\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '70%', margin: '10px 0' }}>\r\n                                <TextField\r\n                                    name=\"title\"\r\n                                    label=\"Title\"\r\n                                    value={title}\r\n                                    onChange={(value) => settitle(value)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '70%' }}>\r\n                                <TextField\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={description}\r\n                                    onChange={(value) => setdescription(value)}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                    {\r\n                        props.acitveSprint && step === 1 &&\r\n                        <Table\r\n                            cellBordered\r\n                            height={350}\r\n                            data={userStoriesDone}\r\n                            headerHeight={80}\r\n                            rowHeight={60}\r\n                            style={{ border: '1px solid #e6e6e6' }}\r\n                        >\r\n                            <Table.Column align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.HeaderCell>User Story</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"story\" />\r\n                            </Table.Column>\r\n\r\n                            <Table.ColumnGroup align=\"center\" verticalAlign=\"middle\" header=\"Estimated\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.ColumnGroup header=\"Re-Estimate\" align=\"center\" verticalAlign=\"middle\" flexGrow={1}>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Hours</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_hours\" />\r\n                                </Table.Column>\r\n                                <Table.Column>\r\n                                    <Table.HeaderCell>Minutes</Table.HeaderCell>\r\n                                    <Table.Cell dataKey=\"re_estimated_mins\" />\r\n                                </Table.Column>\r\n                            </Table.ColumnGroup>\r\n\r\n                            <Table.Column flexGrow={1} align=\"center\" verticalAlign=\"middle\">\r\n                                <Table.HeaderCell>Move to Backlog</Table.HeaderCell>\r\n                                <Table.Cell dataKey=\"move_to_backlog\" />\r\n                            </Table.Column>\r\n                        </Table>\r\n                    }\r\n                    {\r\n                        (step === 2 || !props.acitveSprint) &&\r\n                        <div\r\n                            style={{\r\n                                margin: 'auto',\r\n                                display: 'flex',\r\n                                alignContent: 'center',\r\n                                justifyContent: 'center',\r\n                                flexWrap: 'wrap',\r\n                                height: '35vh'\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                style={{ width: '300px', background: \"#134069\", color: '#f5f5f5' }}\r\n                                onClick={createNewSprint}\r\n                            >\r\n                                Create Sprint\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n                <hr />\r\n                <ButtonGroup>\r\n                    <Button onClick={onPrevious} disabled={step === 0}>\r\n                        Previous\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={onNext} disabled={props.acitveSprint ? step === 2 : step === 1}>\r\n                        Next\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/sprintHome.9f97a044.svg\";","import React, { useState, useEffect } from 'react'\r\nimport homeImg from \"../../assets/sprintHome.svg\";\r\nimport util from \"../../utility/utils\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport { IconButton, Icon, Button, Avatar, Drawer, Form, InputPicker, ButtonToolbar, Whisper, Popover } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction SprintHome(props) {\r\n\tconst [repo, setrepo] = useState(null);\r\n\tconst [selectedUser, setselectedUser] = useState(null);\r\n\tconst [addMemberDrawer, setAddMemberDrawer] = useState(false);\r\n\r\n\tconst getRepo = async () => {\r\n\t\tlet response = await util.FETCH_DATA(`api/git/getRepo/${props.project.repo}`);\r\n\t\tsetrepo(response.data.repo.data);\r\n\t};\r\n\r\n\tconst addMember = async () => {\r\n\t\tlet body = {\r\n\t\t\tproject_id: props.project._id,\r\n\t\t\tuser_id: selectedUser,\r\n\t\t};\r\n\t\tlet successMessage = \"Successfully added the user\";\r\n\t\tawait util.UPDATE_DATA(`api/projects/addMember`, body, successMessage);\r\n\t\tsetAddMemberDrawer(false);\r\n\t\tprops.getMembers(props.project._id);\r\n\t\tgetRepo();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRepo();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section style={{ display: \"flex\", height: \"70vh\" }}>\r\n\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t<img style={{ maxWidth: \"700px\", display: \"block\", margin: \"auto\" }} src={homeImg} alt=\"homeimg\" />\r\n\t\t\t\t</section>\r\n\t\t\t\t{\r\n\t\t\t\t\t(repo && props.membersIn && props.membersIn.length > 0) ?\r\n\t\t\t\t\t\t<section style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignContent: \"center\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"30px\", fontWeight: \"bold\" }}>{props.project.name}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", marginTop: \"10px\" }}>{props.project.description}</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", textAlign: \"center\", fontSize: \"20px\", marginTop: \"40px\", fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\tContributors\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"avatar-group\" style={{ justifyContent: \"center\", display: \"flex\", width: \"50%\", margin: \"auto\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t\t\t\t\t{props.membersIn.map((t, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Whisper\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger=\"hover\"\r\n\t\t\t\t\t\t\t\t\t\t\tplacement={\"top\"}\r\n\t\t\t\t\t\t\t\t\t\t\tspeaker={<Popover title={`${t.firstname} ${t.lastname}`}></Popover>}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\tcircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#828282\", cursor: \"pointer\", margin: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={t.git_avatar}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Whisper>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"40px\" }}>\r\n\t\t\t\t\t\t\t\t{[\"owner\", \"admin\"].includes(sessionStorage.getItem(\"sprintCompassUserRole\").toLowerCase()) && (\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"user-plus\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"10px\", border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setAddMemberDrawer(true)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAdd Member\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ border: \"1px solid #e6e6e6\", }}\r\n\t\t\t\t\t\t\t\t\ticon={<Icon icon=\"github\" />} placement=\"left\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => window.open(repo.html_url, \"_blank\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tOpen with Github\r\n      \t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginTop: \"40px\", display: \"flex\" }}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tdata-div-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#e6e6e6\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '5px 0 0 5px' }}>\r\n\t\t\t\t\t\t\t\t\t\tClone Url\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: \"#f5f5f5\", padding: \"8px\", border: \"1px solid #e6e6e6\", borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{repo.clone_url}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Clipboard\r\n\t\t\t\t\t\t\t\t\tdata-clipboard-text={repo.clone_url}\r\n\t\t\t\t\t\t\t\t\tstyle={{ background: '#134069', color: '#f5f5f5', width: '60px', borderRadius: '0 5px 5px 0' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tcopy\r\n\t\t\t\t\t\t\t\t</Clipboard>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section> :\r\n\t\t\t\t\t\t<Loader\r\n\t\t\t\t\t\t\tstyle={{ width: \"50%\", display: \"flex\", justifyContent: \"center\", height: \"100%\", alignItems: \"center\" }}\r\n\t\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={addMemberDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tsetAddMemberDrawer(false);\r\n\t\t\t\t\tsetselectedUser(null);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className=\"drawerBody\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\taddMember();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h5 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>Add a Member</h5>\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length === 0 && <div style={{ textAlign: \"center\" }}>No new members to add</div>}\r\n\t\t\t\t\t\t\t{props.membersNotIn && props.membersNotIn.length > 0 && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\t\tdata={props.membersNotIn.map((m) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn { label: m.firstname + \" \" + m.lastname, value: m._id };\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 224 }}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(value) => setselectedUser(value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<Button appearance=\"primary\" type=\"submit\" style={{ width: \"100%\", margin: \"30px 0\" }} disabled={!selectedUser}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default SprintHome\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Sidenav, Dropdown, Nav, Container, Icon,\r\n    Content, Sidebar, Navbar, FlexboxGrid\r\n} from 'rsuite';\r\nimport { useRouteMatch, withRouter } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport MainNavbar from '../Navbar';\r\nimport SprintTable from './SprintTable';\r\nimport CreateTicket from \"../../assets/createTicket.svg\";\r\nimport SprintImg from \"../../assets/sprint.svg\";\r\nimport NoActiveSprint from \"../../assets/noactivesprint.svg\";\r\nimport Backlog from \"./Backlog\";\r\nimport SprintHistory from \"./SprintHistory\";\r\nimport UserStoryForm from \"./UserStoryForm\";\r\nimport SprintForm from \"./SprintForm\";\r\nimport NotFound from \"../NotFound\";\r\nimport SprintHome from \"./sprintHome\";\r\nimport utils from \"../../utility/utils\";\r\n\r\n\r\nconst NavToggle = ({ expand, onChange }) => {\r\n    return (\r\n        <Navbar appearance=\"inverse\"\r\n            style={{ background: '#134069' }}\r\n            className=\"nav-toggle\"\r\n        >\r\n            <Navbar.Body>\r\n                <Nav pullRight>\r\n                    <Nav.Item onClick={onChange} style={{ width: 56, textAlign: 'center' }}>\r\n                        <Icon icon={expand ? 'angle-left' : 'angle-right'} />\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Body>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nfunction ProjectBoard() {\r\n    const [collaborators, setcollaborators] = useState([]);\r\n    const [membersNotIn, setMembersNotIn] = useState([]);\r\n    const [project, setproject] = useState(null);\r\n    const [sprints, setsprints] = useState([]);\r\n\r\n    const [homeToggle, setHomeToggle] = useState(true);\r\n    const [activeSprintToggle, setactiveSprintToggle] = useState(false);\r\n    const [createSprintToggle, setcreateSprintToggle] = useState(false);\r\n    const [createUserStoryToggle, setcreateUserStoryToggle] = useState(false);\r\n    const [viewBacklogToggle, setviewBacklogToggle] = useState(false);\r\n    const [sprintHistoryToggle, setsprintHistoryToggle] = useState(false);\r\n\r\n    const [expand, setexpand] = useState(true);\r\n    const [acitveSprint, setActiveSprint] = useState(null);\r\n\r\n    let { url } = useRouteMatch();\r\n\r\n    let getSprints = async () => {\r\n\r\n        const response = await utils.FETCH_DATA(`api/sprints/allByProjectId/${url.split('/')[2]}`);\r\n        let data = response.data;\r\n        let currentSprint = data.sprints.find(d => !d.is_done);\r\n        setActiveSprint(currentSprint);\r\n        setsprints(data.sprints);\r\n    }\r\n\r\n    let getProjectById = async () => {\r\n        const response = await utils.FETCH_DATA(`api/projects/byProjectId/${url.split('/')[2]}`);\r\n        let data = response.data;\r\n        getAllUsers(data.project._id)\r\n        setproject(data.project);\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setexpand(!expand);\r\n    }\r\n\r\n    const navbarToggleHandler = (toggleFunction) => {\r\n        setactiveSprintToggle(false);\r\n        setcreateUserStoryToggle(false);\r\n        setcreateSprintToggle(false);\r\n        setviewBacklogToggle(false);\r\n        setsprintHistoryToggle(false);\r\n        setHomeToggle(false);\r\n\r\n        toggleFunction(true);\r\n    };\r\n\r\n    const getAllUsers = async (project_id) => {\r\n        let response = await utils.FETCH_DATA(`api/projects/members/${project_id}`);\r\n        setcollaborators(response.data.membersIn);\r\n        setMembersNotIn(response.data.membersNotIn);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSprints();\r\n        getProjectById();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar />\r\n            <div className=\"show-fake-browser sidebar-page\">\r\n                <Container>\r\n                    <Sidebar\r\n                        style={{ display: 'flex', flexDirection: 'column' }}\r\n                        width={expand ? 260 : 56}\r\n                        collapsible\r\n                    >\r\n                        <Sidenav\r\n                            expanded={expand}\r\n                            defaultOpenKeys={['3', '4']}\r\n                            appearance=\"inverse\"\r\n                            style={{ background: '#134069', minHeight: 'calc(100vh - 94px)', height: '100%' }}\r\n                        >\r\n                            <Sidenav.Body>\r\n                                <Nav>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        icon={<Icon icon=\"home\" />}\r\n                                        active={homeToggle}\r\n                                        onClick={() => navbarToggleHandler(setHomeToggle)}\r\n                                    >\r\n                                        Home\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"3\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Sprint Planning\"\r\n                                        icon={<Icon icon=\"magic\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-3\"\r\n                                            active={activeSprintToggle}\r\n                                            icon={<Icon icon=\"dashboard\" />}\r\n                                            onClick={() => navbarToggleHandler(setactiveSprintToggle)}\r\n                                        >\r\n                                            Active Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item eventKey=\"3-2\"\r\n                                            active={createSprintToggle}\r\n                                            icon={<Icon icon=\"plus-square\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateSprintToggle)}\r\n                                        >\r\n                                            Create New Sprint\r\n                                        </Dropdown.Item>\r\n\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"3-1\"\r\n                                            active={createUserStoryToggle}\r\n                                            icon={<Icon icon=\"newspaper-o\" />}\r\n                                            onClick={() => navbarToggleHandler(setcreateUserStoryToggle)}\r\n                                        >\r\n                                            Create User Story\r\n                                        </Dropdown.Item>\r\n\r\n                                    </Dropdown>\r\n                                    <Nav.Item\r\n                                        eventKey=\"2\"\r\n                                        active={viewBacklogToggle}\r\n                                        icon={<Icon icon=\"toggle-left\" />}\r\n                                        onClick={() => navbarToggleHandler(setviewBacklogToggle)}\r\n                                    >\r\n                                        View Backlog\r\n                                    </Nav.Item>\r\n                                    <Dropdown\r\n                                        eventKey=\"4\"\r\n                                        trigger=\"hover\"\r\n                                        title=\"Advanced\"\r\n                                        icon={<Icon icon=\"gear-circle\" />}\r\n                                        placement=\"rightStart\"\r\n                                    >\r\n                                        <Dropdown.Item\r\n                                            eventKey=\"4-1\"\r\n                                            active={sprintHistoryToggle}\r\n                                            onClick={() => navbarToggleHandler(setsprintHistoryToggle)}\r\n                                            icon={<Icon icon=\"history\" />}\r\n                                        >\r\n                                            Sprint History\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-2\">Websites</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-3\">Channels</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-4\">Tags</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"4-5\">Versions</Dropdown.Item>\r\n                                    </Dropdown>\r\n                                </Nav>\r\n                            </Sidenav.Body>\r\n                            <NavToggle expand={expand} onChange={handleToggle} />\r\n                        </Sidenav>\r\n                    </Sidebar>\r\n\r\n                    <Container>\r\n                        <Content>\r\n                            {\r\n                                homeToggle && !!project &&\r\n                                <SprintHome\r\n                                    project={project}\r\n                                    membersIn={collaborators}\r\n                                    membersNotIn={membersNotIn}\r\n                                    getMembers={getAllUsers}\r\n                                />\r\n                            }\r\n                            {\r\n                                activeSprintToggle &&\r\n                                <div>\r\n\r\n                                    {\r\n                                        acitveSprint ?\r\n                                            <SprintTable\r\n                                                sprint={acitveSprint}\r\n                                                collaborators={collaborators}\r\n                                                project_id={url.split('/')[2]}\r\n                                                project={project}\r\n                                            /> :\r\n                                            <NotFound\r\n                                                image={NoActiveSprint}\r\n                                                msg=\"No Active Sprint Found\"\r\n                                            />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createSprintToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 94px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={8}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={SprintImg}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={16}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <SprintForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    refresh={() => {\r\n                                                        navbarToggleHandler(setHomeToggle);\r\n                                                        getSprints()\r\n                                                    }}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                createUserStoryToggle &&\r\n                                <div>\r\n                                    <div className=\"show-grid\">\r\n                                        <FlexboxGrid style={{ background: '#f5f5f5', height: 'calc(100vh - 94px)' }}>\r\n                                            <FlexboxGrid.Item\r\n                                                style={{ margin: 'auto' }}\r\n                                                colspan={12}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"dashBoardSectionImg\"\r\n                                                    src={CreateTicket}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                            <FlexboxGrid.Item\r\n                                                colspan={12}\r\n                                                style={{ margin: 'auto' }}\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        fontSize: '25px',\r\n                                                        display: 'block',\r\n                                                        textAlign: 'center',\r\n                                                        marginBottom: '15px',\r\n                                                        fontWeight: '400'\r\n                                                    }}\r\n                                                >\r\n                                                    Create User Story\r\n                                                </div>\r\n                                                <UserStoryForm\r\n                                                    project_id={url.split('/')[2]}\r\n                                                    acitveSprint={acitveSprint}\r\n                                                    collaborators={collaborators}\r\n                                                    refresh={() => navbarToggleHandler(setHomeToggle)}\r\n                                                />\r\n                                            </FlexboxGrid.Item>\r\n                                        </FlexboxGrid>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                viewBacklogToggle &&\r\n                                <Backlog project_id={url.split('/')[2]} acitveSprint={acitveSprint} />\r\n                            }\r\n                            {\r\n                                sprintHistoryToggle &&\r\n                                <SprintHistory />\r\n                            }\r\n                        </Content>\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ProjectBoard);","export default __webpack_public_path__ + \"static/media/teamsHome.331c024c.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ProjectSvg from \"../assets/teamsHome.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n    Drawer, Icon, Button, Form, FormGroup, FormControl, ControlLabel,\r\n    ButtonToolbar, Schema, List, FlexboxGrid\r\n} from 'rsuite';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Navbar from './Navbar'\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n//model for create project\r\nconst createProjectDrawerModel = Schema.Model({\r\n    name: StringType().isRequired('Name is required.'),\r\n    description: StringType().isRequired('Description is required.')\r\n});\r\n\r\n//custom text field\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styleCenter = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '60px'\r\n};\r\n\r\nconst slimText = {\r\n    fontSize: '0.9em',\r\n    color: '#97969B',\r\n    fontWeight: 'lighter',\r\n    paddingBottom: 3\r\n};\r\n\r\nconst titleStyle = {\r\n    paddingBottom: 5,\r\n    whiteSpace: 'nowrap',\r\n    fontWeight: 500\r\n};\r\n\r\nfunction Projects(props) {\r\n    const [createProjectDrawer, setcreateProjectDrawer] = useState(false);\r\n    const [projectName, setprojectName] = useState(\"\");\r\n    const [description, setdescription] = useState(\"\");\r\n    const [userProjects, setuserProjects] = useState([]);\r\n    const [userRole, setUserRole] = useState([]);\r\n    const [loading, setloading] = useState(false);\r\n\r\n    let getProjects = async () => {\r\n        setloading(true);\r\n        setUserRole(sessionStorage.getItem('sprintCompassUserRole'));\r\n        const response = await util.FETCH_DATA(`api/projects`);\r\n        setuserProjects(response.data.projects);\r\n        setloading(false);\r\n    }\r\n\r\n    let close = () => {\r\n        setcreateProjectDrawer(false);\r\n        setprojectName(\"\");\r\n        setdescription(\"\");\r\n    }\r\n\r\n    let createProject = async (status) => {\r\n        if (status) {\r\n            let message = \"Project Has Been Created\";\r\n            let body = { 'name': projectName, 'description': description };\r\n            await util.POST_DATA(`api/projects`, body, message);\r\n            close();\r\n            getProjects();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"projectBannerContainer\">\r\n                <div className=\"teamImageContainer\">\r\n                    <img\r\n                        style={{ width: \"80%\", maxWidth: \"600px\" }}\r\n                        src={ProjectSvg}\r\n                        alt=\"ProjectSvg\"\r\n                    />\r\n                </div>\r\n                <div className=\"projectImageContainer\">\r\n                    <div\r\n                        style={{\r\n                            fontSize: \"45px\",\r\n                            fontWeight: \"bold\",\r\n                            lineHeight: \"1.2\",\r\n                            marginBottom: \"50px\",\r\n                            width: '100%',\r\n                            textAlign: 'center'\r\n                        }}\r\n                    >\r\n                        Welcome to\r\n                        <br />\r\n                        <span\r\n                            style={{ color: \"#2D56B3\" }}\r\n                        >\r\n                            Run\r\n                        </span>\r\n                        <span style={{ color: \"#515B60\" }}>time</span>\r\n                    </div>\r\n                    {(userRole === \"owner\" || userRole === \"admin\") && (\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div className=\"teamButtons\" onClick={() => setcreateProjectDrawer(true)}>\r\n                                Create a Project\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            {\r\n                loading &&\r\n                <Loader\r\n                    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                    type=\"ThreeDots\"\r\n                    color=\"#134069\"\r\n                    height={50}\r\n                    width={50}\r\n                />\r\n            }\r\n            <div>\r\n                <div className=\"projectHomeHeader\">Your Projects</div>\r\n                <List hover style={{ width: '80%', margin: 'auto' }}>\r\n                    {userProjects.map((item, index) => (\r\n                        <List.Item key={item._id} index={index}>\r\n                            <FlexboxGrid>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={10}\r\n                                    style={{\r\n                                        ...styleCenter,\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'flex-start',\r\n                                        overflow: 'hidden'\r\n                                    }}\r\n                                >\r\n                                    <div style={titleStyle}>{item.name}</div>\r\n                                    <div style={slimText}>\r\n                                        <div>Description</div>\r\n                                        <div>{item.description}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={6} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Project Lead</div>\r\n                                        <div>\r\n                                            <Icon icon=\"user-circle-o\" />\r\n                                            {`  ${item.project_lead.firstname} ${item.project_lead.lastname}`}\r\n                                        </div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item colspan={5} style={styleCenter}>\r\n                                    <div>\r\n                                        <div style={slimText}>Start Date</div>\r\n                                        <div style={slimText}>{item.created_at}</div>\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item\r\n                                    colspan={3}\r\n                                    style={{ ...styleCenter, justifyContent: 'center' }}\r\n                                >\r\n                                    <div\r\n                                        style={{ cursor: 'pointer', color: '#134069' }}\r\n                                        onClick={() => props.history.push(`project/${item._id}`)}\r\n                                    >\r\n                                        View\r\n                                    </div>\r\n                                </FlexboxGrid.Item>\r\n                            </FlexboxGrid>\r\n                        </List.Item>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            {\r\n                userProjects.length === 0 && !loading && <div style={{ textAlign: 'center' }}>No Projects Found</div>\r\n            }\r\n            <Drawer\r\n                show={createProjectDrawer}\r\n                onHide={() => { close() }}\r\n            >\r\n                <Drawer.Body>\r\n                    <div className=\"drawerBody\">\r\n                        <Form\r\n                            model={createProjectDrawerModel}\r\n                            onSubmit={(status) => { createProject(status) }}\r\n                        >\r\n                            <h5 style={{ textAlign: 'center', marginBottom: '50px' }}>Create a Project</h5>\r\n                            <TextField\r\n                                name=\"name\"\r\n                                label=\"Project Name\"\r\n                                onChange={(value) => setprojectName(value)}\r\n                            />\r\n                            <TextField\r\n                                name=\"description\"\r\n                                label=\"Description\"\r\n                                onChange={(value) => setdescription(value)}\r\n                            />\r\n                            <ButtonToolbar>\r\n                                <Button\r\n                                    appearance=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </ButtonToolbar>\r\n                        </Form>\r\n                    </div>\r\n                </Drawer.Body>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Projects);\r\n","export default __webpack_public_path__ + \"static/media/bio.c14203e2.svg\";","export default __webpack_public_path__ + \"static/media/git.8ed5ab3d.svg\";","export default __webpack_public_path__ + \"static/media/organization.451cba29.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PasswordRenewSvg from '../../assets/passwordRenew.svg';\r\nimport BioSvg from '../../assets/bio.svg';\r\nimport Gitsvg from '../../assets/git.svg';\r\nimport OrganizationSvg from '../../assets/organization.svg';\r\nimport './authrenew.css';\r\nimport util from \"../../utility/utils\";\r\nimport {\r\n    Form, FormControl, FormGroup, ControlLabel, Schema,\r\n    Notification, Steps, Panel, Button, InputPicker, Message\r\n} from 'rsuite';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\nexport default function AuthRenewPage(props) {\r\n\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const [position, setPosition] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [location, setlocation] = useState('');\r\n\r\n    const [authenticating, setAuthenticating] = useState(false);\r\n\r\n    const [step, setStep] = useState();\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const [organizations, setorganizations] = useState([]);\r\n    const [companyName, setcompanyName] = useState(\"\");\r\n    const [gitOrganization, setgitOrganization] = useState(null);\r\n\r\n    const getUserData = async () => {\r\n        let response = await util.FETCH_DATA(`api/users/getUserById/${sessionStorage.getItem('sprintCompassUser')}`);\r\n        if (response.status === 200) {\r\n            let user = response.data.user;\r\n            if (user.disabled) {\r\n                sessionStorage.removeItem('sprintCompassToken');\r\n                sessionStorage.removeItem('sprintCompassUser');\r\n                sessionStorage.removeItem('sprintCompassUserName');\r\n                sessionStorage.removeItem('sprintCompassUserRole');\r\n                window.open('/login', '_self');\r\n            }\r\n            else {\r\n                if (!!user.first_login) setStep(0);\r\n                else if (!!user.git_token) setStep(3);\r\n                else {\r\n                    setStep(2);\r\n                }\r\n                setuser(response.data.user);\r\n            }\r\n        }\r\n    };\r\n\r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            let message = \"Password Has Been Updated\";\r\n            let body = { old_password: currentPassord, new_password: newpassword };\r\n            let response = await util.UPDATE_DATA(`api/users/update_password`, body, message);\r\n            if (response.status === 200) {\r\n                setStep(1);\r\n            }\r\n            setloading(false);\r\n        }\r\n    }\r\n\r\n    const updateUserData = async () => {\r\n        if (position === \"\" && phone === \"\" && location === \"\") {\r\n            setStep(2);\r\n            return;\r\n        }\r\n        let message = \"Profile Has Been Updated\";\r\n        let body = { position, phone, location };\r\n        let response = await util.UPDATE_DATA(`api/users/update_user`, body, message);\r\n        if (response.status === 200) {\r\n            setStep(2);\r\n        }\r\n    }\r\n\r\n    const checkAuthorization = async () => {\r\n        if (util.getQueryVariable(\"error\") === \"access_denied\") {\r\n            Notification.error({\r\n                title: `Authorization Failed`,\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n        }\r\n        let code = util.getQueryVariable(\"code\");\r\n        if (code) {\r\n            const response = await util.FETCH_DATA(`gitauth/get_token?code=${code}`, \"Successfully authorized github\");\r\n            if (response.status === 200) {\r\n                setStep(3);\r\n\r\n                //remove code from the url withour reloading\r\n                let newUrl = window.location.origin + '/auth';\r\n                window.history.pushState({}, null, newUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    let getOrganizations = async () => {\r\n        const response = await util.FETCH_DATA(`api/git/getOrganizations`, \"No Notification\");\r\n        setorganizations(response.data.organizations);\r\n    }\r\n\r\n    let validateInvite = async () => {\r\n        const response = await util.FETCH_DATA(`gitauth/validateInvite`, \"Congratulations!\");\r\n        if (response.status === 200) {\r\n            props.history.push('/projects');\r\n        }\r\n    }\r\n\r\n    let submitOrganization = async () => {\r\n        if (!companyName || !gitOrganization) {\r\n            Notification.error({\r\n                title: \"Missing Fields\",\r\n                description: <div style={{ width: 220 }} rows={3} />,\r\n                placement: \"topEnd\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        let body = { name: companyName, organization: gitOrganization };\r\n        let response = await util.POST_DATA(`api/users/addClient`, body);\r\n\r\n        if (response.status === 200) {\r\n            props.history.push('/projects');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (step === 3 && user?.role === 'owner' && organizations.length === 0) {\r\n            getOrganizations();\r\n        }\r\n    }, [step, user]);\r\n\r\n    useEffect(() => {\r\n        checkAuthorization();\r\n        getUserData();\r\n    }, [])\r\n\r\n\r\n    const authorize = () => {\r\n        setAuthenticating(true);\r\n        let url = `https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&scope=admin:org%20repo%20delete_repo`;\r\n        window.open(url, \"_self\");\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: 'auto', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <div style={{ width: '100%', height: '80vh' }}>\r\n                <Steps current={step}>\r\n                    <Steps.Item title=\"Change Password\" />\r\n                    <Steps.Item title=\"Update Bio\" />\r\n                    <Steps.Item title=\"Authorize Github\" />\r\n                    {\r\n                        user && user.role === 'owner' ?\r\n                            <Steps.Item title=\"Choose Organization\" /> :\r\n                            <Steps.Item title=\"Accept Organization Invite\" />\r\n                    }\r\n                </Steps>\r\n                <hr />\r\n                <Panel style={{ height: '60vh' }} >\r\n                    <section style={{ display: 'flex', height: '60vh' }}>\r\n                        <div style={{ width: '50%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <img style={{ maxWidth: '550px' }} src={PasswordRenewSvg} alt=\"passwordrenewimg\" />\r\n                            }\r\n                            {\r\n                                step === 1 &&\r\n                                <img style={{ maxWidth: '550px' }} src={BioSvg} alt=\"profileimg\" />\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <img style={{ maxWidth: '550px' }} src={Gitsvg} alt=\"gitimg\" />\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <img style={{ maxWidth: '550px' }} src={OrganizationSvg} alt=\"orgImg\" />\r\n                            }\r\n                        </div>\r\n                        <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            {\r\n                                step === 0 &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                step === 1 && !!user &&\r\n                                <div>\r\n                                    <Form\r\n                                        onSubmit={() => updateUserData()}\r\n                                    >\r\n                                        <TextField\r\n                                            label='Job Title'\r\n                                            onChange={(value) => {\r\n                                                setPosition(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Phone'\r\n                                            onChange={(value) => {\r\n                                                setphone(value);\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            label='Location'\r\n                                            onChange={(value) => {\r\n                                                setlocation(value);\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            style={styles.update__button}\r\n                                        >\r\n                                            Update Bio\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                step === 2 &&\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={authenticating ? styles.disabled__button : styles.update__button}\r\n                                    onClick={authorize}\r\n                                    disabled={authenticating}\r\n                                >\r\n                                    Authorize Github\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                step === 3 &&\r\n                                <>\r\n                                    {\r\n                                        user && user.role === 'owner' &&\r\n                                        <div>\r\n                                            <Form\r\n                                                onSubmit={() => submitOrganization()}\r\n                                            >\r\n                                                <TextField\r\n                                                    label='Organization Name'\r\n                                                    onChange={(value) => {\r\n                                                        setcompanyName(value);\r\n                                                    }}\r\n                                                />\r\n                                                <InputPicker\r\n                                                    data={organizations}\r\n                                                    onChange={(value) => setgitOrganization(value)}\r\n                                                    block\r\n                                                    placeholder=\"Select a Github Organization\"\r\n                                                />\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    style={styles.update__button}\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        user && user.role !== 'owner' &&\r\n                                        <Message\r\n                                            showIcon\r\n                                            type=\"success\"\r\n                                            title=\"Invitation Sent\"\r\n                                            description={\r\n                                                <>\r\n                                                    We have sent you an email invitation to join the organization.<br />\r\n                                                    Please accept it and click finish.\r\n                                                </>\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                </Panel>\r\n                <hr />\r\n                <div style={{ float: 'right' }}>\r\n                    {step === 3 && user?.role !== \"owner\" &&\r\n                        <Button style={{ background: \"#193A5A\", color: \"#f5f5f5\", width: \"100px\" }} onClick={validateInvite}>\r\n                            Finish\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    disabled__button: {\r\n        marginTop: '50px',\r\n        background: 'grey',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n    next__button: {\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        float: 'right',\r\n        minWidth: '100px'\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/imagePlaceHolder.f0421300.svg\";","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport {\r\n    Icon, IconButton, Drawer, Button, Schema,\r\n    Form, FormControl, FormGroup, ControlLabel\r\n} from 'rsuite';\r\nimport ImageUploader from 'react-images-upload';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImagePlaceHolder from \"../assets/imagePlaceHolder.svg\";\r\nimport util from \"../utility/utils\";\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nexport default function Profile(props) {\r\n    const [editable, seteditable] = useState(false);\r\n    const [changeAttribute, setChangeAttribute] = useState('');\r\n    const [openDrawer, setopenDrawer] = useState(false);\r\n    const [loading, setloading] = useState(false);\r\n    const [validImage, setvalidImage] = useState(false);\r\n\r\n    const [id, setid] = useState(null);\r\n    const [user, setuser] = useState(null);\r\n\r\n    const [currentPassord, setcurrentPassord] = useState(\"\");\r\n    const [newpassword, setnewpassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n    const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n            Resizer.imageFileResizer(file, 800, 800, \"JPEG\", 100, 0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\"\r\n            );\r\n        });\r\n\r\n    const onDrop = async (picture) => {\r\n        if (picture[0]) {\r\n            const image = await resizeFile(picture[0]);\r\n            let userTemp = JSON.parse(JSON.stringify(user));\r\n            userTemp.image = image;\r\n            setuser(userTemp);\r\n            setvalidImage(true);\r\n        }\r\n    };\r\n\r\n    const getUserData = async (id) => {\r\n        let response = await util.FETCH_DATA(`api/users/getById/${id}`);\r\n        if (response.status === 200) {\r\n            setuser(response.data.user);\r\n        }\r\n    };\r\n\r\n    const updateUserData = async (status) => {\r\n        if (status) {\r\n            setloading(true);\r\n            setopenDrawer(false);\r\n            let body = { [changeAttribute.toLowerCase()]: user[changeAttribute.toLowerCase()]}\r\n            let message = `${changeAttribute} Has Been Updated`;\r\n            await util.UPDATE_DATA(`api/users`, body,message);\r\n            setChangeAttribute(null);\r\n            getUserData(id);\r\n            setloading(false);\r\n            setvalidImage(false);\r\n        }\r\n    }\r\n    \r\n    const changePassword = async (status) => {\r\n        if (status) {\r\n\r\n        let message = `Password Has Been Updated`;\r\n        let body ={\r\n                    old_password: currentPassord,\r\n                    new_password: newpassword\r\n                }\r\n            await util.UPDATE_DATA(`api/users/change_password`, body,message);\r\n             \r\n            setopenDrawer(false);\r\n            setChangeAttribute(null);\r\n            getUserData(id);\r\n            setloading(false);\r\n            setvalidImage(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let path = window.location.pathname.split('/');\r\n        let user_id = null;\r\n        if (path.length > 2) {\r\n            user_id = path[2];\r\n            seteditable(false);\r\n        } else {\r\n            seteditable(true);\r\n            user_id = sessionStorage.getItem('sprintCompassUser');\r\n        }\r\n        setid(user_id);\r\n        getUserData(user_id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {\r\n                (!user || loading) &&\r\n                <div style={{ height: '70vh' }}>\r\n                    <Loader\r\n                        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}\r\n                        type=\"ThreeDots\"\r\n                        color=\"#134069\"\r\n                        height={50}\r\n                        width={50}\r\n                    />\r\n                </div>\r\n            }\r\n            {user && !loading &&\r\n                <>\r\n                    <section style={styles.main}>\r\n                        <section style={styles.main__1}>\r\n                            {\r\n                                user.image ?\r\n                                    <img\r\n                                        style={styles.main__1__img}\r\n                                        src={user.image}\r\n                                        alt='dp'\r\n                                    /> :\r\n                                    <img\r\n                                        style={{ maxWidth: '500px', display: 'block', margin: 'auto' }}\r\n                                        src={ImagePlaceHolder}\r\n                                        alt='dp'\r\n                                    />\r\n                            }\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.change__image}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Image');\r\n                                    }}\r\n                                >\r\n                                    Change Image\r\n                                </div>\r\n                            )}\r\n                        </section>\r\n                        <section style={styles.main__2}>\r\n                            <div style={styles.name}>\r\n                                {`${user.firstname} ${user.lastname}`}\r\n                            </div>\r\n                            <div style={styles.profession}>\r\n                                {user.position && `${user.position}`}\r\n                                {editable && (\r\n                                    <span\r\n                                        style={styles.change}\r\n                                        onClick={() => {\r\n                                            setopenDrawer(true);\r\n                                            setChangeAttribute('Position');\r\n                                        }}\r\n                                    >\r\n                                        {user.position ? 'change' : 'Add Position'}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <section style={styles.info}>\r\n                                <div style={styles.attribute__container}>\r\n                                    <Icon size='2x' icon='send' style={styles.info__1} />\r\n                                    <div style={styles.info__2}>\r\n                                        {`${user.email}`}\r\n                                        {editable &&\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Email');\r\n                                                }}\r\n                                            >\r\n                                                change\r\n                                         </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.phone || editable) && <Icon size='2x' icon='phone' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.phone && `${user.phone}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Phone');\r\n                                                }}\r\n                                            >\r\n                                                {user.phone ? 'change' : 'Add Phone Number'}{' '}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.attribute__container}>\r\n                                    {(user.location || editable) && <Icon size='2x' icon='map-marker' style={styles.info__1} />}\r\n                                    <div style={styles.info__2}>\r\n                                        {user.location && `${user.location}`}\r\n                                        {editable && (\r\n                                            <span\r\n                                                style={styles.change}\r\n                                                onClick={() => {\r\n                                                    setopenDrawer(true);\r\n                                                    setChangeAttribute('Location');\r\n                                                }}\r\n                                            >\r\n                                                {user.location ? 'change' : 'Add Location'}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            {editable && (\r\n                                <div\r\n                                    style={styles.update__password}\r\n                                    onClick={() => {\r\n                                        setopenDrawer(true);\r\n                                        setChangeAttribute('Password');\r\n                                    }}\r\n                                >\r\n                                    Change Password\r\n                                </div>\r\n                            )}\r\n                            <IconButton\r\n                                style={{\r\n                                    width: '250px',\r\n                                    margin: '30px 0',\r\n                                    background: '#134069',\r\n                                    color: '#f5f5f5',\r\n                                }}\r\n                                icon={\r\n                                    <Icon\r\n                                        style={{ background: '#486b8c', color: '#f5f5f5' }}\r\n                                        icon='send'\r\n                                    />\r\n                                }\r\n                                placement='left'\r\n                            >\r\n                                Send Message\r\n                            </IconButton>\r\n                        </section>\r\n                    </section>\r\n\r\n                    <Drawer show={openDrawer} onHide={() => setopenDrawer(false)}>\r\n                        <Drawer.Header>\r\n                            <Drawer.Title>Add/Change {changeAttribute}</Drawer.Title>\r\n                        </Drawer.Header>\r\n                        <Drawer.Body style={styles.drawer__body}>\r\n                            {\r\n                                changeAttribute === 'Image' &&\r\n                                <>\r\n                                    <ImageUploader\r\n                                        withIcon={true}\r\n                                        onChange={(a, b) => onDrop(a, b)}\r\n                                        imgExtension={['.jpg', '.png']}\r\n                                        maxFileSize={2097152}\r\n                                        buttonText='Choose Image'\r\n                                        label=\"Maximum File Size: 2 mb, Accepted Formats: jpg, png\"\r\n                                    />\r\n                                    <Button\r\n                                        style={styles.update__button}\r\n                                        disabled={loading || !validImage}\r\n                                        onClick={() => {\r\n                                            updateUserData(!!user.image)\r\n                                        }}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            {\r\n                                (\r\n                                    changeAttribute === 'Position' ||\r\n                                    changeAttribute === 'Email' ||\r\n                                    changeAttribute === 'Location' ||\r\n                                    changeAttribute === 'Phone'\r\n                                )\r\n                                &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        [changeAttribute]: StringType().isRequired(`${changeAttribute} is required.`),\r\n                                    })}\r\n                                    onSubmit={(status) => { updateUserData(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        name={changeAttribute}\r\n                                        label={changeAttribute}\r\n                                        value={user[changeAttribute.toLowerCase()] ?? \"\"}\r\n                                        onChange={(value) => {\r\n                                            let userTemp = JSON.parse(JSON.stringify(user));\r\n                                            userTemp[changeAttribute.toLowerCase()] = value;\r\n                                            setuser(userTemp);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update {changeAttribute}\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                            {\r\n                                changeAttribute === \"Password\" &&\r\n                                <Form\r\n                                    model={Schema.Model({\r\n                                        currentPassword: StringType().isRequired(`Current Password is required.`),\r\n                                        newPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value.length < 8)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'Password must be atleast 8 characters long')\r\n                                            .isRequired(`New Password is required.`),\r\n                                        confirmPassword: StringType()\r\n                                            .addRule((value) => {\r\n                                                if (value !== newpassword)\r\n                                                    return false;\r\n                                                return true;\r\n                                            }, 'The two passwords do not match')\r\n                                            .isRequired('This field is required.')\r\n                                    })}\r\n                                    onSubmit={(status) => { changePassword(status) }}\r\n                                >\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='currentPassword'\r\n                                        label='Current Password'\r\n                                        onChange={(value) => {\r\n                                            setcurrentPassord(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='newPassword'\r\n                                        label='New Password'\r\n                                        onChange={(value) => {\r\n                                            setnewpassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        name='confirmPassword'\r\n                                        label='Confirm Password'\r\n                                        onChange={(value) => {\r\n                                            setconfirmPassword(value);\r\n                                        }}\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        style={styles.update__button}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Update Password\r\n                                    </Button>\r\n                                </Form>\r\n                            }\r\n                        </Drawer.Body>\r\n                    </Drawer>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        height: '600px',\r\n        width: '80%',\r\n        maxWidth: '1400px',\r\n        margin: '50px auto',\r\n    },\r\n    main__1: {\r\n        width: '50%',\r\n        margin: 'auto',\r\n    },\r\n    main__1__img: {\r\n        maxHeight: '100%',\r\n        maxWidth: '80%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n    },\r\n    main__2: {\r\n        flex: 1,\r\n        marginLeft: '5%',\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    name: {\r\n        fontSize: '25px',\r\n        fontWeight: 'bold',\r\n        width: '100%',\r\n        margin: '5px 0',\r\n    },\r\n    profession: {\r\n        fontSize: '15px',\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        margin: '50px 0',\r\n    },\r\n    attribute__container: {\r\n        display: 'flex',\r\n        margin: '25px 0',\r\n    },\r\n    info__1: {\r\n        width: '50px',\r\n    },\r\n    info__2: {\r\n        flex: 1,\r\n        fontSize: '17px',\r\n    },\r\n    change: {\r\n        marginLeft: '5px',\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        cursor: 'pointer'\r\n    },\r\n    change__image: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        marginTop: '15px',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    update__password: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n        fontSize: '15px',\r\n        width: '100%',\r\n        cursor: 'pointer'\r\n    },\r\n    drawer__body: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n    update__button: {\r\n        marginTop: '50px',\r\n        background: '#193A5A',\r\n        color: '#f5f5f5',\r\n        minWidth: '300px',\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Avatar, Progress, Icon, InputPicker, Toggle, Drawer, Button } from \"rsuite\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './userTable.css';\r\nimport util from '../../utility/utils';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\nconst UserRoles = [\r\n\t{ label: \"Admin\", value: \"admin\" },\r\n\t{ label: \"Member\", value: \"member\" },\r\n];\r\nexport default function UsersTable(props) {\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [selectedRole, setSelectedRole] = useState(-1);\r\n\tconst [sortColumn, setSortColumn] = useState(null);\r\n\tconst [selectedUser, setSelectedUser] = useState(null);\r\n\tconst [sortType, setSortType] = useState(\"asc\");\r\n\tconst [openDrawer, setOpenDrawer] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState(false);\r\n\r\n\tconst [loading, setloading] = useState(false);\r\n\r\n\tconst getUsers = async () => {\r\n\t\tsetloading(true);\r\n\t\tconst response = await util.FETCH_DATA(`api/users`, \"No Notification\");\r\n\t\tlet filteredUsers = response.data.users.filter((user) => {\r\n\t\t\tif (user.role.toLowerCase() !== \"owner\") return user;\r\n\t\t\treturn undefined;\r\n\t\t});\r\n\t\tsetUsers(filteredUsers);\r\n\t\tsetloading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUsers();\r\n\t}, []);\r\n\r\n\tconst getData = () => {\r\n\t\tif (sortColumn && sortType) {\r\n\t\t\treturn users.sort((a, b) => {\r\n\t\t\t\tlet x = a[sortColumn];\r\n\t\t\t\tlet y = b[sortColumn];\r\n\t\t\t\tif (sortType === \"asc\") {\r\n\t\t\t\t\treturn x.localeCompare(y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn y.localeCompare(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn users;\r\n\t};\r\n\r\n\tconst ImageCell = ({ rowData, dataKey, ...props }) => {\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ padding: 8 }}>\r\n\t\t\t\t<Avatar circle src={rowData[dataKey]} />\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst TagCell = ({ rowData, dataKey, ...props }) => {\r\n\t\tlet colour = rowData[dataKey] ? \"blue\" : \"green\";\r\n\t\tlet content = rowData[dataKey] ? \"Disabled\" : \"Active\";\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props} style={{ margin: 2, alignContent: \"center\" }}>\r\n\t\t\t\t<Tag color={colour}>{content}</Tag>\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst ProcessCell = ({ rowData, ...props }) => {\r\n\t\tlet percentage = Math.trunc(((!rowData.first_login + !!rowData.git_token + rowData.invitation_accepted) / 3) * 100);\r\n\t\tpercentage = isNaN(percentage) ? 0 : percentage;\r\n\r\n\t\treturn (\r\n\t\t\t<Cell {...props}>\r\n\t\t\t\t{percentage === 0 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : percentage === 100 ? (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} status=\"success\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div style={{ width: '35px' }}>\r\n\t\t\t\t\t\t<Progress.Circle percent={percentage} strokeColor=\"#ffc107\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleSortColumn = (sortColumn, sortType) => {\r\n\t\tsetSortColumn(sortColumn);\r\n\t\tsetSortType(sortType);\r\n\t};\r\n\r\n\tlet close = () => {\r\n\t\tsetOpenDrawer(false);\r\n\t};\r\n\r\n\tconst PassFailIcon = (pass) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{pass ? (\r\n\t\t\t\t\t<Icon icon=\"check-circle\" style={{ margin: 5, color: \"green\" }} size=\"2x\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Icon icon=\"close-circle\" style={{ margin: 5, color: \"red\" }} size=\"2x\" />\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst updateUser = async () => {\r\n\t\tlet message = \"User Has Been Updated\"\r\n\t\tlet body = { id: selectedUser._id, role: selectedRole, disabled: userStatus };\r\n\t\tawait util.UPDATE_DATA(`api/users/updateUserById`, body, message);\r\n\t\tsetOpenDrawer(false);\r\n\t\tgetUsers();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tloading ?\r\n\t\t\t\t\t<Loader\r\n\t\t\t\t\t\ttype=\"ThreeDots\"\r\n\t\t\t\t\t\tcolor=\"#134069\"\r\n\t\t\t\t\t\theight={50}\r\n\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\twidth={1000}\r\n\t\t\t\t\t\theight={600}\r\n\t\t\t\t\t\tdata={getData()}\r\n\t\t\t\t\t\trowHeight={65}\r\n\t\t\t\t\t\tsortColumn={sortColumn}\r\n\t\t\t\t\t\tsortType={sortType}\r\n\t\t\t\t\t\tonSortColumn={handleSortColumn}\r\n\t\t\t\t\t\tonRowClick={(data) => {\r\n\t\t\t\t\t\t\tsetSelectedRole(data.role);\r\n\t\t\t\t\t\t\tsetSelectedUser(data);\r\n\t\t\t\t\t\t\tsetOpenDrawer(true);\r\n\t\t\t\t\t\t\tsetUserStatus(data.disabled);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Column width={100} fixed>\r\n\t\t\t\t\t\t\t<HeaderCell />\r\n\t\t\t\t\t\t\t<ImageCell dataKey=\"git_avatar\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>First Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"firstname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Last Name</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"lastname\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={200} fixed sortable>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>User Role</HeaderCell>\r\n\t\t\t\t\t\t\t<Cell style={styles.cell} dataKey=\"role\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={100}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Status</HeaderCell>\r\n\t\t\t\t\t\t\t<TagCell dataKey=\"disabled\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column width={150}>\r\n\t\t\t\t\t\t\t<HeaderCell style={styles.header}>Onboarding</HeaderCell>\r\n\t\t\t\t\t\t\t<ProcessCell />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t</Table>\r\n\t\t\t}\r\n\t\t\t<Drawer\r\n\t\t\t\tshow={openDrawer}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tclose();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Drawer.Header>\r\n\t\t\t\t\t<Drawer.Title>User Information</Drawer.Title>\r\n\t\t\t\t</Drawer.Header>\r\n\t\t\t\t<Drawer.Body>\r\n\t\t\t\t\t<div className='user__info__container'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>User Name</div>\r\n\t\t\t\t\t\t\t<div>{selectedUser?.firstname} {selectedUser?.lastname}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Account Activated</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(!selectedUser?.first_login)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Github Authorized</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.git_token)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>Joined Organization</div>\r\n\t\t\t\t\t\t\t<div>{PassFailIcon(selectedUser?.invitation_accepted)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"rs-control-label\">User Role</label>\r\n\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t<InputPicker\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '150px' }}\r\n\t\t\t\t\t\t\t\t\tdata={UserRoles}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"User Role\"\r\n\t\t\t\t\t\t\t\t\tvalue={selectedRole}\r\n\t\t\t\t\t\t\t\t\tcleanable={false}\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => setSelectedRole(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>User Enabled</label>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Toggle\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '30px', textAlign: 'center' }}\r\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\t\t\tchecked={!userStatus}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setUserStatus(!userStatus)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tappearance=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => updateUser()}\r\n\t\t\t\t\t\t\tstyle={{ width: 250 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate User\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer.Body>\r\n\t\t\t</Drawer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\tcolor: 'black',\r\n\t},\r\n\tcell: {\r\n\t\tcolor: 'black'\r\n\t},\r\n};\r\n","export default __webpack_public_path__ + \"static/media/admin.c410cff4.svg\";","import React, { useState } from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport utils from \"../../utility/utils\"\r\nimport {\r\n    Form, FormGroup, ControlLabel, Icon, Button, FormControl, Schema, Message\r\n} from 'rsuite';\r\nimport './adminPage.css';\r\nimport UsersTable from './UsersTable';\r\nimport AdminSvg from '../../assets/admin.svg';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst adminFunctions = [\r\n    { key: 1, name: 'Create User', icon: 'user-plus' },\r\n    { key: 3, name: 'Manage Users', icon: 'setting' },\r\n    { key: 4, name: 'App Settings', icon: 'laptop' },\r\n    { key: 5, name: 'Github Settings', icon: 'github' },\r\n    { key: 6, name: 'Reports', icon: 'file-text-o' },\r\n    { key: 7, name: 'Data Management', icon: 'database' }\r\n];\r\n\r\nexport default function AdminPage() {\r\n    const [activeKey, setactiveKey] = useState(0);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <section className=\"adminContainer\">\r\n                <section className=\"adminContainer__1\">\r\n                    {\r\n                        adminFunctions.map(f => {\r\n                            return <FunctionCard\r\n                                key={f.key}\r\n                                function={f}\r\n                                active={f.key === activeKey}\r\n                                makeActiveKey={() => setactiveKey(f.key)}\r\n                            />\r\n                        })\r\n                    }\r\n                </section>\r\n                <section className=\"adminContainer__2\">\r\n                    {\r\n                        activeKey === 0 &&\r\n                        <section className=\"adminHome\">\r\n                            <img src={AdminSvg} alt=\"adminSvg\" />\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 1 &&\r\n                        <section className=\"functionContainer\">\r\n                            <div>\r\n                                <img src={AdminSvg} alt=\"adminSvg\" />\r\n                            </div>\r\n                            <div>\r\n                                <AddUserCard />\r\n                            </div>\r\n                        </section>\r\n                    }\r\n                    {\r\n                        activeKey === 3 &&\r\n                        <div>\r\n                            <UsersTable />\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet FunctionCard = (props) => {\r\n    return (\r\n        <section\r\n            className=\"functionCard\"\r\n            onClick={props.makeActiveKey}\r\n            style={{ color: props.active ? '#134069' : '' }}\r\n        >\r\n            <div>\r\n                <Icon icon={props.function.icon} size='2x' />\r\n            </div>\r\n            <div style={{ fontWeight: props.active ? 700 : 500 }}>\r\n                {props.function.name}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nlet AddUserCard = () => {\r\n    const [firstname, setfirstname] = useState(\"\");\r\n    const [lastname, setlastname] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n\r\n    const addUser = async (status) => {\r\n        if (status) {\r\n            let message = \"Successfully Created the User\";\r\n            let body = {firstname, lastname, email};\r\n            const response = await utils.POST_DATA('api/users/create', body, message);\r\n            if (response.status === 200) {\r\n                setfirstname('');\r\n                setlastname('');\r\n                setemail('');\r\n            }else{\r\n                setemail('');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            className=\"addUserForm\"\r\n            model={registerModel}\r\n            onSubmit={(status) => { addUser(status) }}\r\n        >\r\n            <TextField\r\n                name=\"firstname\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(value) => setfirstname(value)}\r\n            />\r\n            <TextField\r\n                name=\"lastname\"\r\n                label=\"Last Name\"\r\n                value={lastname}\r\n                onChange={(value) => setlastname(value)}\r\n            />\r\n            <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={(value) => setemail(value)}\r\n            />\r\n            <Message\r\n                showIcon\r\n                type=\"info\"\r\n                title=\"Did you know?\"\r\n                description=\"The new user will get an email with the temperory password\"\r\n            />\r\n            <Button\r\n                appearance=\"primary\"\r\n                type=\"submit\"\r\n                style={{ width: '100%', marginTop: '20px' }}\r\n                disabled={!firstname || !lastname || !email}\r\n            >\r\n                Create User\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction TextField(props) {\r\n    const { name, label, accepter, type, ...rest } = props;\r\n    return (\r\n        <FormGroup>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl name={name} type={type} accepter={accepter} {...rest} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n//data validation for add user\r\nconst registerModel = Schema.Model({\r\n    firstname: StringType().isRequired('First Name is required.'),\r\n    lastname: StringType().isRequired('Last Name is required.'),\r\n    email: StringType().isEmail('Please enter a valid email address.').isRequired('Email is required.'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport utils from \"../../utility/utils\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst CURRENT_USER = sessionStorage.getItem('sprintCompassUser');\r\n\r\nfunction CollaborateSection1(props) {\r\n\r\n    const [currentuser, setcurrentuser] = useState(null);\r\n    const [chatGroups, setchatGroups] = useState(null);\r\n    const [loading, setloading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = async () => {\r\n        let response = await utils.FETCH_DATA(`api/collaborate/getAll`);\r\n        setchatGroups(response.data.chatgroups);\r\n        response = await utils.FETCH_DATA(`api/users/getById/${CURRENT_USER}`);\r\n        setcurrentuser(response.data.user);\r\n        setloading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <section className=\"loader__section\">\r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#134069\"\r\n                            height={50}\r\n                            width={50}\r\n                        />\r\n                    </section> :\r\n                    <>\r\n                        <section className=\"ch__profile\">\r\n                            <div>\r\n                                <img\r\n                                    src={currentuser.git_avatar}\r\n                                    alt=\"profilepic\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 5 }}>\r\n                                    {`${currentuser.firstname}  ${currentuser.lastname}`}\r\n                                </div>\r\n                                <div>{currentuser.position}</div>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"ch__list\">\r\n                            <div style={{ fontSize: 17, fontWeight: 'bold', margin: '30px 0', textAlign: 'center' }}>\r\n                                Active Conversations\r\n                            </div>\r\n                            {\r\n                                chatGroups.map((cg, i) =>\r\n                                    <UserItem\r\n                                        key={i}\r\n                                        user={cg.users.find(u => u._id !== CURRENT_USER)}\r\n                                        chatGroup={cg}\r\n                                        selectedChatGroup={props.selectedChatGroup}\r\n                                        select={(val) => props.selectChatGroup(val)}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        </section>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollaborateSection1;\r\n\r\nfunction UserItem({ user, chatGroup, selectedChatGroup, select }) {\r\n    return (\r\n        <section\r\n            className=\"user__item\"\r\n            style={{ background: selectedChatGroup?._id === chatGroup._id ? '#edf0f5' : 'none' }}\r\n            onClick={() => select(chatGroup)}\r\n        >\r\n            <div>\r\n                <img\r\n                    src={user.git_avatar}\r\n                    alt=\"profilepic\"\r\n                />\r\n            </div>\r\n            <div>\r\n                {`${user.firstname} ${user.lastname}`}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/chat.eac19e8d.svg\";","import React, { useEffect, useState } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport { Input, Icon, IconButton, ButtonToolbar } from 'rsuite';\r\nimport chatSvg from '../../assets/chat.svg';\r\nfunction CollaborateSection2(props) {\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        serverConnect();\r\n    }, []);\r\n\r\n    const serverConnect = () => {\r\n        try {\r\n            const socket = io.connect(process.env.REACT_APP_SOCKET, {\r\n                forceNew: true,\r\n                transports: [\"websocket\"],\r\n            });\r\n            socket.on(\"connect\", () =>\r\n                console.log(`Is this client is connected? - ${socket.connected}`)\r\n            );\r\n        } catch (err) {\r\n            setMsg(\"client connection failed\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                !props.selectedChatGroup ?\r\n                    <>\r\n                        <section className=\"chat__section\">\r\n                            <section className=\"chat__section__empty\">\r\n                                <div>\r\n                                    <img src={chatSvg} alt=\"chatsvg\" />\r\n                                </div>\r\n                            </section>\r\n                        </section>\r\n                    </> :\r\n                    <>\r\n                        <section className=\"chat__section\">\r\n                            <section className=\"chat__area\">\r\n                                <MessageComponent\r\n                                    content=\"Hello Dan\"\r\n                                    isAuthor={true}\r\n                                />\r\n                                <MessageComponent\r\n                                    content=\"Hello there, How are you?\"\r\n                                    isAuthor={false}\r\n                                />\r\n                                <MessageComponent\r\n                                    content=\"Not bad, what are you up to?\"\r\n                                    isAuthor={true}\r\n                                />\r\n                                <MessageComponent\r\n                                    content=\"Just watching footbal. How about you?\"\r\n                                    isAuthor={false}\r\n                                />\r\n                                <MessageComponent\r\n                                    content=\"Doing home work, so boring\"\r\n                                    isAuthor={true}\r\n                                />\r\n\r\n                            </section>\r\n                            <section className=\"chat__send\">\r\n                                <Input\r\n                                    placeholder=\"Enter your message here\"\r\n                                    style={{ width: '80%', height: '45px', border: '1px solid #d4d4d4' }}\r\n                                />\r\n                                <ButtonToolbar>\r\n                                    <IconButton\r\n                                        style={{ width: \"130px\", height: '45px', background: '#134069', color: '#f5f5f5' }}\r\n                                        icon={\r\n                                            <Icon\r\n                                                icon=\"send\"\r\n                                                style={{ height: '45px', background: '#134069', color: '#f5f5f5' }}\r\n                                            />\r\n                                        }\r\n                                        placement=\"right\"\r\n                                    >\r\n                                        Send\r\n                                    </IconButton>\r\n                                </ButtonToolbar>\r\n                            </section>\r\n                        </section>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollaborateSection2;\r\n\r\nfunction MessageComponent({ content, isAuthor }) {\r\n    return (\r\n        <section\r\n            className=\"msg__component\"\r\n            style={{ flexDirection: isAuthor ? 'row-reverse' : 'row' }}\r\n        >\r\n            <div>\r\n                <img\r\n                    src=\"https://avatars.githubusercontent.com/u/38032299?v=4\"\r\n                    alt=\"profilepic\"\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"msg\"\r\n                style={{\r\n                    background: isAuthor ? '#134069' : '#FEFDFF',\r\n                    color: isAuthor ? '#f5f5f5' : '#575757'\r\n                }}\r\n            >\r\n                {content}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction collaborateSection3() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default collaborateSection3\r\n","import React, { useState } from 'react';\r\nimport Navbar from '../Navbar';\r\nimport './collaborate.css';\r\nimport CollaborateSection1 from \"./collaborateSection1\";\r\nimport CollaborateSection2 from \"./collaborateSection2\";\r\nimport CollaborateSection3 from \"./collaborateSection3\";\r\n\r\nfunction CollaborateHome() {\r\n    const [selectedChatGroup, setselectedChatGroup] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <section className=\"collaborate__home\">\r\n                <section className='ch__1'>\r\n                    <CollaborateSection1\r\n                        selectedChatGroup={selectedChatGroup}\r\n                        selectChatGroup={(_id) => setselectedChatGroup(_id)}\r\n                    />\r\n                </section>\r\n                <section className='ch__2'>\r\n                    <CollaborateSection2\r\n                        selectedChatGroup={selectedChatGroup}\r\n                    />\r\n                </section>\r\n                <section className='ch__3'>\r\n                    <CollaborateSection3 />\r\n                </section>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollaborateHome;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from './components/Login';\r\nimport Demo from './components/Demo';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport AuthRenewRoute from './components/AuthRenew/AuthRenewRoute';\r\nimport ProjectBoard from './components/Sprint/ProjectBoard';\r\nimport Projects from './components/Projects';\r\nimport AuthRenewPage from './components/AuthRenew/AuthRenewPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport Profile from \"./components/Profile\";\r\nimport adminPage from \"./components/Admin/adminPage\";\r\nimport CollaborateHome from \"./components/collaborate/collaborateHome\";\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        <Route path=\"/runtime_demo\" render={() => <Demo />} />\r\n        <Route path=\"/ResetPassword\" render={() => <ResetPassword />} />\r\n        <PrivateRoute path=\"/myprojects\" component={aaa} />\r\n        <PrivateRoute exact path=\"/projects\" component={Projects} />\r\n        <PrivateRoute exact path=\"/project/:id\" component={ProjectBoard} />\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" component={adminPage} />\r\n        <PrivateRoute path=\"/collaborate\" component={CollaborateHome} />\r\n        <AuthRenewRoute path=\"/auth\" component={AuthRenewPage} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nlet aaa = () => <div>rere</div>","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}